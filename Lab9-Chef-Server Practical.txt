       # These settings are ignored on a master server.

      -#primary_conninfo = ''                   # connection string to sending server
      -#primary_slot_name = ''                  # replication slot on sending server
      -#promote_trigger_file = ''               # file name whose presence ends recovery
      -#hot_standby = on                        # "off" disallows queries during recovery
      -                                 # (change requires restart)
      -#max_standby_archive_delay = 30s # max delay before canceling queries
      -                                 # when reading WAL from archive;
      -                                 # -1 allows indefinite delay
      -#max_standby_streaming_delay = 30s       # max delay before canceling queries
      -                                 # when reading streaming WAL;
      -                                 # -1 allows indefinite delay
      -#wal_receiver_create_temp_slot = off     # create temp slot if primary_slot_name
      -                                 # is not set
      -#wal_receiver_status_interval = 10s      # send replies at least this often
      -                                 # 0 disables
      -#hot_standby_feedback = off              # send info from standby to prevent
      -                                 # query conflicts
      -#wal_receiver_timeout = 60s              # time that receiver waits for
      -                                 # communication from master
      -                                 # in milliseconds; 0 disables
      -#wal_retrieve_retry_interval = 5s        # time to wait before retrying to
      -                                 # retrieve WAL after a failed attempt
      -#recovery_min_apply_delay = 0            # minimum delay for applying changes during recovery
      +#primary_conninfo = ''          # connection string to sending server
      +#primary_slot_name = ''         # replication slot on sending server
      +#promote_trigger_file = ''      # file name whose presence ends recovery
      +#hot_standby = on           # "off" disallows queries during recovery
      +                    # (change requires restart)
      +#max_standby_archive_delay = 30s    # max delay before canceling queries
      +                    # when reading WAL from archive;
      +                    # -1 allows indefinite delay
      +#max_standby_streaming_delay = 30s  # max delay before canceling queries
      +                    # when reading streaming WAL;
      +                    # -1 allows indefinite delay
      +#wal_receiver_create_temp_slot = off    # create temp slot if primary_slot_name
      +                    # is not set
      +#wal_receiver_status_interval = 10s # send replies at least this often
      +                    # 0 disables
      +#hot_standby_feedback = off     # send info from standby to prevent
      +                    # query conflicts
      +#wal_receiver_timeout = 60s     # time that receiver waits for
      +                    # communication from master
      +                    # in milliseconds; 0 disables
      +#wal_retrieve_retry_interval = 5s   # time to wait before retrying to
      +                    # retrieve WAL after a failed attempt
      +#recovery_min_apply_delay = 0       # minimum delay for applying changes during recovery

       # - Subscribers -

       # These settings are ignored on a publisher.

      -#max_logical_replication_workers = 4     # taken from max_worker_processes
      -                                 # (change requires restart)
      -#max_sync_workers_per_subscription = 2   # taken from max_logical_replication_workers
      +#max_logical_replication_workers = 4    # taken from max_worker_processes
      +                    # (change requires restart)
      +#max_sync_workers_per_subscription = 2  # taken from max_logical_replication_workers


       #------------------------------------------------------------------------------
      @@ -372,49 +372,49 @@

       # - Planner Cost Constants -

      -#seq_page_cost = 1.0                     # measured on an arbitrary scale
      -#random_page_cost = 4.0                  # same scale as above
      -#cpu_tuple_cost = 0.01                   # same scale as above
      -#cpu_index_tuple_cost = 0.005            # same scale as above
      -#cpu_operator_cost = 0.0025              # same scale as above
      -#parallel_tuple_cost = 0.1               # same scale as above
      -#parallel_setup_cost = 1000.0    # same scale as above
      +#seq_page_cost = 1.0            # measured on an arbitrary scale
      +#random_page_cost = 4.0         # same scale as above
      +#cpu_tuple_cost = 0.01          # same scale as above
      +#cpu_index_tuple_cost = 0.005       # same scale as above
      +#cpu_operator_cost = 0.0025     # same scale as above
      +#parallel_tuple_cost = 0.1      # same scale as above
      +#parallel_setup_cost = 1000.0   # same scale as above

      -#jit_above_cost = 100000         # perform JIT compilation if available
      -                                 # and query more expensive than this;
      -                                 # -1 disables
      -#jit_inline_above_cost = 500000          # inline small functions if query is
      -                                 # more expensive than this; -1 disables
      -#jit_optimize_above_cost = 500000        # use expensive JIT optimizations if
      -                                 # query is more expensive than this;
      -                                 # -1 disables
      +#jit_above_cost = 100000        # perform JIT compilation if available
      +                    # and query more expensive than this;
      +                    # -1 disables
      +#jit_inline_above_cost = 500000     # inline small functions if query is
      +                    # more expensive than this; -1 disables
      +#jit_optimize_above_cost = 500000   # use expensive JIT optimizations if
      +                    # query is more expensive than this;
      +                    # -1 disables

       #min_parallel_table_scan_size = 8MB
       #min_parallel_index_scan_size = 512kB
      -#effective_cache_size = 4GB
      +effective_cache_size = 1956MB # Default 128MB

       # - Genetic Query Optimizer -

       #geqo = on
       #geqo_threshold = 12
      -#geqo_effort = 5                 # range 1-10
      -#geqo_pool_size = 0                      # selects default based on effort
      -#geqo_generations = 0                    # selects default based on effort
      -#geqo_selection_bias = 2.0               # range 1.5-2.0
      -#geqo_seed = 0.0                 # range 0.0-1.0
      +#geqo_effort = 5            # range 1-10
      +#geqo_pool_size = 0         # selects default based on effort
      +#geqo_generations = 0           # selects default based on effort
      +#geqo_selection_bias = 2.0      # range 1.5-2.0
      +#geqo_seed = 0.0            # range 0.0-1.0

       # - Other Planner Options -

      -#default_statistics_target = 100 # range 1-10000
      -#constraint_exclusion = partition        # on, off, or partition
      -#cursor_tuple_fraction = 0.1             # range 0.0-1.0
      +#default_statistics_target = 100    # range 1-10000
      +#constraint_exclusion = partition   # on, off, or partition
      +#cursor_tuple_fraction = 0.1        # range 0.0-1.0
       #from_collapse_limit = 8
      -#join_collapse_limit = 8         # 1 disables collapsing of explicit
      -                                 # JOIN clauses
      +#join_collapse_limit = 8        # 1 disables collapsing of explicit
      +                    # JOIN clauses
       #force_parallel_mode = off
      -#jit = on                                # allow JIT compilation
      -#plan_cache_mode = auto                  # auto, force_generic_plan or
      -                                 # force_custom_plan
      +#jit = on               # allow JIT compilation
      +#plan_cache_mode = auto         # auto, force_generic_plan or
      +                    # force_custom_plan


       #------------------------------------------------------------------------------
      @@ -423,37 +423,37 @@

       # - Where to Log -

      -#log_destination = 'stderr'              # Valid values are combinations of
      -                                 # stderr, csvlog, syslog, and eventlog,
      -                                 # depending on platform.  csvlog
      -                                 # requires logging_collector to be on.
      +#log_destination = 'stderr'     # Valid values are combinations of
      +                    # stderr, csvlog, syslog, and eventlog,
      +                    # depending on platform.  csvlog
      +                    # requires logging_collector to be on.

       # This is used when logging to stderr:
      -#logging_collector = off         # Enable capturing of stderr and csvlog
      -                                 # into log files. Required to be on for
      -                                 # csvlogs.
      -                                 # (change requires restart)
      +#logging_collector = off        # Enable capturing of stderr and csvlog
      +                    # into log files. Required to be on for
      +                    # csvlogs.
      +                    # (change requires restart)

       # These are only used if logging_collector is on:
      -#log_directory = 'log'                   # directory where log files are written,
      -                                 # can be absolute or relative to PGDATA
      -#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log' # log file name pattern,
      -                                 # can include strftime() escapes
      -#log_file_mode = 0600                    # creation mode for log files,
      -                                 # begin with 0 to use octal notation
      -#log_truncate_on_rotation = off          # If on, an existing log file with the
      -                                 # same name as the new log file will be
      -                                 # truncated rather than appended to.
      -                                 # But such truncation only occurs on
      -                                 # time-driven rotation, not on restarts
      -                                 # or size-driven rotation.  Default is
      -                                 # off, meaning append to existing files
      -                                 # in all cases.
      -#log_rotation_age = 1d                   # Automatic rotation of logfiles will
      -                                 # happen after that time.  0 disables.
      -#log_rotation_size = 10MB                # Automatic rotation of logfiles will
      -                                 # happen after that much log output.
      -                                 # 0 disables.
      +#log_directory = 'log'          # directory where log files are written,
      +                    # can be absolute or relative to PGDATA
      +#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'    # log file name pattern,
      +                    # can include strftime() escapes
      +#log_file_mode = 0600           # creation mode for log files,
      +                    # begin with 0 to use octal notation
      +#log_truncate_on_rotation = off     # If on, an existing log file with the
      +                    # same name as the new log file will be
      +                    # truncated rather than appended to.
      +                    # But such truncation only occurs on
      +                    # time-driven rotation, not on restarts
      +                    # or size-driven rotation.  Default is
      +                    # off, meaning append to existing files
      +                    # in all cases.
      +#log_rotation_age = 1d          # Automatic rotation of logfiles will
      +                    # happen after that time.  0 disables.
      +#log_rotation_size = 10MB       # Automatic rotation of logfiles will
      +                    # happen after that much log output.
      +                    # 0 disables.

       # These are relevant when logging to syslog:
       #syslog_facility = 'LOCAL0'
      @@ -467,53 +467,54 @@

       # - When to Log -

      -#log_min_messages = warning              # values in order of decreasing detail:
      -                                 #   debug5
      -                                 #   debug4
      -                                 #   debug3
      -                                 #   debug2
      -                                 #   debug1
      -                                 #   info
      -                                 #   notice
      -                                 #   warning
      -                                 #   error
      -                                 #   log
      -                                 #   fatal
      -                                 #   panic
      +#log_min_messages = warning     # values in order of decreasing detail:
      +                    #   debug5
      +                    #   debug4
      +                    #   debug3
      +                    #   debug2
      +                    #   debug1
      +                    #   info
      +                    #   notice
      +                    #   warning
      +                    #   error
      +                    #   log
      +                    #   fatal
      +                    #   panic

      -#log_min_error_statement = error # values in order of decreasing detail:
      -                                 #   debug5
      -                                 #   debug4
      -                                 #   debug3
      -                                 #   debug2
      -                                 #   debug1
      -                                 #   info
      -                                 #   notice
      -                                 #   warning
      -                                 #   error
      -                                 #   log
      -                                 #   fatal
      -                                 #   panic (effectively off)
      +#log_min_error_statement = error    # values in order of decreasing detail:
      +                    #   debug5
      +                    #   debug4
      +                    #   debug3
      +                    #   debug2
      +                    #   debug1
      +                    #   info
      +                    #   notice
      +                    #   warning
      +                    #   error
      +                    #   log
      +                    #   fatal
      +                    #   panic (effectively off)

      -#log_min_duration_statement = -1 # -1 is disabled, 0 logs all statements
      -                                 # and their durations, > 0 logs only
      -                                 # statements running at least this number
      -                                 # of milliseconds
      +#log_min_duration_statement = -1    # -1 is disabled, 0 logs all statements
      +                    # and their durations, > 0 logs only
      +                    # statements running at least this number
      +                    # of milliseconds
      +log_min_duration_statement = -1

      -#log_min_duration_sample = -1            # -1 is disabled, 0 logs a sample of statements
      -                                 # and their durations, > 0 logs only a sample of
      -                                 # statements running at least this number
      -                                 # of milliseconds;
      -                                 # sample fraction is determined by log_statement_sample_rate
      +#log_min_duration_sample = -1       # -1 is disabled, 0 logs a sample of statements
      +                    # and their durations, > 0 logs only a sample of
      +                    # statements running at least this number
      +                    # of milliseconds;
      +                    # sample fraction is determined by log_statement_sample_rate

      -#log_statement_sample_rate = 1.0 # fraction of logged statements exceeding
      -                                 # log_min_duration_sample to be logged;
      -                                 # 1.0 logs all such statements, 0.0 never logs
      +#log_statement_sample_rate = 1.0    # fraction of logged statements exceeding
      +                    # log_min_duration_sample to be logged;
      +                    # 1.0 logs all such statements, 0.0 never logs


      -#log_transaction_sample_rate = 0.0       # fraction of transactions whose statements
      -                                 # are logged regardless of their duration; 1.0 logs all
      -                                 # statements from all transactions, 0.0 never logs
      +#log_transaction_sample_rate = 0.0  # fraction of transactions whose statements
      +                    # are logged regardless of their duration; 1.0 logs all
      +                    # statements from all transactions, 0.0 never logs

       # - What to Log -

      @@ -525,50 +526,50 @@
       #log_connections = off
       #log_disconnections = off
       #log_duration = off
      -#log_error_verbosity = default           # terse, default, or verbose messages
      +#log_error_verbosity = default      # terse, default, or verbose messages
       #log_hostname = off
      -#log_line_prefix = '%m [%p] '            # special values:
      -                                 #   %a = application name
      -                                 #   %u = user name
      -                                 #   %d = database name
      -                                 #   %r = remote host and port
      -                                 #   %h = remote host
      -                                 #   %b = backend type
      -                                 #   %p = process ID
      -                                 #   %t = timestamp without milliseconds
      -                                 #   %m = timestamp with milliseconds
      -                                 #   %n = timestamp with milliseconds (as a Unix epoch)
      -                                 #   %i = command tag
      -                                 #   %e = SQL state
      -                                 #   %c = session ID
      -                                 #   %l = session line number
      -                                 #   %s = session start timestamp
      -                                 #   %v = virtual transaction ID
      -                                 #   %x = transaction ID (0 if none)
      -                                 #   %q = stop here in non-session
      -                                 #        processes
      -                                 #   %% = '%'
      -                                 # e.g. '<%u%%%d> '
      -#log_lock_waits = off                    # log lock waits >= deadlock_timeout
      -#log_parameter_max_length = -1           # when logging statements, limit logged
      -                                 # bind-parameter values to N bytes;
      -                                 # -1 means print in full, 0 disables
      -#log_parameter_max_length_on_error = 0   # when logging an error, limit logged
      -                                 # bind-parameter values to N bytes;
      -                                 # -1 means print in full, 0 disables
      -#log_statement = 'none'                  # none, ddl, mod, all
      +#log_line_prefix = '%m [%p] '       # special values:
      +                    #   %a = application name
      +                    #   %u = user name
      +                    #   %d = database name
      +                    #   %r = remote host and port
      +                    #   %h = remote host
      +                    #   %b = backend type
      +                    #   %p = process ID
      +                    #   %t = timestamp without milliseconds
      +                    #   %m = timestamp with milliseconds
      +                    #   %n = timestamp with milliseconds (as a Unix epoch)
      +                    #   %i = command tag
      +                    #   %e = SQL state
      +                    #   %c = session ID
      +                    #   %l = session line number
      +                    #   %s = session start timestamp
      +                    #   %v = virtual transaction ID
      +                    #   %x = transaction ID (0 if none)
      +                    #   %q = stop here in non-session
      +                    #        processes
      +                    #   %% = '%'
      +                    # e.g. '<%u%%%d> '
      +#log_lock_waits = off           # log lock waits >= deadlock_timeout
      +#log_parameter_max_length = -1      # when logging statements, limit logged
      +                    # bind-parameter values to N bytes;
      +                    # -1 means print in full, 0 disables
      +#log_parameter_max_length_on_error = 0  # when logging an error, limit logged
      +                    # bind-parameter values to N bytes;
      +                    # -1 means print in full, 0 disables
      +#log_statement = 'none'         # none, ddl, mod, all
       #log_replication_commands = off
      -#log_temp_files = -1                     # log temporary files equal or larger
      -                                 # than the specified size in kilobytes;
      -                                 # -1 disables, 0 logs all temp files
      -log_timezone = 'Etc/UTC'
      +#log_temp_files = -1            # log temporary files equal or larger
      +                    # than the specified size in kilobytes;
      +                    # -1 disables, 0 logs all temp files
      +#log_timezone = 'GMT'

       #------------------------------------------------------------------------------
       # PROCESS TITLE
       #------------------------------------------------------------------------------

      -#cluster_name = ''                       # added to process titles if nonempty
      -                                 # (change requires restart)
      +#cluster_name = ''          # added to process titles if nonempty
      +                    # (change requires restart)
       #update_process_title = on


      @@ -581,8 +582,8 @@
       #track_activities = on
       #track_counts = on
       #track_io_timing = off
      -#track_functions = none                  # none, pl, all
      -#track_activity_query_size = 1024        # (change requires restart)
      +#track_functions = none         # none, pl, all
      +#track_activity_query_size = 1024   # (change requires restart)
       #stats_temp_directory = 'pg_stat_tmp'


      @@ -598,37 +599,37 @@
       # AUTOVACUUM
       #------------------------------------------------------------------------------

      -#autovacuum = on                 # Enable autovacuum subprocess?  'on'
      -                                 # requires track_counts to also be on.
      -#log_autovacuum_min_duration = -1        # -1 disables, 0 logs all actions and
      -                                 # their durations, > 0 logs only
      -                                 # actions running at least this number
      -                                 # of milliseconds.
      -#autovacuum_max_workers = 3              # max number of autovacuum subprocesses
      -                                 # (change requires restart)
      -#autovacuum_naptime = 1min               # time between autovacuum runs
      -#autovacuum_vacuum_threshold = 50        # min number of row updates before
      -                                 # vacuum
      -#autovacuum_vacuum_insert_threshold = 1000       # min number of row inserts
      -                                 # before vacuum; -1 disables insert
      -                                 # vacuums
      -#autovacuum_analyze_threshold = 50       # min number of row updates before
      -                                 # analyze
      -#autovacuum_vacuum_scale_factor = 0.2    # fraction of table size before vacuum
      -#autovacuum_vacuum_insert_scale_factor = 0.2     # fraction of inserts over table
      -                                 # size before insert vacuum
      -#autovacuum_analyze_scale_factor = 0.1   # fraction of table size before analyze
      -#autovacuum_freeze_max_age = 200000000   # maximum XID age before forced vacuum
      -                                 # (change requires restart)
      -#autovacuum_multixact_freeze_max_age = 400000000 # maximum multixact age
      -                                 # before forced vacuum
      -                                 # (change requires restart)
      -#autovacuum_vacuum_cost_delay = 2ms      # default vacuum cost delay for
      -                                 # autovacuum, in milliseconds;
      -                                 # -1 means use vacuum_cost_delay
      -#autovacuum_vacuum_cost_limit = -1       # default vacuum cost limit for
      -                                 # autovacuum, -1 means use
      -                                 # vacuum_cost_limit
      +#autovacuum = on            # Enable autovacuum subprocess?  'on'
      +                    # requires track_counts to also be on.
      +#log_autovacuum_min_duration = -1   # -1 disables, 0 logs all actions and
      +                    # their durations, > 0 logs only
      +                    # actions running at least this number
      +                    # of milliseconds.
      +#autovacuum_max_workers = 3     # max number of autovacuum subprocesses
      +                    # (change requires restart)
      +#autovacuum_naptime = 1min      # time between autovacuum runs
      +#autovacuum_vacuum_threshold = 50   # min number of row updates before
      +                    # vacuum
      +#autovacuum_vacuum_insert_threshold = 1000  # min number of row inserts
      +                    # before vacuum; -1 disables insert
      +                    # vacuums
      +#autovacuum_analyze_threshold = 50  # min number of row updates before
      +                    # analyze
      +#autovacuum_vacuum_scale_factor = 0.2   # fraction of table size before vacuum
      +#autovacuum_vacuum_insert_scale_factor = 0.2    # fraction of inserts over table
      +                    # size before insert vacuum
      +#autovacuum_analyze_scale_factor = 0.1  # fraction of table size before analyze
      +#autovacuum_freeze_max_age = 200000000  # maximum XID age before forced vacuum
      +                    # (change requires restart)
      +#autovacuum_multixact_freeze_max_age = 400000000    # maximum multixact age
      +                    # before forced vacuum
      +                    # (change requires restart)
      +#autovacuum_vacuum_cost_delay = 2ms # default vacuum cost delay for
      +                    # autovacuum, in milliseconds;
      +                    # -1 means use vacuum_cost_delay
      +#autovacuum_vacuum_cost_limit = -1  # default vacuum cost limit for
      +                    # autovacuum, -1 means use
      +                    # vacuum_cost_limit


       #------------------------------------------------------------------------------
      @@ -637,38 +638,38 @@

       # - Statement Behavior -

      -#client_min_messages = notice            # values in order of decreasing detail:
      -                                 #   debug5
      -                                 #   debug4
      -                                 #   debug3
      -                                 #   debug2
      -                                 #   debug1
      -                                 #   log
      -                                 #   notice
      -                                 #   warning
      -                                 #   error
      -#search_path = '"$user", public' # schema names
      +#client_min_messages = notice       # values in order of decreasing detail:
      +                    #   debug5
      +                    #   debug4
      +                    #   debug3
      +                    #   debug2
      +                    #   debug1
      +                    #   log
      +                    #   notice
      +                    #   warning
      +                    #   error
      +#search_path = '"$user", public'    # schema names
       #row_security = on
      -#default_tablespace = ''         # a tablespace name, '' uses the default
      -#temp_tablespaces = ''                   # a list of tablespace names, '' uses
      -                                 # only default tablespace
      +#default_tablespace = ''        # a tablespace name, '' uses the default
      +#temp_tablespaces = ''          # a list of tablespace names, '' uses
      +                    # only default tablespace
       #default_table_access_method = 'heap'
       #check_function_bodies = on
       #default_transaction_isolation = 'read committed'
       #default_transaction_read_only = off
       #default_transaction_deferrable = off
       #session_replication_role = 'origin'
      -#statement_timeout = 0                   # in milliseconds, 0 is disabled
      -#lock_timeout = 0                        # in milliseconds, 0 is disabled
      -#idle_in_transaction_session_timeout = 0 # in milliseconds, 0 is disabled
      +#statement_timeout = 0          # in milliseconds, 0 is disabled
      +#lock_timeout = 0           # in milliseconds, 0 is disabled
      +#idle_in_transaction_session_timeout = 0    # in milliseconds, 0 is disabled
       #vacuum_freeze_min_age = 50000000
       #vacuum_freeze_table_age = 150000000
       #vacuum_multixact_freeze_min_age = 5000000
       #vacuum_multixact_freeze_table_age = 150000000
      -#vacuum_cleanup_index_scale_factor = 0.1 # fraction of total number of tuples
      -                                         # before index cleanup, 0 always performs
      -                                         # index cleanup
      -#bytea_output = 'hex'                    # hex, escape
      +#vacuum_cleanup_index_scale_factor = 0.1    # fraction of total number of tuples
      +                        # before index cleanup, 0 always performs
      +                        # index cleanup
      +#bytea_output = 'hex'           # hex, escape
       #xmlbinary = 'base64'
       #xmloption = 'content'
       #gin_fuzzy_search_limit = 0
      @@ -678,35 +679,35 @@

       datestyle = 'iso, mdy'
       #intervalstyle = 'postgres'
      -timezone = 'Etc/UTC'
      +#timezone = 'GMT'
       #timezone_abbreviations = 'Default'     # Select the set of available time zone
      -                                 # abbreviations.  Currently, there are
      -                                 #   Default
      -                                 #   Australia (historical usage)
      -                                 #   India
      -                                 # You can create your own file in
      -                                 # share/timezonesets/.
      -#extra_float_digits = 1                  # min -15, max 3; any value >0 actually
      -                                 # selects precise output mode
      -#client_encoding = sql_ascii             # actually, defaults to database
      -                                 # encoding
      +                    # abbreviations.  Currently, there are
      +                    #   Default
      +                    #   Australia (historical usage)
      +                    #   India
      +                    # You can create your own file in
      +                    # share/timezonesets/.
      +#extra_float_digits = 1         # min -15, max 3; any value >0 actually
      +                    # selects precise output mode
      +#client_encoding = sql_ascii        # actually, defaults to database
      +                    # encoding

       # These settings are initialized by initdb, but they can be changed.
      -lc_messages = 'C'                        # locale for system error message
      -                                 # strings
      -lc_monetary = 'C'                        # locale for monetary formatting
      -lc_numeric = 'C'                 # locale for number formatting
      -lc_time = 'C'                            # locale for time formatting
      +lc_messages = 'C'                       # locale for system error message
      +                                        # strings
      +lc_monetary = 'C'                       # locale for monetary formatting
      +lc_numeric = 'C'                        # locale for number formatting
      +lc_time = 'C'                           # locale for time formatting

       # default configuration for text search
       default_text_search_config = 'pg_catalog.english'

       # - Shared Library Preloading -

      -#shared_preload_libraries = ''   # (change requires restart)
      +#shared_preload_libraries = ''  # (change requires restart)
       #local_preload_libraries = ''
       #session_preload_libraries = ''
      -#jit_provider = 'llvmjit'                # JIT library to use
      +#jit_provider = 'llvmjit'       # JIT library to use

       # - Other Defaults -

      @@ -718,13 +719,13 @@
       #------------------------------------------------------------------------------

       #deadlock_timeout = 1s
      -#max_locks_per_transaction = 64          # min 10
      -                                 # (change requires restart)
      -#max_pred_locks_per_transaction = 64     # min 10
      -                                 # (change requires restart)
      -#max_pred_locks_per_relation = -2        # negative values mean
      -                                 # (max_pred_locks_per_transaction
      -                                 #  / -max_pred_locks_per_relation) - 1
      +#max_locks_per_transaction = 64     # min 10
      +                    # (change requires restart)
      +#max_pred_locks_per_transaction = 64    # min 10
      +                    # (change requires restart)
      +#max_pred_locks_per_relation = -2   # negative values mean
      +                    # (max_pred_locks_per_transaction
      +                    #  / -max_pred_locks_per_relation) - 1
       #max_pred_locks_per_page = 2            # min 0


      @@ -735,7 +736,7 @@
       # - Previous PostgreSQL Versions -

       #array_nulls = on
      -#backslash_quote = safe_encoding # on, off, or safe_encoding
      +#backslash_quote = safe_encoding    # on, off, or safe_encoding
       #escape_string_warning = on
       #lo_compat_privileges = off
       #operator_precedence_warning = off
      @@ -752,11 +753,11 @@
       # ERROR HANDLING
       #------------------------------------------------------------------------------

      -#exit_on_error = off                     # terminate session on any error?
      -#restart_after_crash = on                # reinitialize after backend crash?
      -#data_sync_retry = off                   # retry or panic on failure to fsync
      -                                 # data?
      -                                 # (change requires restart)
      +#exit_on_error = off            # terminate session on any error?
      +#restart_after_crash = on       # reinitialize after backend crash?
      +#data_sync_retry = off          # retry or panic on failure to fsync
      +                    # data?
      +                    # (change requires restart)


       #------------------------------------------------------------------------------
      @@ -767,10 +768,10 @@
       # default postgresql.conf.  Note that these are directives, not variable
       # assignments, so they can usefully be given more than once.

      -#include_dir = '...'                     # include files ending in '.conf' from
      -                                 # a directory, e.g., 'conf.d'
      -#include_if_exists = '...'               # include file only if it exists
      -#include = '...'                 # include file
      +#include_dir = '...'            # include files ending in '.conf' from
      +                    # a directory, e.g., 'conf.d'
      +#include_if_exists = '...'      # include file only if it exists
      +#include = '...'            # include file


       #------------------------------------------------------------------------------
      - change mode from '0600' to '0644'
    * template[/var/opt/opscode/postgresql/13/data/pg_hba.conf] action create
      - update content in file /var/opt/opscode/postgresql/13/data/pg_hba.conf from 98c8d4 to 3f3075
      --- /var/opt/opscode/postgresql/13/data/pg_hba.conf       2025-10-05 06:13:28.931136787 +0000
      +++ /var/opt/opscode/postgresql/13/data/.chef-pg_hba20251005-1727-dxo41.conf      2025-10-05 06:13:29.645438177 +0000
      @@ -1,98 +1,71 @@
       # PostgreSQL Client Authentication Configuration File
       # ===================================================
       #
      -# Refer to the "Client Authentication" section in the PostgreSQL
      -# documentation for a complete description of this file.  A short
      -# synopsis follows.
      +# Refer to the "Client Authentication" section in the
      +# PostgreSQL documentation for a complete description
      +# of this file.  A short synopsis follows.
       #
       # This file controls: which hosts are allowed to connect, how clients
       # are authenticated, which PostgreSQL user names they can use, which
       # databases they can access.  Records take one of these forms:
       #
      -# local         DATABASE  USER  METHOD  [OPTIONS]
      -# host          DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostssl       DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostnossl     DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostgssenc    DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostnogssenc  DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      +# local      DATABASE  USER  METHOD  [OPTION]
      +# host       DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
      +# hostssl    DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
      +# hostnossl  DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
       #
       # (The uppercase items must be replaced by actual values.)
       #
      -# The first field is the connection type: "local" is a Unix-domain
      -# socket, "host" is either a plain or SSL-encrypted TCP/IP socket,
      -# "hostssl" is an SSL-encrypted TCP/IP socket, and "hostnossl" is a
      -# non-SSL TCP/IP socket.  Similarly, "hostgssenc" uses a
      -# GSSAPI-encrypted TCP/IP socket, while "hostnogssenc" uses a
      -# non-GSSAPI socket.
      +# The first field is the connection type: "local" is a Unix-domain socket,
      +# "host" is either a plain or SSL-encrypted TCP/IP socket, "hostssl" is an
      +# SSL-encrypted TCP/IP socket, and "hostnossl" is a plain TCP/IP socket.
       #
      -# DATABASE can be "all", "sameuser", "samerole", "replication", a
      -# database name, or a comma-separated list thereof. The "all"
      -# keyword does not match "replication". Access to replication
      -# must be enabled in a separate record (see example below).
      +# DATABASE can be "all", "sameuser", "samerole", a database name, or
      +# a comma-separated list thereof.
       #
      -# USER can be "all", a user name, a group name prefixed with "+", or a
      -# comma-separated list thereof.  In both the DATABASE and USER fields
      -# you can also write a file name prefixed with "@" to include names
      -# from a separate file.
      +# USER can be "all", a user name, a group name prefixed with "+", or
      +# a comma-separated list thereof.  In both the DATABASE and USER fields
      +# you can also write a file name prefixed with "@" to include names from
      +# a separate file.
       #
      -# ADDRESS specifies the set of hosts the record matches.  It can be a
      -# host name, or it is made up of an IP address and a CIDR mask that is
      -# an integer (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that
      -# specifies the number of significant bits in the mask.  A host name
      -# that starts with a dot (.) matches a suffix of the actual host name.
      -# Alternatively, you can write an IP address and netmask in separate
      -# columns to specify the set of hosts.  Instead of a CIDR-address, you
      -# can write "samehost" to match any of the server's own IP addresses,
      -# or "samenet" to match any address in any subnet that the server is
      -# directly connected to.
      +# CIDR-ADDRESS specifies the set of hosts the record matches.
      +# It is made up of an IP address and a CIDR mask that is an integer
      +# (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that specifies
      +# the number of significant bits in the mask.  Alternatively, you can write
      +# an IP address and netmask in separate columns to specify the set of hosts.
       #
      -# METHOD can be "trust", "reject", "md5", "password", "scram-sha-256",
      -# "gss", "sspi", "ident", "peer", "pam", "ldap", "radius" or "cert".
      -# Note that "password" sends passwords in clear text; "md5" or
      -# "scram-sha-256" are preferred since they send encrypted passwords.
      +# METHOD can be "trust", "reject", "md5", "crypt", "password", "gss", "sspi",
      +# "krb5", "ident", "pam" or "ldap".  Note that "password" sends passwords
      +# in clear text; "md5" is preferred since it sends encrypted passwords.
       #
      -# OPTIONS are a set of options for the authentication in the format
      -# NAME=VALUE.  The available options depend on the different
      -# authentication methods -- refer to the "Client Authentication"
      -# section in the documentation for a list of which options are
      -# available for which authentication methods.
      +# OPTION is the ident map or the name of the PAM service, depending on METHOD.
       #
      -# Database and user names containing spaces, commas, quotes and other
      -# special characters must be quoted.  Quoting one of the keywords
      -# "all", "sameuser", "samerole" or "replication" makes the name lose
      -# its special character, and just match a database or username with
      -# that name.
      +# Database and user names containing spaces, commas, quotes and other special
      +# characters must be quoted. Quoting one of the keywords "all", "sameuser" or
      +# "samerole" makes the name lose its special character, and just match a
      +# database or username with that name.
       #
      -# This file is read on server startup and when the server receives a
      -# SIGHUP signal.  If you edit the file on a running system, you have to
      -# SIGHUP the server for the changes to take effect, run "pg_ctl reload",
      -# or execute "SELECT pg_reload_conf()".
      -#
      +# This file is read on server startup and when the postmaster receives
      +# a SIGHUP signal.  If you edit the file on a running system, you have
      +# to SIGHUP the postmaster for the changes to take effect.  You can use
      +# "pg_ctl reload" to do that.
      +
       # Put your actual configuration here
       # ----------------------------------
       #
       # If you want to allow non-local connections, you need to add more
      -# "host" records.  In that case you will also need to make PostgreSQL
      -# listen on a non-local interface via the listen_addresses
      -# configuration parameter, or via the -i or -h command line switches.
      +# "host" records. In that case you will also need to make PostgreSQL listen
      +# on a non-local interface via the listen_addresses configuration parameter,
      +# or via the -i or -h command line switches.
      +#

      -# CAUTION: Configuring the system for local "trust" authentication
      -# allows any local user to connect as any PostgreSQL user, including
      -# the database superuser.  If you do not trust all your local users,
      -# use another authentication method.

      +# TYPE  DATABASE    USER        CIDR-ADDRESS          ME
      +# "local" is for Unix domain socket connections only
      +local   all         opscode-pgsql                               peer

      -# TYPE  DATABASE        USER            ADDRESS                 METHOD
      +host    all         opscode-pgsql         samehost           md5

      -# "local" is for Unix domain socket connections only
      -local   all             all                                     trust
      -# IPv4 local connections:
      -host    all             all             127.0.0.1/32            trust
      -# IPv6 local connections:
      -host    all             all             ::1/128                 trust
      -# Allow replication connections from localhost, by a user with the
      -# replication privilege.
      -local   replication     all                                     trust
      -host    replication     all             127.0.0.1/32            trust
      -host    replication     all             ::1/128                 trust
      +host    all         all         127.0.0.1/32           md5
      +host    all         all         ::1/128           md5
      - change mode from '0600' to '0644'

  * link[/var/opt/opscode/postgresql/13/data] action create (skipped due to not_if)
  * execute[/opt/opscode/bin/chef-server-ctl start postgresql] action run
    - execute /opt/opscode/bin/chef-server-ctl start postgresql
  * ruby_block[wait for postgresql to start] action run
    - execute the ruby block wait for postgresql to start
  * pg_user[opscode-pgsql] action create
    - Update Postgres user opscode-pgsql
    -   Update password
  * pg_database[opscode-pgsql] action create
    - Create database opscode-pgsql
Recipe: infra-server::erchef_database
  * pg_user[opscode_chef] action create
    - Create PostgreSQL user opscode_chef
    -   Set password
  * pg_user[opscode_chef_ro] action create
    - Create PostgreSQL user opscode_chef_ro
    -   Set password
  * pg_database[opscode_chef] action create
    - Create database opscode_chef
  * pg_sqitch[/opt/opscode/embedded/service/opscode-erchef/schema/baseline] action deploy
    - Deploying schema from /opt/opscode/embedded/service/opscode-erchef/schema/baseline
    * execute[sqitch_deploy_/opt/opscode/embedded/service/opscode-erchef/schema/baseline] action run
      - execute sqitch --engine pg --db-name opscode_chef --db-host 127.0.0.1 --db-port 5432 --db-user opscode-pgsql --top-dir /opt/opscode/embedded/service/opscode-erchef/schema/baseline deploy --verify

  * pg_sqitch[/opt/opscode/embedded/service/opscode-erchef/schema] action deploy
    - Deploying schema from /opt/opscode/embedded/service/opscode-erchef/schema
    * execute[sqitch_deploy_/opt/opscode/embedded/service/opscode-erchef/schema] action run
      - execute sqitch --engine pg --db-name opscode_chef --db-host 127.0.0.1 --db-port 5432 --db-user opscode-pgsql --top-dir /opt/opscode/embedded/service/opscode-erchef/schema deploy --verify

  * ruby_block[set opscode_chef ownership] action run
    - execute the ruby block set opscode_chef ownership
  * pg_sqitch[/opt/opscode/embedded/service/opscode-erchef/schema/baseline] action nothing (skipped due to action :nothing)
  * pg_sqitch[/opt/opscode/embedded/service/opscode-erchef/schema] action nothing (skipped due to action :nothing)
  * pg_user_table_access[opscode_chef] action create
    - GRANT CONNECT, TEMPORARY ON DATABASE opscode_chef TO opscode_chef
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO opscode_chef;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO opscode_chef
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, UPDATE ON SEQUENCES TO opscode_chef;
    - GRANT SELECT, UPDATE ON ALL SEQUENCES IN SCHEMA public TO opscode_chef
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT INSERT, SELECT, UPDATE, DELETE ON TABLES TO opscode_chef;
    - GRANT INSERT, SELECT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO opscode_chef
  * pg_user_table_access[opscode_chef_ro] action create
    - GRANT CONNECT ON DATABASE opscode_chef TO opscode_chef_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO opscode_chef_ro;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO opscode_chef_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON SEQUENCES TO opscode_chef_ro;
    - GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO opscode_chef_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO opscode_chef_ro;
    - GRANT SELECT ON ALL TABLES IN SCHEMA public TO opscode_chef_ro
  * directory[/opt/opscode/embedded/service/enterprise-chef-server-schema] action delete (up to date)
Recipe: infra-server::bifrost_database
  * pg_user[bifrost] action create
    - Create PostgreSQL user bifrost
    -   Set password
  * pg_user[bifrost_ro] action create
    - Create PostgreSQL user bifrost_ro
    -   Set password
  * pg_database[bifrost] action create
    - Create database bifrost
  * pg_sqitch[/opt/opscode/embedded/service/oc_bifrost/db] action deploy
    - Deploying schema from /opt/opscode/embedded/service/oc_bifrost/db
    * execute[sqitch_deploy_/opt/opscode/embedded/service/oc_bifrost/db] action run
      - execute sqitch --engine pg --db-name bifrost --db-host 127.0.0.1 --db-port 5432 --db-user opscode-pgsql --top-dir /opt/opscode/embedded/service/oc_bifrost/db deploy --verify

  * pg_user_table_access[bifrost] action create
    - GRANT CONNECT, TEMPORARY ON DATABASE bifrost TO bifrost
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO bifrost;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO bifrost
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, UPDATE ON SEQUENCES TO bifrost;
    - GRANT SELECT, UPDATE ON ALL SEQUENCES IN SCHEMA public TO bifrost
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT INSERT, SELECT, UPDATE, DELETE ON TABLES TO bifrost;
    - GRANT INSERT, SELECT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO bifrost
  * pg_user_table_access[bifrost_ro] action create
    - GRANT CONNECT ON DATABASE bifrost TO bifrost_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO bifrost_ro;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO bifrost_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON SEQUENCES TO bifrost_ro;
    - GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO bifrost_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO bifrost_ro;
    - GRANT SELECT ON ALL TABLES IN SCHEMA public TO bifrost_ro
  * pg_sqitch[/opt/opscode/embedded/service/oc_bifrost/db] action nothing (skipped due to action :nothing)
Recipe: infra-server::oc_id_database
  * pg_user[oc_id] action create
    - Create PostgreSQL user oc_id
    -   Set password
  * pg_user[oc_id_ro] action create
    - Create PostgreSQL user oc_id_ro
    -   Set password
  * pg_database[oc_id] action create
    - Create database oc_id
  * pg_user_table_access[oc_id_ro] action create
    - GRANT CONNECT ON DATABASE oc_id TO oc_id_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO oc_id_ro;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO oc_id_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON SEQUENCES TO oc_id_ro;
    - GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO oc_id_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO oc_id_ro;
    - GRANT SELECT ON ALL TABLES IN SCHEMA public TO oc_id_ro
Recipe: infra-server::oc_bifrost
  * directory[/var/opt/opscode/oc_bifrost] action create
    - create new directory /var/opt/opscode/oc_bifrost
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/oc_bifrost/bin] action create
    - create new directory /var/opt/opscode/oc_bifrost/bin
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/log/opscode/oc_bifrost] action create
    - create new directory /var/log/opscode/oc_bifrost
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/log/opscode/oc_bifrost/sasl] action create
    - create new directory /var/log/opscode/oc_bifrost/sasl
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * link[/opt/opscode/embedded/service/oc_bifrost/log] action create
    - create symlink at /opt/opscode/embedded/service/oc_bifrost/log to /var/log/opscode/oc_bifrost
  * template[/var/opt/opscode/oc_bifrost/sys.config] action create
    - create new file /var/opt/opscode/oc_bifrost/sys.config
    - update content in file /var/opt/opscode/oc_bifrost/sys.config from none to 17008a
    --- /var/opt/opscode/oc_bifrost/sys.config  2025-10-05 06:13:35.480462535 +0000
    +++ /var/opt/opscode/oc_bifrost/.chef-sys20251005-1727-mdq4my.config        2025-10-05 06:13:35.480462535 +0000
    @@ -1 +1,136 @@
    +%% -*- mode: erlang -*-
    +%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*- %% ex: ts=4 sw=4 ft=erlang et
    +%%
    +%% oc_bifrost sys.config file
    +%%
    +%% Automatically generated by Chef
    +%%
    +[
    + {kernel, [{start_pg2, true},
    +           {inet_dist_use_interface, {127,0,0,1}}
    +          ]},
    + {sasl, [
    +         {sasl_error_logger, {file, "/var/log/opscode/oc_bifrost/sasl-error.log"}},
    +         {errlog_type, error},
    +         {error_logger_mf_dir, "/var/log/opscode/oc_bifrost/sasl"},      % Log directory
    +         {error_logger_mf_maxbytes, 104857600},
    +         {error_logger_mf_maxfiles, 10}
    +        ]},
    + {crypto, [
    +           {fips_mode, false}
    +        ]},
    + {chef_secrets, [{provider, chef_secrets_fd}]},
    + {lager, [
    +          %% What handlers to install with what arguments
    +          %% The defaults for the logfiles are to rotate the files when
    +          %% they reach 10Mb or at midnight, whichever comes first, and keep
    +          %% the last 5 rotations. See the lager README for a description of
    +          %% the time rotation format:
    +          %% https://github.com/basho/lager/blob/master/README.md#internal-log-rotation
    +          %%
    +          %% If you wish to disable rotation, you can either set the size to 0
    +          %% and the rotation time to "", or instead specify a 2-tuple that only
    +          %% consists of {Logfile, Level}.
    +          {handlers, [
    +              {lager_console_backend, [
    +                {level, info},
    +                {formatter, lager_default_formatter},
    +                {formatter_config, [ "[", severity, "] ", message, "\n"]}
    +              ]},
    +              {lager_file_backend, [
    +                                    {file, "/var/log/opscode/oc_bifrost/error.log"},
    +                                    {level, error},
    +                                    {size, 104857600},
    +                                    {date, "$D0"},
    +                                    {count, 10}
    +                                   ]},
    +              {lager_file_backend, [
    +                                    {file, "/var/log/opscode/oc_bifrost/console.log"},
    +                                    {level, info},
    +                                    {size, 104857600},
    +                                    {date, "$D0"},
    +                                    {count, 10},
    +                                    %% Removes the logging source, since currently
    +                                    %% there's only one place in all of Bifrost that
    +                                    %% we log from.  Also removes the PID from
    +                                    %% the default message format.
    +                                    {formatter_config, [date, " ", time, " [", severity, "] ", message, "\n"]}
    +                                   ]}
    +              ]},
    +
    +          %% Whether to write a crash log, and where.
    +          %% Commented/omitted/undefined means no crash logger.
    +          {crash_log, "/var/log/opscode/oc_bifrost/crash.log"},
    +
    +          %% Maximum size in bytes of events in the crash log - defaults to 65536
    +          {crash_log_msg_size, 65536},
    +
    +          %% Maximum size of the crash log in bytes, before its rotated, set
    +          %% to 0 to disable rotation - default is 0
    +          {crash_log_size, 104857600},
    +
    +          %% What time to rotate the crash log - default is no time
    +          %% rotation. See the lager README for a description of this format:
    +          %% https://github.com/basho/lager/blob/master/README.org
    +          {crash_log_date, "$D0"},
    +
    +          %% Number of rotated crash logs to keep, 0 means keep only the
    +          %% current one - default is 0
    +          {crash_log_count, 10},
    +
    +          %% Whether to redirect error_logger messages into lager - defaults to true
    +          {error_logger_redirect, true},
    +
    +          %% Bump up the "high-water mark" (default 50), which is the
    +          %% number of messages per second allowed to come from
    +          %% error_logger.
    +          {error_logger_hwm, 1000}
    +        ]},
    + {webmachine, [
    +          {log_handlers, [
    +               {oc_wm_request_logger, [
    +                       {file, "/var/log/opscode/oc_bifrost/requests.log"},
    +                       {file_size, 100},  %% Size in MB
    +                       {files, 10},
    +                         {annotations, [requestor_id, created_authz_id, perf_stats, msg]}
    +                       ]
    +               }
    +        ]}
    + ]},
    + {sqerl, [
    +          {db_driver_mod, sqerl_pgsql_client},
    +          {config_cb, {chef_secrets_sqerl, config, [{<<"oc_bifrost">>, <<"sql_password">>}]}},
    +          {ip_mode, [ ipv4 ] },
    +          {db_host, "127.0.0.1" },
    +          {db_port, 5432 },
    +          {db_user, "bifrost" },
    +          {db_name, "bifrost" },
    +          {db_options, [{ssl, false}]},
    +          {idle_check, 10000},
    +          {pooler_timeout, 2000},
    +          {db_timeout, 5000},
    +          {prepared_statements, {bifrost_db, statements, []} },
    +          {column_transforms, []}
    +         ]},
    + {stats_hero, [
    +                {udp_socket_pool_size, 20 },
    +                {protocol, estatsd},
    +                {estatsd_host, "127.0.0.1" },
    +                {estatsd_port, 9466 }
    +               ]},
    + {pooler, [
    +           {pools, [[{name, sqerl},
    +                     {max_count, 20 },
    +                     {init_count, 20 },
    +                     {queue_max, 20},
    +                     {start_mfa, {sqerl_client, start_link, []}}]]}
    +           %%,{metrics_module, folsom_metrics}
    +          ]},
    + {bifrost, [
    +             {ip, "127.0.0.1" },
    +             {port, 9463 },
    +             {root_metric_key, "bifrost"},
    +             {enable_extended_perf_log, true}
    +            ]}
    +].
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * link[/opt/opscode/embedded/service/oc_bifrost/sys.config] action create
    - unlink existing symlink to file at /opt/opscode/embedded/service/oc_bifrost/sys.config
    - create symlink at /opt/opscode/embedded/service/oc_bifrost/sys.config to /var/opt/opscode/oc_bifrost/sys.config
  * template[/var/opt/opscode/oc_bifrost/vm.args] action create
    - create new file /var/opt/opscode/oc_bifrost/vm.args
    - update content in file /var/opt/opscode/oc_bifrost/vm.args from none to 54b735
    --- /var/opt/opscode/oc_bifrost/vm.args     2025-10-05 06:13:35.506462644 +0000
    +++ /var/opt/opscode/oc_bifrost/.chef-vm20251005-1727-1535vk2.args  2025-10-05 06:13:35.506462644 +0000
    @@ -1 +1,25 @@
    +## Name of the node
    +-name oc_bifrost@127.0.0.1
    +
    +## Cookie for distributed erlang
    +-setcookie oc_bifrost
    +
    +## Heartbeat management; auto-restarts VM if it dies or becomes unresponsive
    +## (Disabled by default..use with caution!)
    +##-heart
    +
    +## Enable kernel poll and a few async threads
    ++K true
    ++A 10
    +
    ++P 262144
    +
    +## Increase number of concurrent ports/sockets
    +-env ERL_MAX_PORTS 65536
    +
    +## Tweak GC to run more often
    +-env ERL_FULLSWEEP_AFTER 10
    +
    +## Increase logfile size to 10M
    +-env RUN_ERL_LOG_MAXSIZE 10000000
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * link[/opt/opscode/embedded/service/oc_bifrost/vm.args] action create
    - unlink existing symlink to file at /opt/opscode/embedded/service/oc_bifrost/vm.args
    - create symlink at /opt/opscode/embedded/service/oc_bifrost/vm.args to /var/opt/opscode/oc_bifrost/vm.args
  * component_runit_service[oc_bifrost] action enable
    * template[/var/log/opscode/oc_bifrost/config] action create
      - create new file /var/log/opscode/oc_bifrost/config
      - update content in file /var/log/opscode/oc_bifrost/config from none to 5e16ac
      --- /var/log/opscode/oc_bifrost/config    2025-10-05 06:13:35.526462728 +0000
      +++ /var/log/opscode/oc_bifrost/.chef-config20251005-1727-1uxyhlt 2025-10-05 06:13:35.526462728 +0000
      @@ -1 +1,4 @@
      +# svlogd configuration
      +s104857600
      +n10
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
  Recipe: <Dynamically Defined Resource>
    * service[oc_bifrost] action nothing (skipped due to action :nothing)
    * runit_service[oc_bifrost] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/oc_bifrost] action create
        - create new directory /opt/opscode/sv/oc_bifrost
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/oc_bifrost/run] action create
        - create new file /opt/opscode/sv/oc_bifrost/run
        - update content in file /opt/opscode/sv/oc_bifrost/run from none to 75761b
        --- /opt/opscode/sv/oc_bifrost/run      2025-10-05 06:13:35.562462879 +0000
        +++ /opt/opscode/sv/oc_bifrost/.chef-run20251005-1727-1d9z1g9   2025-10-05 06:13:35.561462875 +0000
        @@ -1 +1,6 @@
        +#!/bin/sh
        +exec 2>&1
        +
        +export PATH=/opt/opscode/embedded/bin:$PATH
        +exec veil-env-helper --use-file -f /etc/opscode/private-chef-secrets.json -s oc_bifrost.sql_password -s oc_bifrost.superuser_id -- chpst -P -u opscode -U opscode env ERL_EPMD_ADDRESS=127.0.0.1 HOME=/var/opt/opscode/oc_bifrost /opt/opscode/embedded/service/oc_bifrost/bin/oc_bifrost foreground
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/oc_bifrost/log] action create
        - create new directory /opt/opscode/sv/oc_bifrost/log
      * directory[/opt/opscode/sv/oc_bifrost/log/main] action create
        - create new directory /opt/opscode/sv/oc_bifrost/log/main
        - change mode from '' to '0755'
      * directory[/var/log/oc_bifrost] action create
        - create new directory /var/log/oc_bifrost
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/oc_bifrost/log/config] action create
        - create new file /opt/opscode/sv/oc_bifrost/log/config
        - update content in file /opt/opscode/sv/oc_bifrost/log/config from none to e3b0c4
        (no diff)
        - change mode from '' to '0644'
      * link[/var/log/oc_bifrost/config] action create
        - create symlink at /var/log/oc_bifrost/config to /opt/opscode/sv/oc_bifrost/log/config
      * template[/opt/opscode/sv/oc_bifrost/log/run] action create
        - create new file /opt/opscode/sv/oc_bifrost/log/run
        - update content in file /opt/opscode/sv/oc_bifrost/log/run from none to ec30bd
        --- /opt/opscode/sv/oc_bifrost/log/run  2025-10-05 06:13:35.600463038 +0000
        +++ /opt/opscode/sv/oc_bifrost/log/.chef-run20251005-1727-1jx66vu       2025-10-05 06:13:35.600463038 +0000
        @@ -1 +1,4 @@
        +#!/bin/sh
        +exec chpst -U opscode -u opscode \
        +  svlogd -tt /var/log/opscode/oc_bifrost
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/oc_bifrost/env] action create
        - create new directory /opt/opscode/sv/oc_bifrost/env
        - change mode from '' to '0755'
      * ruby_block[Delete unmanaged env files for oc_bifrost service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/oc_bifrost/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/oc_bifrost/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/oc_bifrost/control] action create
        - create new directory /opt/opscode/sv/oc_bifrost/control
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/oc_bifrost/control/t] action create
        - create new file /opt/opscode/sv/oc_bifrost/control/t
        - update content in file /opt/opscode/sv/oc_bifrost/control/t from none to 07e02d
        --- /opt/opscode/sv/oc_bifrost/control/t        2025-10-05 06:13:35.620463122 +0000
        +++ /opt/opscode/sv/oc_bifrost/control/.chef-t20251005-1727-t45jmk      2025-10-05 06:13:35.620463122 +0000
        @@ -1 +1,4 @@
        +#!/bin/sh
        +echo "received TERM from runit, sending INT instead"
        +/opt/opscode/embedded/bin/sv interrupt oc_bifrost
        - change mode from '' to '0755'
      * link[/opt/opscode/init/oc_bifrost] action create
        - create symlink at /opt/opscode/init/oc_bifrost to /opt/opscode/embedded/bin/sv
      * file[/opt/opscode/sv/oc_bifrost/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/oc_bifrost] action create (up to date)
        * template[/opt/opscode/sv/oc_bifrost/run] action create (up to date)
        * directory[/opt/opscode/sv/oc_bifrost/log] action create (up to date)
        * directory[/opt/opscode/sv/oc_bifrost/log/main] action create (up to date)
        * directory[/var/log/oc_bifrost] action create (up to date)
        * template[/opt/opscode/sv/oc_bifrost/log/config] action create (up to date)
        * link[/var/log/oc_bifrost/config] action create (up to date)
        * template[/opt/opscode/sv/oc_bifrost/log/run] action create (up to date)
        * directory[/opt/opscode/sv/oc_bifrost/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for oc_bifrost service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/oc_bifrost/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/oc_bifrost/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/oc_bifrost/control] action create (up to date)
        * template[/opt/opscode/sv/oc_bifrost/control/t] action create (up to date)
        * link[/opt/opscode/init/oc_bifrost] action create (up to date)
        * file[/opt/opscode/sv/oc_bifrost/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/oc_bifrost] action create
          - create symlink at /opt/opscode/service/oc_bifrost to /opt/opscode/sv/oc_bifrost
        * ruby_block[wait for oc_bifrost service socket] action run
          - execute the ruby block wait for oc_bifrost service socket
        - execute the ruby block restart_service
      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/oc_bifrost] action create (up to date)
        * template[/opt/opscode/sv/oc_bifrost/run] action create (up to date)
        * directory[/opt/opscode/sv/oc_bifrost/log] action create (up to date)
        * directory[/opt/opscode/sv/oc_bifrost/log/main] action create (up to date)
        * directory[/var/log/oc_bifrost] action create (up to date)
        * template[/opt/opscode/sv/oc_bifrost/log/config] action create (up to date)
        * link[/var/log/oc_bifrost/config] action create (up to date)
        * template[/opt/opscode/sv/oc_bifrost/log/run] action create (up to date)
        * directory[/opt/opscode/sv/oc_bifrost/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for oc_bifrost service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/oc_bifrost/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/oc_bifrost/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/oc_bifrost/control] action create (up to date)
        * template[/opt/opscode/sv/oc_bifrost/control/t] action create (up to date)
        * link[/opt/opscode/init/oc_bifrost] action create (up to date)
        * file[/opt/opscode/sv/oc_bifrost/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/oc_bifrost] action create (up to date)
        * ruby_block[wait for oc_bifrost service socket] action run
          - execute the ruby block wait for oc_bifrost service socket
        - execute the ruby block restart_log_service
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/oc_bifrost] action create (up to date)
      * ruby_block[wait for oc_bifrost service socket] action run
        - execute the ruby block wait for oc_bifrost service socket

    * runit_service[oc_bifrost] action reload_log
      - reload log service

Recipe: infra-server::oc_id
  * directory[/var/opt/opscode/oc_id] action create
    - create new directory /var/opt/opscode/oc_id
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/oc_id/config] action create
    - create new directory /var/opt/opscode/oc_id/config
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/oc_id/tmp] action create
    - create new directory /var/opt/opscode/oc_id/tmp
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/log/opscode/oc_id] action create
    - create new directory /var/log/opscode/oc_id
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/opt/opscode/embedded/service/oc_id/log] action delete
    - delete existing directory /opt/opscode/embedded/service/oc_id/log
  * directory[/opt/opscode/embedded/service/oc_id/tmp] action delete
    - delete existing directory /opt/opscode/embedded/service/oc_id/tmp
  * link[/opt/opscode/embedded/service/oc_id/log] action create
    - create symlink at /opt/opscode/embedded/service/oc_id/log to /var/log/opscode/oc_id
  * link[/opt/opscode/embedded/service/oc_id/tmp] action create
    - create symlink at /opt/opscode/embedded/service/oc_id/tmp to /var/opt/opscode/oc_id/tmp
  * file[/var/opt/opscode/oc_id/config/production.yml] action create
    - create new file /var/opt/opscode/oc_id/config/production.yml
    - update content in file /var/opt/opscode/oc_id/config/production.yml from none to 69499a
    --- /var/opt/opscode/oc_id/config/production.yml    2025-10-05 06:13:41.471487638 +0000
    +++ /var/opt/opscode/oc_id/config/.chef-production20251005-1727-v0d8y.yml   2025-10-05 06:13:41.471487638 +0000
    @@ -1 +1,12 @@
    +---
    +chef:
    +  endpoint: https://127.0.0.1:443
    +  superuser: pivotal
    +  ssl_verify_mode: verify_none
    +doorkeeper:
    +  administrators: []
    +sentry_dsn:
    +sign_up_url: https:///signup
    +email_from_address: '"Opscode" <donotreply@chef.io>'
    +origin:
    - change mode from '' to '0640'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * file[/opt/opscode/embedded/service/oc_id/config/settings/production.yml] action delete
    - delete file /opt/opscode/embedded/service/oc_id/config/settings/production.yml
  * link[/opt/opscode/embedded/service/oc_id/config/settings/production.yml] action create
    - create symlink at /opt/opscode/embedded/service/oc_id/config/settings/production.yml to /var/opt/opscode/oc_id/config/production.yml
  * template[/var/opt/opscode/oc_id/config/secret_token.rb] action create
    - create new file /var/opt/opscode/oc_id/config/secret_token.rb
    - update content in file /var/opt/opscode/oc_id/config/secret_token.rb from none to d5e7af
    --- /var/opt/opscode/oc_id/config/secret_token.rb   2025-10-05 06:13:41.506487785 +0000
    +++ /var/opt/opscode/oc_id/config/.chef-secret_token20251005-1727-6tscln.rb 2025-10-05 06:13:41.506487785 +0000
    @@ -1 +1,3 @@
    +# CREATED BY CHEF - DO NOT MODIFY
    +OcId::Application.config.secret_key_base = Secrets.get('oc_id', 'secret_key_base')
    - change mode from '' to '0640'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * file[/opt/opscode/embedded/service/oc_id/config/initializers/secret_token.rb] action delete
    - delete file /opt/opscode/embedded/service/oc_id/config/initializers/secret_token.rb
  * link[/opt/opscode/embedded/service/oc_id/config/initializers/secret_token.rb] action create
    - create symlink at /opt/opscode/embedded/service/oc_id/config/initializers/secret_token.rb to /var/opt/opscode/oc_id/config/secret_token.rb
  * template[/var/opt/opscode/oc_id/config/database.yml] action create
    - create new file /var/opt/opscode/oc_id/config/database.yml
    - update content in file /var/opt/opscode/oc_id/config/database.yml from none to 502cf4
    --- /var/opt/opscode/oc_id/config/database.yml      2025-10-05 06:13:41.536487911 +0000
    +++ /var/opt/opscode/oc_id/config/.chef-database20251005-1727-1q5weo0.yml   2025-10-05 06:13:41.535487906 +0000
    @@ -1 +1,13 @@
    +# AUTO-GENERATED BY CHEF
    +production:
    +  adapter: postgresql
    +  encoding: unicode
    +  pool: 20
    +  template: template1
    +  host: 127.0.0.1
    +  port: 5432
    +  database: oc_id
    +  username: oc_id
    +  password: <%= Secrets.get('oc_id', 'sql_password') %>
    +  sslmode: disable
    - change mode from '' to '0640'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * file[/opt/opscode/embedded/service/oc_id/config/database.yml] action delete
    - delete file /opt/opscode/embedded/service/oc_id/config/database.yml
  * link[/opt/opscode/embedded/service/oc_id/config/database.yml] action create
    - create symlink at /opt/opscode/embedded/service/oc_id/config/database.yml to /var/opt/opscode/oc_id/config/database.yml
  * execute[chown -R opscode:opscode /var/log/opscode/oc_id] action run
    - execute chown -R opscode:opscode /var/log/opscode/oc_id
  * execute[oc_id_schema] action run
    - execute veil-env-helper --use-file -f /etc/opscode/private-chef-secrets.json -s chef-server.webui_key -s oc_id.sql_password -s oc_id.secret_key_base -- bundle exec --keep-file-descriptors rake db:migrate
  * component_runit_service[oc_id] action enable
    * template[/var/log/opscode/oc_id/config] action create
      - create new file /var/log/opscode/oc_id/config
      - update content in file /var/log/opscode/oc_id/config from none to 5e16ac
      --- /var/log/opscode/oc_id/config 2025-10-05 06:13:45.297503670 +0000
      +++ /var/log/opscode/oc_id/.chef-config20251005-1727-1m6ket4      2025-10-05 06:13:45.297503670 +0000
      @@ -1 +1,4 @@
      +# svlogd configuration
      +s104857600
      +n10
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
  Recipe: <Dynamically Defined Resource>
    * service[oc_id] action nothing (skipped due to action :nothing)
    * runit_service[oc_id] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/oc_id] action create
        - create new directory /opt/opscode/sv/oc_id
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/oc_id/run] action create
        - create new file /opt/opscode/sv/oc_id/run
        - update content in file /opt/opscode/sv/oc_id/run from none to 5793b6
        --- /opt/opscode/sv/oc_id/run   2025-10-05 06:13:45.326503791 +0000
        +++ /opt/opscode/sv/oc_id/.chef-run20251005-1727-130zux6        2025-10-05 06:13:45.326503791 +0000
        @@ -1 +1,13 @@
        +#!/bin/sh
        +exec 2>&1
        +
        +DIR=/opt/opscode/embedded/service/oc_id
        +export RAILS_ENV=production
        +export PATH=/opt/opscode/embedded/bin:$PATH
        +export LD_LIBRARY_PATH=/opt/opscode/embedded/lib
        +export HOME=$DIR
        +
        +rm -f $DIR/tmp/pids/server.pid
        +cd $DIR
        +exec veil-env-helper -f /etc/opscode/private-chef-secrets.json --use-file -s chef-server.webui_key -s oc_id.sql_password -s oc_id.secret_key_base -- chpst -P -u opscode -U opscode /opt/opscode/embedded/bin/bundle exec bin/rails server -p 9090 -b 127.0.0.1
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/oc_id/log] action create
        - create new directory /opt/opscode/sv/oc_id/log
      * directory[/opt/opscode/sv/oc_id/log/main] action create
        - create new directory /opt/opscode/sv/oc_id/log/main
        - change mode from '' to '0755'
      * directory[/var/log/oc_id] action create
        - create new directory /var/log/oc_id
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/oc_id/log/config] action create
        - create new file /opt/opscode/sv/oc_id/log/config
        - update content in file /opt/opscode/sv/oc_id/log/config from none to e3b0c4
        (no diff)
        - change mode from '' to '0644'
      * link[/var/log/oc_id/config] action create
        - create symlink at /var/log/oc_id/config to /opt/opscode/sv/oc_id/log/config
      * template[/opt/opscode/sv/oc_id/log/run] action create
        - create new file /opt/opscode/sv/oc_id/log/run
        - update content in file /opt/opscode/sv/oc_id/log/run from none to 4f1bee
        --- /opt/opscode/sv/oc_id/log/run       2025-10-05 06:13:45.363503947 +0000
        +++ /opt/opscode/sv/oc_id/log/.chef-run20251005-1727-1tvuz4m    2025-10-05 06:13:45.363503947 +0000
        @@ -1 +1,4 @@
        +#!/bin/sh
        +exec chpst -U opscode -u opscode \
        +  svlogd -tt /var/log/opscode/oc_id
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/oc_id/env] action create
        - create new directory /opt/opscode/sv/oc_id/env
        - change mode from '' to '0755'
      * ruby_block[Delete unmanaged env files for oc_id service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/oc_id/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/oc_id/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/oc_id/control] action create
        - create new directory /opt/opscode/sv/oc_id/control
        - change mode from '' to '0755'
      * link[/opt/opscode/init/oc_id] action create
        - create symlink at /opt/opscode/init/oc_id to /opt/opscode/embedded/bin/sv
      * file[/opt/opscode/sv/oc_id/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/oc_id] action create (up to date)
        * template[/opt/opscode/sv/oc_id/run] action create (up to date)
        * directory[/opt/opscode/sv/oc_id/log] action create (up to date)
        * directory[/opt/opscode/sv/oc_id/log/main] action create (up to date)
        * directory[/var/log/oc_id] action create (up to date)
        * template[/opt/opscode/sv/oc_id/log/config] action create (up to date)
        * link[/var/log/oc_id/config] action create (up to date)
        * template[/opt/opscode/sv/oc_id/log/run] action create (up to date)
        * directory[/opt/opscode/sv/oc_id/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for oc_id service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/oc_id/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/oc_id/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/oc_id/control] action create (up to date)
        * link[/opt/opscode/init/oc_id] action create (up to date)
        * file[/opt/opscode/sv/oc_id/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/oc_id] action create
          - create symlink at /opt/opscode/service/oc_id to /opt/opscode/sv/oc_id
        * ruby_block[wait for oc_id service socket] action run
          - execute the ruby block wait for oc_id service socket
        - execute the ruby block restart_service
      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/oc_id] action create (up to date)
        * template[/opt/opscode/sv/oc_id/run] action create (up to date)
        * directory[/opt/opscode/sv/oc_id/log] action create (up to date)
        * directory[/opt/opscode/sv/oc_id/log/main] action create (up to date)
        * directory[/var/log/oc_id] action create (up to date)
        * template[/opt/opscode/sv/oc_id/log/config] action create (up to date)
        * link[/var/log/oc_id/config] action create (up to date)
        * template[/opt/opscode/sv/oc_id/log/run] action create (up to date)
        * directory[/opt/opscode/sv/oc_id/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for oc_id service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/oc_id/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/oc_id/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/oc_id/control] action create (up to date)
        * link[/opt/opscode/init/oc_id] action create (up to date)
        * file[/opt/opscode/sv/oc_id/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/oc_id] action create (up to date)
        * ruby_block[wait for oc_id service socket] action run
          - execute the ruby block wait for oc_id service socket
        - execute the ruby block restart_log_service
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/oc_id] action create (up to date)
      * ruby_block[wait for oc_id service socket] action run
        - execute the ruby block wait for oc_id service socket

    * runit_service[oc_id] action reload_log
      - reload log service

Recipe: infra-server::oc_id
  * execute[/opt/opscode/bin/chef-server-ctl start oc_id] action run
    - execute /opt/opscode/bin/chef-server-ctl start oc_id
  * directory[/var/opt/opscode/nginx/etc/addon.d] action create
    - create new directory /var/opt/opscode/nginx/etc/addon.d
  * template[/var/opt/opscode/nginx/etc/addon.d/40-oc_id_upstreams.conf] action create
    - create new file /var/opt/opscode/nginx/etc/addon.d/40-oc_id_upstreams.conf
    - update content in file /var/opt/opscode/nginx/etc/addon.d/40-oc_id_upstreams.conf from none to e19622
    --- /var/opt/opscode/nginx/etc/addon.d/40-oc_id_upstreams.conf      2025-10-05 06:13:51.773531193 +0000
    +++ /var/opt/opscode/nginx/etc/addon.d/.chef-40-oc_id_upstreams20251005-1727-1ry83od.conf   2025-10-05 06:13:51.772531189 +0000
    @@ -1 +1,8 @@
    +#
    +# Opscode Identity upstream definition
    +#
    +upstream oc_id {
    +    server 127.0.0.1:9090;
    +}
    +
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * template[/var/opt/opscode/nginx/etc/addon.d/40-oc_id_external.conf] action create
    - create new file /var/opt/opscode/nginx/etc/addon.d/40-oc_id_external.conf
    - update content in file /var/opt/opscode/nginx/etc/addon.d/40-oc_id_external.conf from none to 08b867
    --- /var/opt/opscode/nginx/etc/addon.d/40-oc_id_external.conf       2025-10-05 06:13:51.794531283 +0000
    +++ /var/opt/opscode/nginx/etc/addon.d/.chef-40-oc_id_external20251005-1727-12rn5eh.conf    2025-10-05 06:13:51.794531283 +0000
    @@ -1 +1,9 @@
    +
    +rewrite ^/id$ /id/ permanent;
    +
    +location ~ "^/id/.*$" {
    +    proxy_redirect http://oc_id /;
    +    proxy_pass http://oc_id;
    +    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' https: data:; base-uri 'self';";
    +}
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
Recipe: infra-server::opensearch
  * directory[/var/opt/opscode/opensearch] action create
    - create new directory /var/opt/opscode/opensearch
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/opensearch/data] action create
    - create new directory /var/opt/opscode/opensearch/data
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/opensearch/tmp] action create
    - create new directory /var/opt/opscode/opensearch/tmp
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/log/opscode/opensearch] action create
    - create new directory /var/log/opscode/opensearch
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/opensearch/config] action create
    - create new directory /var/opt/opscode/opensearch/config
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/opensearch/plugins] action create
    - create new directory /var/opt/opscode/opensearch/plugins
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/opensearch/scripts] action create
    - create new directory /var/opt/opscode/opensearch/scripts
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * execute[sysctl-reload] action nothing (skipped due to action :nothing)
  * file[/etc/sysctl.conf] action create (up to date)
  * sysctl[vm.max_map_count] action apply
    * directory[/etc/sysctl.d] action create (up to date)
    * file[/etc/sysctl.d/99-chef-vm.max_map_count.conf] action create
      - create new file /etc/sysctl.d/99-chef-vm.max_map_count.conf
      - update content in file /etc/sysctl.d/99-chef-vm.max_map_count.conf from none to 603145
      --- /etc/sysctl.d/99-chef-vm.max_map_count.conf   2025-10-05 06:13:51.938531900 +0000
      +++ /etc/sysctl.d/.chef-99-chef-vm20251005-1727-1t64qx1.max_map_count.conf        2025-10-05 06:13:51.935531887 +0000
      @@ -1 +1,2 @@
      +vm.max_map_count = 262144
    * execute[Load sysctl values] action run
      - execute sysctl -p
    - create vm.max_map_count
    -   set value    to "262144"
    -   set comment  to [] (default value)
    -   set conf_dir to "/etc/sysctl.d" (default value)
  * execute[sysctl-reload] action run
    - execute /sbin/sysctl -p /etc/sysctl.conf || true
  * directory[/opt/opscode/service/opensearch/env] action delete (up to date)
  * template[/var/opt/opscode/opensearch/config/opensearch.yml] action create
    - create new file /var/opt/opscode/opensearch/config/opensearch.yml
    - update content in file /var/opt/opscode/opensearch/config/opensearch.yml from none to 6daa87
    --- /var/opt/opscode/opensearch/config/opensearch.yml       2025-10-05 06:13:52.049532376 +0000
    +++ /var/opt/opscode/opensearch/config/.chef-opensearch20251005-1727-1ltuldu.yml    2025-10-05 06:13:52.048532372 +0000
    @@ -1 +1,37 @@
    +# This file generated by the Chef Infra Server. Any direct modifications
    +# will be lost on next reconfigure. You can tune elasticsearch
    +# via elasticsearch.* settings in /opt/opscode/chef-server.rb.
    +#
    +cluster.name: ChefInfraServer-d1104f25
    +node.name: ip-172-31-46-255.ap-south-1.compute.internal
    +path.data:  /var/opt/opscode/opensearch/data
    +path.logs: /var/log/opscode/opensearch
    +# NOTE(ssd) 2020-05-21: This value must be quoted to handle values
    +# such as ::
    +network.host: "127.0.0.1"
    +# Reference: http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html
    +#            http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html
    +#            http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery.html
    +http.port: 9200
    +
    +######## Start OpenSearch Security Configuration ########
    +plugins.security.ssl.transport.pemcert_filepath: node.pem
    +plugins.security.ssl.transport.pemkey_filepath: node-key.pem
    +plugins.security.ssl.transport.pemtrustedcas_filepath: root-ca.pem
    +plugins.security.ssl.transport.enforce_hostname_verification: false
    +plugins.security.ssl.http.enabled: false
    +plugins.security.allow_default_init_securityindex: true
    +plugins.security.authcz.admin_dn:
    +  - "CN=ADMIN,OU=UNIT,O=ORG,L=TORONTO,ST=ONTARIO,C=CA"
    +
    +plugins.security.audit.type: internal_opensearch
    +plugins.security.enable_snapshot_restore_privilege: true
    +plugins.security.check_snapshot_restore_write_privileges: true
    +plugins.security.restapi.roles_enabled: ["all_access", "security_rest_api_access"]
    +plugins.security.system_indices.enabled: true
    +plugins.security.system_indices.indices: [".opendistro-alerting-config", ".opendistro-alerting-alert*", ".opendistro-anomaly-results*", ".opendistro-anomaly-detector*", ".opendistro-anomaly-checkpoints", ".opendistro-anomaly-detection-state", ".opendistro-reports-*", ".opendistro-notifications-*", ".opendistro-notebooks", ".opendistro-asynchronous-search-response*", ".replication-metadata-store"]
    +node.max_local_storage_nodes: 3
    +######## End OpenSearch Security Configuration ########
    +
    +discovery.type: single-node
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/opensearch/config/logging.yml] action create
    - create new file /var/opt/opscode/opensearch/config/logging.yml
    - update content in file /var/opt/opscode/opensearch/config/logging.yml from none to 9c3467
    --- /var/opt/opscode/opensearch/config/logging.yml  2025-10-05 06:13:52.072532474 +0000
    +++ /var/opt/opscode/opensearch/config/.chef-logging20251005-1727-1gmme7r.yml       2025-10-05 06:13:52.072532474 +0000
    @@ -1 +1,22 @@
    +# you can override this using by setting a system property, for example -Des.logger.level=DEBUG
    +es.logger.level: INFO
    +rootLogger: ${es.logger.level}, console
    +logger:
    +  # log action execution errors for easier debugging
    +  action: DEBUG
    +
    +  # reduce the logging for aws, too much is logged under the default INFO
    +  com.amazonaws: WARN
    +  # aws will try to do some sketchy JMX stuff, but its not needed.
    +  com.amazonaws.jmx.SdkMBeanRegistrySupport: ERROR
    +  com.amazonaws.metrics.AwsSdkMetrics: ERROR
    +
    +  org.apache.http: INFO
    +
    +appender:
    +  console:
    +    type: console
    +    layout:
    +      type: consolePattern
    +      conversionPattern: "[%-5p][%-25c] %m%n"%
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/opensearch/config/jvm.options] action create
    - create new file /var/opt/opscode/opensearch/config/jvm.options
    - update content in file /var/opt/opscode/opensearch/config/jvm.options from none to 5c0c15
    --- /var/opt/opscode/opensearch/config/jvm.options  2025-10-05 06:13:52.089532547 +0000
    +++ /var/opt/opscode/opensearch/config/.chef-jvm20251005-1727-14wqpdc.options       2025-10-05 06:13:52.089532547 +0000
    @@ -1 +1,45 @@
    +## JVM Configuration
    +
    +
    +# Do not override xmx/xms/newsize in
    +# jvm_options - instead set the attributes in chef-server.rb
    +-Xmx1024m
    +-Xms1024m
    +-XX:NewSize=64M
    +
    +# These are defaulted based on what 7.9 ships with.
    +# https://github.com/elastic/elasticsearch/blob/7.9/distribution/src/config/jvm.options
    +
    +## GC configuration
    +8-13:-XX:+UseConcMarkSweepGC
    +8-13:-XX:CMSInitiatingOccupancyFraction=75
    +8-13:-XX:+UseCMSInitiatingOccupancyOnly
    +
    +## G1GC Configuration
    +# NOTE: G1 GC is only supported on JDK version 10 or later
    +# to use G1GC, uncomment the next two lines and update the version on the
    +# following three lines to your version of the JDK
    +# 10-13:-XX:-UseConcMarkSweepGC
    +# 10-13:-XX:-UseCMSInitiatingOccupancyOnly
    +14-:-XX:+UseG1GC
    +14-:-XX:G1ReservePercent=25
    +14-:-XX:InitiatingHeapOccupancyPercent=30
    +
    +## JVM temporary directory
    +-Djava.io.tmpdir=/var/opt/opscode/opensearch/tmp
    +
    +## heap dumps
    +
    +# generate a heap dump when an allocation from the Java heap fails
    +# heap dumps are created in the working directory of the JVM
    +-XX:+HeapDumpOnOutOfMemoryError
    +
    +# specify an alternative path for heap dumps; ensure the directory exists and
    +# has sufficient space
    +-XX:HeapDumpPath=/var/opt/opscode/opensearch/tmp
    +
    +# specify an alternative path for JVM fatal error logs
    +-XX:ErrorFile=/var/opt/opscode/opensearch/tmp
    +
    +## GC logging
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * cookbook_file[/var/opt/opscode/opensearch/config/log4j2.properties] action create
    - create new file /var/opt/opscode/opensearch/config/log4j2.properties
    - update content in file /var/opt/opscode/opensearch/config/log4j2.properties from none to 3149cf
    --- /var/opt/opscode/opensearch/config/log4j2.properties    2025-10-05 06:13:52.114219367 +0000
    +++ /var/opt/opscode/opensearch/config/.chef-log4j220251005-1727-14hjvy.properties  2025-10-05 06:13:52.114219367 +0000
    @@ -1 +1,14 @@
    +status = error
    +
    +# log action execution errors for easier debugging
    +logger.action.name = org.elasticsearch.action
    +logger.action.level = debug
    +
    +appender.console.type = Console
    +appender.console.name = console
    +appender.console.layout.type = PatternLayout
    +appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] [%node_name]%marker %m%n
    +
    +rootLogger.level = info
    +rootLogger.appenderRef.console.ref = console
    - change mode from '' to '0744'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * cookbook_file[/var/opt/opscode/opensearch/config/ssl_script.sh] action create
    - create new file /var/opt/opscode/opensearch/config/ssl_script.sh
    - update content in file /var/opt/opscode/opensearch/config/ssl_script.sh from none to c2dbdf
    --- /var/opt/opscode/opensearch/config/ssl_script.sh        2025-10-05 06:13:52.131376135 +0000
    +++ /var/opt/opscode/opensearch/config/.chef-ssl_script20251005-1727-4l9etu.sh      2025-10-05 06:13:52.131376135 +0000
    @@ -1 +1,20 @@
    +#!/bin/sh
    +# Root CA
    +openssl genrsa -out root-ca-key.pem 2048
    +openssl req -new -x509 -sha256 -key root-ca-key.pem -subj "/C=CA/ST=ONTARIO/L=TORONTO/O=ORG/OU=UNIT/CN=ROOT" -out root-ca.pem -days 730
    +# Admin cert
    +openssl genrsa -out admin-key-temp.pem 2048
    +openssl pkcs8 -inform PEM -outform PEM -in admin-key-temp.pem -topk8 -nocrypt -v1 PBE-SHA1-3DES -out admin-key.pem
    +openssl req -new -key admin-key.pem -subj "/C=CA/ST=ONTARIO/L=TORONTO/O=ORG/OU=UNIT/CN=ADMIN" -out admin.csr
    +openssl x509 -req -in admin.csr -CA root-ca.pem -CAkey root-ca-key.pem -CAcreateserial -sha256 -out admin.pem -days 730
    +# Node cert
    +openssl genrsa -out node-key-temp.pem 2048
    +openssl pkcs8 -inform PEM -outform PEM -in node-key-temp.pem -topk8 -nocrypt -v1 PBE-SHA1-3DES -out node-key.pem
    +openssl req -new -key node-key.pem -subj "/C=CA/ST=ONTARIO/L=TORONTO/O=ORG/OU=UNIT/CN=node1.example.com" -out node.csr
    +openssl x509 -req -in node.csr -CA root-ca.pem -CAkey root-ca-key.pem -CAcreateserial -sha256 -out node.pem -days 730
    +# Cleanup
    +rm admin-key-temp.pem
    +rm admin.csr
    +rm node-key-temp.pem
    +rm node.csr
    - change mode from '' to '0744'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * execute[generate ssl certificates] action run
    - execute sh /var/opt/opscode/opensearch/config/ssl_script.sh
  * template[/opt/opscode/embedded/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml] action create
    - update content in file /opt/opscode/embedded/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml from ac45db to 309e0c
    --- /opt/opscode/embedded/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml  2022-11-08 23:05:05.000000000 +0000
    +++ /opt/opscode/embedded/opensearch/plugins/opensearch-security/securityconfig/.chef-internal_users20251005-1727-pphkvy.yml        2025-10-05 06:13:52.562534575 +0000
    @@ -1,4 +1,6 @@
    ----
    +# This file generated by the Chef Infra Server. Any direct modifications
    +# will be lost on next reconfigure.
    +#
     # This is the internal user database
     # The hash value is a bcrypt hash and can be generated with plugin/tools/hash.sh

    @@ -7,51 +9,11 @@
       config_version: 2

     # Define your internal users here
    -
    -## Demo users
    -
    -admin:
    -  hash: "$2a$12$VcCDgh2NDk07JGN0rjGbM.Ad41qVR/YFJcgHp0UGns5JDymv..TOG"
    -  reserved: true
    -  backend_roles:
    -  - "admin"
    -  description: "Demo admin user"
    -
    -kibanaserver:
    -  hash: "$2a$12$4AcgAt3xwOWadA5s5blL6ev39OXDNhmOesEoo33eZtrq2N0YrU3H."
    -  reserved: true
    -  description: "Demo OpenSearch Dashboards user"
    -
    -kibanaro:
    -  hash: "$2a$12$JJSXNfTowz7Uu5ttXfeYpeYE0arACvcwlPBStB1F.MI7f0U9Z4DGC"
    +opensearch_user:
    +  hash: "$2y$12$YTY3xfKXlStPote4FLZRiuReU2fNn5EwvALH9VqRU91tCMwQzDU4i"
       reserved: false
    +  hidden: false
       backend_roles:
    -  - "kibanauser"
    -  - "readall"
    -  attributes:
    -    attribute1: "value1"
    -    attribute2: "value2"
    -    attribute3: "value3"
    -  description: "Demo OpenSearch Dashboards read only user"
    -
    -logstash:
    -  hash: "$2a$12$u1ShR4l4uBS3Uv59Pa2y5.1uQuZBrZtmNfqB3iM/.jL0XoV9sghS2"
    -  reserved: false
    -  backend_roles:
    -  - "logstash"
    -  description: "Demo logstash user"
    -
    -readall:
    -  hash: "$2a$12$ae4ycwzwvLtZxwZ82RmiEunBbIPiAmGZduBAjKN0TXdwQFtCwARz2"
    -  reserved: false
    -  backend_roles:
    -  - "readall"
    -  description: "Demo readall user"
    -
    -snapshotrestore:
    -  hash: "$2y$12$DpwmetHKwgYnorbgdvORCenv4NAK8cPUg8AI6pxLCuWf/ALc0.v7W"
    -  reserved: false
    -  backend_roles:
    -  - "snapshotrestore"
    -  description: "Demo snapshotrestore user"
    +  - "admin"
    +  static: false
    - change owner from 'root' to 'opscode'
    - change group from 'root' to 'opscode'
  * link[/opt/opscode/embedded/opensearch/config] action create
    - create symlink at /opt/opscode/embedded/opensearch/config to /var/opt/opscode/opensearch/config
  * component_runit_service[opensearch] action enable
    * template[/var/log/opscode/opensearch/config] action create
      - create new file /var/log/opscode/opensearch/config
      - update content in file /var/log/opscode/opensearch/config from none to 5e16ac
      --- /var/log/opscode/opensearch/config    2025-10-05 06:13:52.592534703 +0000
      +++ /var/log/opscode/opensearch/.chef-config20251005-1727-5ce0n4  2025-10-05 06:13:52.592534703 +0000
      @@ -1 +1,4 @@
      +# svlogd configuration
      +s104857600
      +n10
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
  Recipe: <Dynamically Defined Resource>
    * service[opensearch] action nothing (skipped due to action :nothing)
    * runit_service[opensearch] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opensearch] action create
        - create new directory /opt/opscode/sv/opensearch
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/opensearch/run] action create
        - create new file /opt/opscode/sv/opensearch/run
        - update content in file /opt/opscode/sv/opensearch/run from none to 97f2a1
        --- /opt/opscode/sv/opensearch/run      2025-10-05 06:13:52.627534853 +0000
        +++ /opt/opscode/sv/opensearch/.chef-run20251005-1727-sox5e7    2025-10-05 06:13:52.627534853 +0000
        @@ -1 +1,18 @@
        +#!/bin/sh
        +exec 2>&1
        +
        +ulimit -n 65536
        +
        +export ES_HOME=/var/opt/opscode/opensearch            #/var/opt/opscode/elasticsearch
        +export ES_DATA=/var/opt/opscode/opensearch/data       #/var/opt/opscode/elasticsearch/data
        +
        +export JAVA_HOME=/opt/opscode/embedded/open-jre/
        +export ES_PATH_CONF=/var/opt/opscode/opensearch/config
        +export PATH=/opt/opscode/embedded/bin:$JAVA_HOME/bin:$ES_HOME:$PATH #/opt/opscode/embedded/bin
        +
        +export TMPDIR=/var/opt/opscode/opensearch/tmp
        +export ES_TMPDIR=/var/opt/opscode/opensearch/tmp
        +
        +cd $ES_HOME
        +exec chpst -P -u opscode -U opscode /opt/opscode/embedded/opensearch/bin/opensearch
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/opensearch/log] action create
        - create new directory /opt/opscode/sv/opensearch/log
      * directory[/opt/opscode/sv/opensearch/log/main] action create
        - create new directory /opt/opscode/sv/opensearch/log/main
        - change mode from '' to '0755'
      * directory[/var/log/opensearch] action create
        - create new directory /var/log/opensearch
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/opensearch/log/config] action create
        - create new file /opt/opscode/sv/opensearch/log/config
        - update content in file /opt/opscode/sv/opensearch/log/config from none to e3b0c4
        (no diff)
        - change mode from '' to '0644'
      * link[/var/log/opensearch/config] action create
        - create symlink at /var/log/opensearch/config to /opt/opscode/sv/opensearch/log/config
      * template[/opt/opscode/sv/opensearch/log/run] action create
        - create new file /opt/opscode/sv/opensearch/log/run
        - update content in file /opt/opscode/sv/opensearch/log/run from none to 9742af
        --- /opt/opscode/sv/opensearch/log/run  2025-10-05 06:13:52.670535038 +0000
        +++ /opt/opscode/sv/opensearch/log/.chef-run20251005-1727-e4ldvo        2025-10-05 06:13:52.669535033 +0000
        @@ -1 +1,3 @@
        +#!/bin/sh
        +exec chpst -U opscode -u opscode svlogd -tt /var/log/opscode/opensearch
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/opensearch/env] action create
        - create new directory /opt/opscode/sv/opensearch/env
        - change mode from '' to '0755'
      * ruby_block[Delete unmanaged env files for opensearch service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opensearch/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opensearch/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opensearch/control] action create
        - create new directory /opt/opscode/sv/opensearch/control
        - change mode from '' to '0755'
      * link[/opt/opscode/init/opensearch] action create
        - create symlink at /opt/opscode/init/opensearch to /opt/opscode/embedded/bin/sv
      * file[/opt/opscode/sv/opensearch/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/opensearch] action create (up to date)
        * template[/opt/opscode/sv/opensearch/run] action create (up to date)
        * directory[/opt/opscode/sv/opensearch/log] action create (up to date)
        * directory[/opt/opscode/sv/opensearch/log/main] action create (up to date)
        * directory[/var/log/opensearch] action create (up to date)
        * template[/opt/opscode/sv/opensearch/log/config] action create (up to date)
        * link[/var/log/opensearch/config] action create (up to date)
        * template[/opt/opscode/sv/opensearch/log/run] action create (up to date)
        * directory[/opt/opscode/sv/opensearch/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for opensearch service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/opensearch/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/opensearch/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/opensearch/control] action create (up to date)
        * link[/opt/opscode/init/opensearch] action create (up to date)
        * file[/opt/opscode/sv/opensearch/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/opensearch] action create
          - create symlink at /opt/opscode/service/opensearch to /opt/opscode/sv/opensearch
        * ruby_block[wait for opensearch service socket] action run
          - execute the ruby block wait for opensearch service socket
        - execute the ruby block restart_service
      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/opensearch] action create (up to date)
        * template[/opt/opscode/sv/opensearch/run] action create (up to date)
        * directory[/opt/opscode/sv/opensearch/log] action create (up to date)
        * directory[/opt/opscode/sv/opensearch/log/main] action create (up to date)
        * directory[/var/log/opensearch] action create (up to date)
        * template[/opt/opscode/sv/opensearch/log/config] action create (up to date)
        * link[/var/log/opensearch/config] action create (up to date)
        * template[/opt/opscode/sv/opensearch/log/run] action create (up to date)
        * directory[/opt/opscode/sv/opensearch/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for opensearch service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/opensearch/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/opensearch/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/opensearch/control] action create (up to date)
        * link[/opt/opscode/init/opensearch] action create (up to date)
        * file[/opt/opscode/sv/opensearch/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/opensearch] action create (up to date)
        * ruby_block[wait for opensearch service socket] action run
          - execute the ruby block wait for opensearch service socket
        - execute the ruby block restart_log_service
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opensearch] action create (up to date)
      * ruby_block[wait for opensearch service socket] action run
        - execute the ruby block wait for opensearch service socket

    * runit_service[opensearch] action reload_log
      - reload log service

Recipe: infra-server::opensearch
  * component_runit_service[opensearch] action start
  Recipe: <Dynamically Defined Resource>
    * service[opensearch] action nothing (skipped due to action :nothing)
    * runit_service[opensearch] action start (up to date)
     (up to date)
Recipe: infra-server::opensearch
  * chef_sleep[10] action sleep
    - sleep 10 seconds
  * execute[add internal user to opensearch security plugin] action run
    - execute export JAVA_HOME="/opt/opscode/embedded/open-jre/"; ./securityadmin.sh   -f ../securityconfig/internal_users.yml   -icl -nhnv -cert /opt/opscode/embedded/opensearch/config/admin.pem   -cacert /opt/opscode/embedded/opensearch/config/root-ca.pem   -key /opt/opscode/embedded/opensearch/config/admin-key.pem
Recipe: infra-server::opensearch_index
  * opensearch_index[chef] action create
    - Creating opensearch index chef
Recipe: infra-server::bookshelf
  * template[/opt/opscode/embedded/bin/cookbook_migration.sh] action create
    - create new file /opt/opscode/embedded/bin/cookbook_migration.sh
    - update content in file /opt/opscode/embedded/bin/cookbook_migration.sh from none to 356769
    --- /opt/opscode/embedded/bin/cookbook_migration.sh 2025-10-05 06:14:36.579723589 +0000
    +++ /opt/opscode/embedded/bin/.chef-cookbook_migration20251005-1727-1v1u2kv.sh      2025-10-05 06:14:36.579723589 +0000
    @@ -1 +1,81 @@
    +#!/opt/opscode/embedded/bin/escript
    +
    +%% using compiled mode gives more informative error traces
    +-mode(compile).
    +
    +-define(MAGIC_NUMBER, <<16#b00c:16/integer>>).
    +-define(OLD_COOKBOOK_PATH, "/var/opt/opscode/opscode-chef/checksum/").
    +-define(BOOKSHELF_PATH, "/var/opt/opscode/bookshelf/").
    +-define(BOOKSHELF_DATA_PATH, "/var/opt/opscode/bookshelf/data/").
    +-define(NEW_BOOKSHELF_CONTAINER, ?BOOKSHELF_DATA_PATH ++ "bookshelf/").
    +
    +main(_) ->
    +    ok = create_destination(),
    +    ok = move_cookbooks().
    +
    +create_destination() ->
    +    create_directory_if_needed(?BOOKSHELF_PATH),
    +    create_directory_if_needed(?BOOKSHELF_DATA_PATH),
    +    create_directory_if_needed(?NEW_BOOKSHELF_CONTAINER).
    +
    +create_directory_if_needed(Path) ->
    +    DummyPath = filename:join(Path, "for-ensure"),
    +    case filelib:ensure_dir(DummyPath) of
    +        ok ->
    +            ok;
    +        Error ->
    +            erlang:error(Error)
    +    end.
    +
    +move_cookbooks() ->
    +    case file:list_dir(?OLD_COOKBOOK_PATH) of
    +        {ok, Orgs} ->
    +            ok = move_orgs(Orgs);
    +        _ ->
    +            % no files (e.g., a fresh install?), so nothing to migrate, just return
    +            ok
    +    end.
    +
    +move_orgs([]) ->
    +    ok;
    +move_orgs([Org|Rest]) ->
    +    Path = ?OLD_COOKBOOK_PATH ++ Org,
    +    {ok, Dirs} = file:list_dir(Path),
    +    ok = move_dirs(Org, Dirs),
    +    ok = move_orgs(Rest).
    +
    +move_dirs(_, []) ->
    +    ok;
    +move_dirs(Org, [Dir|Rest]) ->
    +    Path = ?OLD_COOKBOOK_PATH ++ Org ++ "/" ++ Dir,
    +    {ok, Files} = file:list_dir(Path),
    +    ok = move_files(Org, Dir, Files),
    +    ok = move_dirs(Org, Rest).
    +
    +move_files(_, _, []) ->
    +    ok;
    +move_files(Org, Dir, [File|Rest]) ->
    +    OldPath = ?OLD_COOKBOOK_PATH ++ Org ++ "/" ++ Dir ++ "/" ++ File,
    +    NewPath = ?NEW_BOOKSHELF_CONTAINER ++ new_file_name(Org, File),
    +    update_header(OldPath, NewPath),
    +    ok = move_files(Org, Dir, Rest).
    +
    +new_file_name(Org, File) ->
    +    "organization-" ++ Org ++ "%2Fchecksum-" ++ File.
    +
    +update_header(OldPath, NewPath) ->
    +    case file:open(NewPath, [exclusive, write, binary]) of
    +        {ok, Fd} ->
    +            {ok, Data} = file:read_file(OldPath),
    +            Ctx0 = erlang:md5_init(),
    +            Ctx1 = erlang:md5_update(Ctx0, Data),
    +            Digest = erlang:md5_final(Ctx1),
    +            file:write(Fd, ?MAGIC_NUMBER),
    +            file:write(Fd, Digest),
    +            file:write(Fd, Data),
    +            file:close(Fd);
    +        {error, eexist} ->
    +            % Already done, just return ok
    +            ok
    +    end.
    - change mode from '' to '0755'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * directory[/var/opt/opscode/bookshelf] action create
    - create new directory /var/opt/opscode/bookshelf
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/log/opscode/bookshelf] action create
    - create new directory /var/log/opscode/bookshelf
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/log/opscode/bookshelf/sasl] action create
    - create new directory /var/log/opscode/bookshelf/sasl
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/bookshelf/data] action create
    - create new directory /var/opt/opscode/bookshelf/data
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * execute[cookbook migration] action run
    - execute /opt/opscode/embedded/bin/cookbook_migration.sh
  * link[/opt/opscode/embedded/service/bookshelf/log] action create
    - create symlink at /opt/opscode/embedded/service/bookshelf/log to /var/log/opscode/bookshelf
  * template[/var/opt/opscode/bookshelf/sys.config] action create
    - create new file /var/opt/opscode/bookshelf/sys.config
    - update content in file /var/opt/opscode/bookshelf/sys.config from none to 516995
    --- /var/opt/opscode/bookshelf/sys.config   2025-10-05 06:14:36.879724937 +0000
    +++ /var/opt/opscode/bookshelf/.chef-sys20251005-1727-1s7p02k.config        2025-10-05 06:14:36.879724937 +0000
    @@ -1 +1,99 @@
    +%% -*- mode: erlang -*-
    +%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
    +%% ex: ts=4 sw=4 ft=erlang et
    +
    +[
    + {kernel, [{inet_dist_use_interface, {127,0,0,1}}]},
    + %% SASL config
    + {sasl, [
    +         {sasl_error_logger, {file, "/var/log/opscode/bookshelf/sasl-error.log"}},
    +         {errlog_type, error},
    +         {error_logger_mf_dir, "/var/log/opscode/bookshelf/sasl"},      % Log directory
    +         {error_logger_mf_maxbytes, 104857600},
    +         {error_logger_mf_maxfiles, 10}
    +        ]},
    +
    + {crypto, [
    +           {fips_mode, false}
    +          ]},
    +
    + {lager, [
    +          %% What handlers to install with what arguments
    +          %% The defaults for the logfiles are to rotate the files when
    +          %% they reach 10Mb or at midnight, whichever comes first, and keep
    +          %% the last 5 rotations. See the lager README for a description of
    +          %% the time rotation format:
    +          %% https://github.com/basho/lager/blob/master/README.md#internal-log-rotation
    +          %%
    +          %% If you wish to disable rotation, you can either set the size to 0
    +          %% and the rotation time to "", or instead specify a 2-tuple that only
    +          %% consists of {Logfile, Level}.
    +          {handlers, [
    +              {lager_console_backend, [
    +                {level, info},
    +                {formatter, lager_default_formatter},
    +                {formatter_config, [ "[", severity, "] ", message, "\n"]}
    +              ]},
    +              {lager_file_backend, [
    +                                    {file, "/var/log/opscode/bookshelf/error.log"},
    +                                    {level, error},
    +                                    {size, 104857600},
    +                                    {date, "$D0"},
    +                                    {count, 10}
    +                                   ]},
    +              {lager_file_backend, [
    +                                    {file, "/var/log/opscode/bookshelf/console.log"},
    +                                    {level, info},
    +                                    {size, 104857600},
    +                                    {date, "$D0"},
    +                                    {count, 10},
    +                                    %% Removes the logging source, since currently
    +                                    %% there's only one place in all of Bifrost that
    +                                    %% we log from.  Also removes the PID from
    +                                    %% the default message format.
    +                                    {formatter_config, [date, " ", time, " [", severity, "] ", message, "\n"]}
    +                                   ]}
    +              ]},
    +
    +          %% Whether to write a crash log, and where.
    +          %% Commented/omitted/undefined means no crash logger.
    +          {crash_log, "/var/log/opscode/bookshelf/crash.log"},
    +
    +          %% Maximum size in bytes of events in the crash log - defaults to 65536
    +          {crash_log_msg_size, 65536},
    +
    +          %% Maximum size of the crash log in bytes, before its rotated, set
    +          %% to 0 to disable rotation - default is 0
    +          {crash_log_size, 104857600},
    +
    +          %% What time to rotate the crash log - default is no time
    +          %% rotation. See the lager README for a description of this format:
    +          %% https://github.com/basho/lager/blob/master/README.org
    +          {crash_log_date, "$D0"},
    +
    +          %% Number of rotated crash logs to keep, 0 means keep only the
    +          %% current one - default is 0
    +          {crash_log_count, 10},
    +
    +          %% Whether to redirect error_logger messages into lager - defaults to true
    +          {error_logger_redirect, true},
    +
    +          %% Bump up the "high-water mark" (default 50), which is the
    +          %% number of messages per second allowed to come from
    +          %% error_logger.
    +          {error_logger_hwm, 1000}
    +        ]},
    + {chef_secrets, [{provider, chef_secrets_fd}]},
    + {bookshelf, [{ip, "127.0.0.1"},
    +              {port, 4321},
    +              {storage_type, filesystem},
    +              {disk_store, "/var/opt/opscode/bookshelf/data"},
    +              {stream_download, true},
    +              {log_dir, "/var/log/opscode/bookshelf"}
    +             ]},
    + {webmachine, [
    +          {log_handlers, [
    +                         ]
    +          }]}
    +].
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * link[/opt/opscode/embedded/service/bookshelf/sys.config] action create
    - unlink existing symlink to file at /opt/opscode/embedded/service/bookshelf/sys.config
    - create symlink at /opt/opscode/embedded/service/bookshelf/sys.config to /var/opt/opscode/bookshelf/sys.config
  * template[/var/opt/opscode/bookshelf/vm.args] action create
    - create new file /var/opt/opscode/bookshelf/vm.args
    - update content in file /var/opt/opscode/bookshelf/vm.args from none to d0377e
    --- /var/opt/opscode/bookshelf/vm.args      2025-10-05 06:14:36.904725049 +0000
    +++ /var/opt/opscode/bookshelf/.chef-vm20251005-1727-1iu79xo.args   2025-10-05 06:14:36.904725049 +0000
    @@ -1 +1,36 @@
    +## Name of the node
    +-name bookshelf@127.0.0.1
    +
    +## Cookie for distributed erlang
    +-setcookie bookshelf
    +
    +## Add a directory to the code path where hot patches can be
    +## placed and easily accessed.
    +-pa lib/patches
    +
    +## Heartbeat management; auto-restarts VM if it dies or becomes unresponsive
    +## (Disabled by default..use with caution!)
    +##-heart
    +
    +## Enable kernel poll
    ++K true
    +
    +## Increase maximum IO ports from default (65536) to 196608
    +## This change helps bookshelf cope with bursty
    +## concurrent load
    +## Once we are on R16, we should use: +Q 196608
    +-env ERL_MAX_PORTS 196608
    +
    +## Increase maximum concurrent Erlang process from
    +## default (262144) to 524288
    +## NOTE: This value MUST be a power of 2
    +## N band (N - 1) == 0
    ++P 524288
    +
    +## Increase async worker thread pool size from
    +## R15 default of 0 to R16 default of 10.
    +## Async workers prevents IO from blocking the
    +## schedulers and increases performance of IO-heavy
    +## apps, like bookshelf.
    ++A 10
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * link[/opt/opscode/embedded/service/bookshelf/vm.args] action create
    - create symlink at /opt/opscode/embedded/service/bookshelf/vm.args to /var/opt/opscode/bookshelf/vm.args
  * component_runit_service[bookshelf] action enable
    * template[/var/log/opscode/bookshelf/config] action create
      - create new file /var/log/opscode/bookshelf/config
      - update content in file /var/log/opscode/bookshelf/config from none to 5e16ac
      --- /var/log/opscode/bookshelf/config     2025-10-05 06:14:36.923725135 +0000
      +++ /var/log/opscode/bookshelf/.chef-config20251005-1727-xp28cw   2025-10-05 06:14:36.923725135 +0000
      @@ -1 +1,4 @@
      +# svlogd configuration
      +s104857600
      +n10
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
  Recipe: <Dynamically Defined Resource>
    * service[bookshelf] action nothing (skipped due to action :nothing)
    * runit_service[bookshelf] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/bookshelf] action create
        - create new directory /opt/opscode/sv/bookshelf
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/bookshelf/run] action create
        - create new file /opt/opscode/sv/bookshelf/run
        - update content in file /opt/opscode/sv/bookshelf/run from none to 4f47e4
        --- /opt/opscode/sv/bookshelf/run       2025-10-05 06:14:36.952725265 +0000
        +++ /opt/opscode/sv/bookshelf/.chef-run20251005-1727-aqz5tw     2025-10-05 06:14:36.952725265 +0000
        @@ -1 +1,6 @@
        +#!/bin/sh
        +exec 2>&1
        +
        +export PATH=/opt/opscode/embedded/bin:$PATH
        +exec veil-env-helper --use-file -f /etc/opscode/private-chef-secrets.json -s bookshelf.access_key_id -s bookshelf.secret_access_key -o bookshelf.sql_password -- chpst -P -u opscode -U opscode env ERL_EPMD_ADDRESS=127.0.0.1 HOME=/var/opt/opscode/bookshelf /opt/opscode/embedded/service/bookshelf/bin/bookshelf foreground
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/bookshelf/log] action create
        - create new directory /opt/opscode/sv/bookshelf/log
      * directory[/opt/opscode/sv/bookshelf/log/main] action create
        - create new directory /opt/opscode/sv/bookshelf/log/main
        - change mode from '' to '0755'
      * directory[/var/log/bookshelf] action create
        - create new directory /var/log/bookshelf
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/bookshelf/log/config] action create
        - create new file /opt/opscode/sv/bookshelf/log/config
        - update content in file /opt/opscode/sv/bookshelf/log/config from none to e3b0c4
        (no diff)
        - change mode from '' to '0644'
      * link[/var/log/bookshelf/config] action create
        - create symlink at /var/log/bookshelf/config to /opt/opscode/sv/bookshelf/log/config
      * template[/opt/opscode/sv/bookshelf/log/run] action create
        - create new file /opt/opscode/sv/bookshelf/log/run
        - update content in file /opt/opscode/sv/bookshelf/log/run from none to f7dfd6
        --- /opt/opscode/sv/bookshelf/log/run   2025-10-05 06:14:36.992725445 +0000
        +++ /opt/opscode/sv/bookshelf/log/.chef-run20251005-1727-7224c0 2025-10-05 06:14:36.992725445 +0000
        @@ -1 +1,4 @@
        +#!/bin/sh
        +exec chpst -U opscode -u opscode \
        +  svlogd -tt /var/log/opscode/bookshelf
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/bookshelf/env] action create
        - create new directory /opt/opscode/sv/bookshelf/env
        - change mode from '' to '0755'
      * ruby_block[Delete unmanaged env files for bookshelf service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/bookshelf/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/bookshelf/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/bookshelf/control] action create
        - create new directory /opt/opscode/sv/bookshelf/control
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/bookshelf/control/t] action create
        - create new file /opt/opscode/sv/bookshelf/control/t
        - update content in file /opt/opscode/sv/bookshelf/control/t from none to fda458
        --- /opt/opscode/sv/bookshelf/control/t 2025-10-05 06:14:37.012725535 +0000
        +++ /opt/opscode/sv/bookshelf/control/.chef-t20251005-1727-8ynba4       2025-10-05 06:14:37.011725530 +0000
        @@ -1 +1,4 @@
        +#!/bin/sh
        +echo "received TERM from runit, sending INT instead"
        +/opt/opscode/embedded/bin/sv interrupt bookshelf
        - change mode from '' to '0755'
      * link[/opt/opscode/init/bookshelf] action create
        - create symlink at /opt/opscode/init/bookshelf to /opt/opscode/embedded/bin/sv
      * file[/opt/opscode/sv/bookshelf/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/bookshelf] action create (up to date)
        * template[/opt/opscode/sv/bookshelf/run] action create (up to date)
        * directory[/opt/opscode/sv/bookshelf/log] action create (up to date)
        * directory[/opt/opscode/sv/bookshelf/log/main] action create (up to date)
        * directory[/var/log/bookshelf] action create (up to date)
        * template[/opt/opscode/sv/bookshelf/log/config] action create (up to date)
        * link[/var/log/bookshelf/config] action create (up to date)
        * template[/opt/opscode/sv/bookshelf/log/run] action create (up to date)
        * directory[/opt/opscode/sv/bookshelf/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for bookshelf service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/bookshelf/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/bookshelf/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/bookshelf/control] action create (up to date)
        * template[/opt/opscode/sv/bookshelf/control/t] action create (up to date)
        * link[/opt/opscode/init/bookshelf] action create (up to date)
        * file[/opt/opscode/sv/bookshelf/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/bookshelf] action create
          - create symlink at /opt/opscode/service/bookshelf to /opt/opscode/sv/bookshelf
        * ruby_block[wait for bookshelf service socket] action run
          - execute the ruby block wait for bookshelf service socket
        - execute the ruby block restart_service
      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/bookshelf] action create (up to date)
        * template[/opt/opscode/sv/bookshelf/run] action create (up to date)
        * directory[/opt/opscode/sv/bookshelf/log] action create (up to date)
        * directory[/opt/opscode/sv/bookshelf/log/main] action create (up to date)
        * directory[/var/log/bookshelf] action create (up to date)
        * template[/opt/opscode/sv/bookshelf/log/config] action create (up to date)
        * link[/var/log/bookshelf/config] action create (up to date)
        * template[/opt/opscode/sv/bookshelf/log/run] action create (up to date)
        * directory[/opt/opscode/sv/bookshelf/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for bookshelf service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/bookshelf/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/bookshelf/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/bookshelf/control] action create (up to date)
        * template[/opt/opscode/sv/bookshelf/control/t] action create (up to date)
        * link[/opt/opscode/init/bookshelf] action create (up to date)
        * file[/opt/opscode/sv/bookshelf/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/bookshelf] action create (up to date)
        * ruby_block[wait for bookshelf service socket] action run
          - execute the ruby block wait for bookshelf service socket
        - execute the ruby block restart_log_service
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/bookshelf] action create (up to date)
      * ruby_block[wait for bookshelf service socket] action run
        - execute the ruby block wait for bookshelf service socket

    * runit_service[bookshelf] action reload_log
      - reload log service

Recipe: infra-server::opscode-erchef
  * directory[/var/opt/opscode/opscode-erchef] action create
    - create new directory /var/opt/opscode/opscode-erchef
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/log/opscode/opscode-erchef] action create
    - create new directory /var/log/opscode/opscode-erchef
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/log/opscode/opscode-erchef/sasl] action create
    - create new directory /var/log/opscode/opscode-erchef/sasl
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * link[/opt/opscode/embedded/service/opscode-erchef/log] action create
    - create symlink at /opt/opscode/embedded/service/opscode-erchef/log to /var/log/opscode/opscode-erchef
  * template[/var/opt/opscode/opscode-erchef/sys.config] action create
    - create new file /var/opt/opscode/opscode-erchef/sys.config
    - update content in file /var/opt/opscode/opscode-erchef/sys.config from none to b07a2b
    --- /var/opt/opscode/opscode-erchef/sys.config      2025-10-05 06:14:42.744751295 +0000
    +++ /var/opt/opscode/opscode-erchef/.chef-sys20251005-1727-ron9w8.config    2025-10-05 06:14:42.744751295 +0000
    @@ -1 +1,267 @@
    +%% -*- mode: erlang -*-
    +%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
    +%% ex: ts=4 sw=4 ft=eruby.erlang et
    +[
    +    {kernel, [{inet_dist_use_interface, {127,0,0,1}}]},
    +    %% SASL config
    +
    +    {sasl, [
    +        {sasl_error_logger, {file, "/var/log/opscode/opscode-erchef/sasl-error.log"}},
    +        {errlog_type, error},
    +        {error_logger_mf_dir, "/var/log/opscode/opscode-erchef/sasl"},      % Log directory
    +        {error_logger_mf_maxbytes, 104857600},
    +        {error_logger_mf_maxfiles, 10}
    +    ]},
    +
    +    {crypto, [
    +              {fips_mode, false}
    +    ]},
    +
    +    {lager, [
    +        {handlers, [
    +            {lager_console_backend, [
    +                {level, info},
    +                {formatter, lager_default_formatter},
    +                {formatter_config, [ "[", severity, "] ", message, "\n"]}
    +            ]},
    +            {lager_file_backend, [
    +                {file, "/var/log/opscode/opscode-erchef/erchef.log"},
    +                {level, info},
    +                {size, 104857600},
    +                {date, "$D0"},
    +                {count, 10},
    +                {formatter_config, [date, " ", time, " [", severity, "] ", message, "\n"]}
    +            ]}
    +        ]},
    +
    +        %% Whether to write a crash log, and where.
    +        %% Commented/omitted/undefined means no crash logger.
    +        {crash_log, "/var/log/opscode/opscode-erchef/crash.log"},
    +
    +        %% Maximum size in bytes of events in the crash log - defaults to 65536
    +        {crash_log_msg_size, 65536},
    +
    +        %% Maximum size of the crash log in bytes, before its rotated, set
    +        %% to 0 to disable rotation - default is 0
    +        {crash_log_size, 104857600},
    +
    +        %% What time to rotate the crash log - default is no time
    +        %% rotation. See the lager README for a description of this format:
    +        %% https://github.com/basho/lager/blob/master/README.org
    +        {crash_log_date, "$D0"},
    +
    +        %% Number of rotated crash logs to keep, 0 means keep only the
    +        %% current one - default is 0
    +        {crash_log_count, 10},
    +
    +        %% Whether to redirect error_logger messages into lager - defaults to true
    +        {error_logger_redirect, true},
    +
    +        %% Bump up the "high-water mark" (default 50), which is the
    +        %% number of messages per second allowed to come from
    +        %% error_logger.
    +        {error_logger_hwm, 1000}
    +    ]},
    +
    +    {prometheus, [{collectors, [default,
    +                                chef_pgsql_collector,
    +                                chef_wm_pooler_collector]}]},
    +
    +    {chef_secrets, [{provider, chef_secrets_fd}]},
    +
    +    {oc_chef_wm, [
    +        {ip_mode, [ ipv4 ] },
    +        {api_version, "12.0.0"},
    +        {server_flavor, "cs"},
    +
    +        {default_orgname, undefined },
    +
    +        {ip, "127.0.0.1"},
    +        {port, 8000},
    +        {reqid_header_name, "X-Request-Id"},
    +        {auth_skew, 900},
    +        %% currently only used by the search endpoint to bound
    +        %% how many nodes are deserialized at a time in
    +        %% preparing a response.
    +        {bulk_fetch_batch_size, 5},
    +        {superusers, [<<"pivotal">>]},
    +        %% metrics config
    +        {root_metric_key, "chefAPI"},
    +
    +        {authz_timeout, 2000},
    +        {authz_fanout, 20},
    +
    +        {reindex_batch_size, 10},
    +
    +        {ldap, []},
    +        %% these are used for reporting on license status on the
    +        %% license endpoint; it would have been nice to give these
    +        %% their own logical section, but erlang requires these to
    +        %% be part of a loaded application
    +        {node_license, 25},
    +        {upgrade_url, <<"https://www.chef.io/pricing">>},
    +        {actions_fqdn, <<"ip-172-31-46-255.ap-south-1.compute.internal">>},
    +        {max_request_size, 2000000},
    +        {server_version, ""},
    +        {health_ping_timeout, 400},
    +        {health_ping_modules, [
    +            oc_chef_authz,
    +            chef_sql,
    +            chef_opensearch
    +        ]},
    +        {base_resource_url, host_header},
    +        {strict_search_result_acls, false},
    +        {include_version_in_status, false},
    +        {allow_email_update_only_from_manage, false},
    +        {include_x_ops_api_info, false}
    +    ]},
    +
    +    {chef_authn, [
    +        {secrets_module, {chef_secrets, get, [{default, [<<"chef-server">>, <<"webui_pub_key">>]}]}},
    +        {keygen_cache_size, 10},
    +        {keygen_start_size, 0},
    +        {keygen_timeout, 1000},
    +        {keygen_size, 2048}
    +    ]},
    +
    +    {oc_chef_authz, [
    +        {authz_root_url, "http://127.0.0.1:9463" },
    +        {authz_service, [
    +            {root_url, "http://127.0.0.1:9463" },
    +            {timeout, 2000},
    +            {init_count, 25},
    +            {max_count, 100},
    +            {queue_max, 50},
    +            {cull_interval, {1, min}},
    +            {max_age, {70, sec}},
    +            {max_connection_duration, {70, sec}},
    +            {retry_on_conn_closed, true},
    +            {ibrowse_options, [{connect_timeout, 5000}]},
    +            {max_connection_request_limit, 100}
    +        ]},
    +        {cleanup_batch_size, 0}
    +    ]},
    +
    +    {chef_db, [
    +        {bulk_fetch_batch_size, 5}
    +    ]},
    +
    +    {chef_index, [
    +        {ip_mode, [ ipv4 ] },
    +        {search_provider, opensearch},
    +        {search_queue_mode, batch},
    +        {search_batch_max_size, 5000000},
    +        {search_batch_max_wait, 10},
    +        {reindex_sleep_min_ms, 500},
    +        {reindex_sleep_max_ms, 2000},
    +        {reindex_item_retries, 3},
    +        {solr_elasticsearch_major_version, 1},
    +        {search_auth_username, "opensearch_user"},
    +        {search_auth_password, "e6ae6a61d7a57099d1d7961080a89cd5"},
    +        {solr_service, [
    +            {root_url, "http://127.0.0.1:9200"},
    +            {timeout, 30000},
    +            {init_count, 25},
    +            {max_count, 100},
    +            {cull_interval, {1, min}},
    +            {max_age, {70, sec}},
    +            {max_connection_duration, {70,sec}},
    +            {retry_on_conn_closed, true},
    +            {ibrowse_options, [{connect_timeout, 10000}]}
    +        ]}
    +    ]},
    +
    +    {chef_objects, [
    +        {s3_url, "https://ip-172-31-46-255.ap-south-1.compute.internal"},
    +        {s3_external_url, host_header},
    +        %% bookshelf should automatically use path-style URLs.  s3 should automatically use vhost-style URLs unless s3_url_type is set otherwise.
    +        {s3_url_type, path},
    +        {s3_platform_bucket_name, "bookshelf"},
    +        {s3_url_ttl, 28800},
    +        {s3_url_expiry_window_size, off},
    +        {s3_parallel_ops_timeout, 5000},
    +        {s3_parallel_ops_fanout, 20},
    +        {depsolver_timeout, 5000},
    +        {depsolver_pooler_timeout, 0},
    +        {cbv_cache_enabled, false},
    +        {cbv_cache_item_ttl, 30000}
    +
    +    ]},
    +
    +
    +    {stats_hero, [
    +        {udp_socket_pool_size, 20 },
    +        {protocol, estatsd},
    +        {estatsd_host, "127.0.0.1"},
    +        {estatsd_port, 9466}
    +    ]},
    +
    +    {opscoderl_httpc, [
    +        {pooler_timeout, 0}
    +    ]},
    +
    +    {sqerl, [
    +        {db_driver_mod, sqerl_pgsql_client},
    +        {config_cb, {chef_secrets_sqerl, config, [{<<"opscode_erchef">>, <<"sql_password">>}]}},
    +        {ip_mode, [ ipv4 ] },
    +        %% Database connection parameters
    +        {db_host, "127.0.0.1"},
    +        {db_port, 5432},
    +        {db_user, "opscode_chef"},
    +        {db_name, "opscode_chef" },
    +        {db_options, [{ssl, false}]},
    +        {idle_check, 10000},
    +        {pooler_timeout, 2000},
    +        {db_timeout, 5000},
    +        {prepared_statements, {oc_chef_sql, statements, [pgsql]}},
    +        {column_transforms, [
    +            {<<"created_at">>, {sqerl_transformers, convert_YMDHMS_tuple_to_datetime}},
    +            {<<"updated_at">>, {sqerl_transformers, convert_YMDHMS_tuple_to_datetime}}
    +        ]}
    +    ]},
    +
    +    {webmachine, [
    +        {log_handlers, [
    +            {oc_wm_request_logger, [
    +                {file, "/var/log/opscode/opscode-erchef/requests.log"},
    +                {file_size, 100},  %% Size in MB
    +                {files, 10},
    +                {annotations, [req_id, org_name, msg, darklaunch, perf_stats, user, req_api_version]}
    +            ]}
    +        ]}
    +    ]},
    +
    +    {ibrowse, [
    +        {default_max_sessions, 256},
    +        {default_max_pipeline_size, 1},
    +        {enable_ibrowse_traces, false}
    +    ]},
    +
    +    {pooler, [
    +        {pools, [
    +            [
    +                {name, sqerl},
    +                {max_count, 20},
    +                {init_count, 20},
    +                {start_mfa, {sqerl_client, start_link, []}},
    +                {queue_max, 20}
    +            ],
    +            [
    +                {name, chef_depsolver},
    +                {max_count, 5},
    +                {init_count, 5},
    +                {queue_max, 50},
    +                {start_mfa, {chef_depsolver_worker, start_link, []}}
    +            ]
    +        ]
    +    },
    +
    +    {metrics_module, folsom_metrics}
    +]}
    +
    +    ,
    +    {ssl, [
    +        {session_cb, noop_session_cache}
    +    ]}
    +].
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * execute[remove_erchef_siz_files] action run
    - execute rm -f *.siz
  * execute[remove_erchef_siz_files] action nothing (skipped due to action :nothing)
  * link[/opt/opscode/embedded/service/opscode-erchef/sys.config] action create
    - unlink existing symlink to file at /opt/opscode/embedded/service/opscode-erchef/sys.config
    - create symlink at /opt/opscode/embedded/service/opscode-erchef/sys.config to /var/opt/opscode/opscode-erchef/sys.config
  * template[/var/opt/opscode/opscode-erchef/vm.args] action create
    - create new file /var/opt/opscode/opscode-erchef/vm.args
    - update content in file /var/opt/opscode/opscode-erchef/vm.args from none to 4ab34e
    --- /var/opt/opscode/opscode-erchef/vm.args 2025-10-05 06:14:42.805751569 +0000
    +++ /var/opt/opscode/opscode-erchef/.chef-vm20251005-1727-zy20my.args       2025-10-05 06:14:42.805751569 +0000
    @@ -1 +1,32 @@
    +## Name of the node
    +-name erchef@127.0.0.1
    +
    +## Cookie for distributed erlang
    +-setcookie erchef
    +
    +## Enable SMP even on single-core machines
    +## The Erchef keygen cache feature uses
    +## enif_send, which does not work on single-
    +## core machines unless SMP is enabled.
    +-smp enable
    +
    +## Heartbeat management; auto-restarts VM if it dies or becomes unresponsive
    +## (Disabled by default..use with caution!)
    +##-heart
    +
    +## Enable kernel poll and a few async threads
    ++K true
    ++A 5
    +
    +## Increase number of concurrent ports/sockets
    +-env ERL_MAX_PORTS 4096
    +
    +## Add directory for hot patches to the front of the code path
    +-pa lib/patches
    +
    +## Tweak GC to run more often
    +-env ERL_FULLSWEEP_AFTER 10
    +
    +## Increase logfile size to 10M
    +-env RUN_ERL_LOG_MAXSIZE 10000000
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * link[/opt/opscode/embedded/service/opscode-erchef/vm.args] action create
    - create symlink at /opt/opscode/embedded/service/opscode-erchef/vm.args to /var/opt/opscode/opscode-erchef/vm.args
  * component_runit_service[opscode-erchef] action enable
    * template[/var/log/opscode/opscode-erchef/config] action create
      - create new file /var/log/opscode/opscode-erchef/config
      - update content in file /var/log/opscode/opscode-erchef/config from none to 5e16ac
      --- /var/log/opscode/opscode-erchef/config        2025-10-05 06:14:42.830751682 +0000
      +++ /var/log/opscode/opscode-erchef/.chef-config20251005-1727-1r5xc5p     2025-10-05 06:14:42.830751682 +0000
      @@ -1 +1,4 @@
      +# svlogd configuration
      +s104857600
      +n10
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
  Recipe: <Dynamically Defined Resource>
    * service[opscode-erchef] action nothing (skipped due to action :nothing)
    * runit_service[opscode-erchef] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opscode-erchef] action create
        - create new directory /opt/opscode/sv/opscode-erchef
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/opscode-erchef/run] action create
        - create new file /opt/opscode/sv/opscode-erchef/run
        - update content in file /opt/opscode/sv/opscode-erchef/run from none to 9dace2
        --- /opt/opscode/sv/opscode-erchef/run  2025-10-05 06:14:42.860751816 +0000
        +++ /opt/opscode/sv/opscode-erchef/.chef-run20251005-1727-19sk1kb       2025-10-05 06:14:42.860751816 +0000
        @@ -1 +1,6 @@
        +#!/bin/sh
        +exec 2>&1
        +
        +export PATH=/opt/opscode/embedded/bin:$PATH
        +exec veil-env-helper --use-file -f /etc/opscode/private-chef-secrets.json -s chef-server.webui_pub_key -s opscode_erchef.sql_password -s bookshelf.access_key_id -s bookshelf.secret_access_key -s oc_bifrost.superuser_id -o data_collector.token -o ldap.bind_password -- chpst -P  -u opscode -U opscode env ERL_EPMD_ADDRESS=127.0.0.1 HOME=/var/opt/opscode/opscode-erchef  /opt/opscode/embedded/service/opscode-erchef/bin/oc_erchef foreground
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/opscode-erchef/log] action create
        - create new directory /opt/opscode/sv/opscode-erchef/log
      * directory[/opt/opscode/sv/opscode-erchef/log/main] action create
        - create new directory /opt/opscode/sv/opscode-erchef/log/main
        - change mode from '' to '0755'
      * directory[/var/log/opscode-erchef] action create
        - create new directory /var/log/opscode-erchef
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/opscode-erchef/log/config] action create
        - create new file /opt/opscode/sv/opscode-erchef/log/config
        - update content in file /opt/opscode/sv/opscode-erchef/log/config from none to e3b0c4
        (no diff)
        - change mode from '' to '0644'
      * link[/var/log/opscode-erchef/config] action create
        - create symlink at /var/log/opscode-erchef/config to /opt/opscode/sv/opscode-erchef/log/config
      * template[/opt/opscode/sv/opscode-erchef/log/run] action create
        - create new file /opt/opscode/sv/opscode-erchef/log/run
        - update content in file /opt/opscode/sv/opscode-erchef/log/run from none to f6e10e
        --- /opt/opscode/sv/opscode-erchef/log/run      2025-10-05 06:14:42.898751987 +0000
        +++ /opt/opscode/sv/opscode-erchef/log/.chef-run20251005-1727-1n95ev3   2025-10-05 06:14:42.897751983 +0000
        @@ -1 +1,4 @@
        +#!/bin/sh
        +exec chpst -U opscode -u opscode \
        +  svlogd -tt /var/log/opscode/opscode-erchef
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/opscode-erchef/env] action create
        - create new directory /opt/opscode/sv/opscode-erchef/env
        - change mode from '' to '0755'
      * ruby_block[Delete unmanaged env files for opscode-erchef service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-erchef/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-erchef/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opscode-erchef/control] action create
        - create new directory /opt/opscode/sv/opscode-erchef/control
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/opscode-erchef/control/t] action create
        - create new file /opt/opscode/sv/opscode-erchef/control/t
        - update content in file /opt/opscode/sv/opscode-erchef/control/t from none to df4af9
        --- /opt/opscode/sv/opscode-erchef/control/t    2025-10-05 06:14:42.919752082 +0000
        +++ /opt/opscode/sv/opscode-erchef/control/.chef-t20251005-1727-13fqjt6 2025-10-05 06:14:42.918752077 +0000
        @@ -1 +1,4 @@
        +#!/bin/sh
        +echo "received TERM from runit, sending INT instead"
        +/opt/opscode/embedded/bin/sv interrupt opscode-erchef
        - change mode from '' to '0755'
      * link[/opt/opscode/init/opscode-erchef] action create
        - create symlink at /opt/opscode/init/opscode-erchef to /opt/opscode/embedded/bin/sv
      * file[/opt/opscode/sv/opscode-erchef/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/opscode-erchef] action create (up to date)
        * template[/opt/opscode/sv/opscode-erchef/run] action create (up to date)
        * directory[/opt/opscode/sv/opscode-erchef/log] action create (up to date)
        * directory[/opt/opscode/sv/opscode-erchef/log/main] action create (up to date)
        * directory[/var/log/opscode-erchef] action create (up to date)
        * template[/opt/opscode/sv/opscode-erchef/log/config] action create (up to date)
        * link[/var/log/opscode-erchef/config] action create (up to date)
        * template[/opt/opscode/sv/opscode-erchef/log/run] action create (up to date)
        * directory[/opt/opscode/sv/opscode-erchef/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for opscode-erchef service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/opscode-erchef/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/opscode-erchef/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/opscode-erchef/control] action create (up to date)
        * template[/opt/opscode/sv/opscode-erchef/control/t] action create (up to date)
        * link[/opt/opscode/init/opscode-erchef] action create (up to date)
        * file[/opt/opscode/sv/opscode-erchef/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/opscode-erchef] action create
          - create symlink at /opt/opscode/service/opscode-erchef to /opt/opscode/sv/opscode-erchef
        * ruby_block[wait for opscode-erchef service socket] action run
          - execute the ruby block wait for opscode-erchef service socket
        - execute the ruby block restart_service
      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/opscode-erchef] action create (up to date)
        * template[/opt/opscode/sv/opscode-erchef/run] action create (up to date)
        * directory[/opt/opscode/sv/opscode-erchef/log] action create (up to date)
        * directory[/opt/opscode/sv/opscode-erchef/log/main] action create (up to date)
        * directory[/var/log/opscode-erchef] action create (up to date)
        * template[/opt/opscode/sv/opscode-erchef/log/config] action create (up to date)
        * link[/var/log/opscode-erchef/config] action create (up to date)
        * template[/opt/opscode/sv/opscode-erchef/log/run] action create (up to date)
        * directory[/opt/opscode/sv/opscode-erchef/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for opscode-erchef service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/opscode-erchef/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/opscode-erchef/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/opscode-erchef/control] action create (up to date)
        * template[/opt/opscode/sv/opscode-erchef/control/t] action create (up to date)
        * link[/opt/opscode/init/opscode-erchef] action create (up to date)
        * file[/opt/opscode/sv/opscode-erchef/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/opscode-erchef] action create (up to date)
        * ruby_block[wait for opscode-erchef service socket] action run
          - execute the ruby block wait for opscode-erchef service socket
        - execute the ruby block restart_log_service
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opscode-erchef] action create (up to date)
      * ruby_block[wait for opscode-erchef service socket] action run
        - execute the ruby block wait for opscode-erchef service socket

    * runit_service[opscode-erchef] action reload_log
      - reload log service

Recipe: infra-server::nginx
  * directory[/var/log/opscode/nginx] action create
    - create new directory /var/log/opscode/nginx
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/nginx] action create
    - change mode from '0755' to '0750'
    - change owner from 'root' to 'opscode'
    - change group from 'root' to 'opscode'
  * directory[/var/opt/opscode/nginx/ca] action create
    - create new directory /var/opt/opscode/nginx/ca
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/nginx/cache] action create
    - create new directory /var/opt/opscode/nginx/cache
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/nginx/cache-tmp] action create
    - create new directory /var/opt/opscode/nginx/cache-tmp
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/nginx/etc] action create
    - change mode from '0755' to '0750'
    - change owner from 'root' to 'opscode'
    - change group from 'root' to 'opscode'
  * directory[/var/opt/opscode/nginx/etc/addon.d] action create
    - change mode from '0755' to '0750'
    - change owner from 'root' to 'opscode'
    - change group from 'root' to 'opscode'
  * directory[/var/opt/opscode/nginx/etc/nginx.d] action create
    - create new directory /var/opt/opscode/nginx/etc/nginx.d
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/nginx/etc/scripts] action create
    - create new directory /var/opt/opscode/nginx/etc/scripts
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/nginx/html] action create
    - create new directory /var/opt/opscode/nginx/html
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/nginx/tmp] action create
    - create new directory /var/opt/opscode/nginx/tmp
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * file[/var/log/opscode/nginx/access.log] action create
    - create new file /var/log/opscode/nginx/access.log
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * file[/var/log/opscode/nginx/error.log] action create
    - create new file /var/log/opscode/nginx/error.log
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * file[/var/log/opscode/nginx/current] action create
    - create new file /var/log/opscode/nginx/current
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * openssl_x509_certificate[/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.crt] action create
    * file[/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.crt] action create_if_missing
      - create new file /var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.crt
      - update content in file /var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.crt from none to 30a096
      - suppressed sensitive resource
      - change mode from '' to '0600'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * file[/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.key] action create_if_missing
      - create new file /var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.key
      - update content in file /var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.key from none to 188fe9
      - suppressed sensitive resource
      - change mode from '' to '0600'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'

  * file[/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.crt] action create (up to date)
  * file[/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.key] action create (up to date)
  * openssl_dhparam[/var/opt/opscode/nginx/ca/dhparams.pem] action create
    * file[/var/opt/opscode/nginx/ca/dhparams.pem] action create
      - create new file /var/opt/opscode/nginx/ca/dhparams.pem
      - update content in file /var/opt/opscode/nginx/ca/dhparams.pem from none to b79e7e
      - suppressed sensitive resource
      - change mode from '' to '0600'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'

  * remote_directory[/var/opt/opscode/nginx/html] action create
  Recipe: <Dynamically Defined Resource>
    * cookbook_file[/var/opt/opscode/nginx/html/404.html] action create
      - create new file /var/opt/opscode/nginx/html/404.html
      - update content in file /var/opt/opscode/nginx/html/404.html from none to afd41b
      --- /var/opt/opscode/nginx/html/404.html  2025-10-05 06:15:16.262198966 +0000
      +++ /var/opt/opscode/nginx/html/.chef-40420251005-1727-a7em7d.html        2025-10-05 06:15:16.262198966 +0000
      @@ -1 +1,37 @@
      +<!DOCTYPE html>
      +<html xmlns="http://www.w3.org/1999/xhtml">
      +<head>
      +  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
      +  <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
      +  <title>Chef - 404 Not Found</title>
      +  <link media="all" rel="stylesheet" type="text/css" href="/css/all.css" />
      +  <!--[if lt IE 7]><link rel="stylesheet" type="text/css" href="/css/lt7.css" /><![endif]-->
      +</head>
      +<body>
      +  <div class="header-block">
      +    <div id="header">
      +      <strong class="logo"><a href="https://www.chef.io">Chef</a></strong>
      +    </div>
      +  </div>
      +  <div id="wrapper">
      +    <div id="main">
      +      <div class="mybox">
      +        <div id="content">
      +          <h1>404 - Not Found</h1>
      +          <p>Sorry, I can't find what you are looking for.</p>
      +        </div>
      +      </div>
      +    </div>
      +  </div>
      +  <div class="footer-block">
      +    <div id="footer">
      +      <div class="mybox">
      +      </div>
      +      <div class="footer-bottom">
      +        <span>&copy; 2010&thinsp;&ndash;&thinsp;2021 Chef Software, Inc. All Rights Reserved</span>
      +      </div>
      +    </div>
      +  </div>
      +</body>
      +</html>
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/favicon.ico] action create
      - create new file /var/opt/opscode/nginx/html/favicon.ico
      - update content in file /var/opt/opscode/nginx/html/favicon.ico from none to 5f4080
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/503.json] action create
      - create new file /var/opt/opscode/nginx/html/503.json
      - update content in file /var/opt/opscode/nginx/html/503.json from none to 7643f9
      --- /var/opt/opscode/nginx/html/503.json  2025-10-05 06:15:16.296867787 +0000
      +++ /var/opt/opscode/nginx/html/.chef-50320251005-1727-fbn9wz.json        2025-10-05 06:15:16.296867787 +0000
      @@ -1 +1,2 @@
      +{ "error": "503 - Service Unavailable: Sorry, we are unavailable right now.  Please try again later." }
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/index.html] action create
      - create new file /var/opt/opscode/nginx/html/index.html
      - update content in file /var/opt/opscode/nginx/html/index.html from none to 0b875f
      --- /var/opt/opscode/nginx/html/index.html        2025-10-05 06:15:16.313956437 +0000
      +++ /var/opt/opscode/nginx/html/.chef-index20251005-1727-1ipwlms.html     2025-10-05 06:15:16.313956437 +0000
      @@ -1 +1,47 @@
      +<!DOCTYPE html>
      +<html xmlns="http://www.w3.org/1999/xhtml">
      +<head>
      +  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
      +  <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
      +  <title>Chef Infra Server API</title>
      +  <link media="all" rel="stylesheet" type="text/css" href="/css/all.css" />
      +</head>
      +<body>
      +  <div class="header-block">
      +    <div id="header">
      +      <strong class="logo"><a href="https://www.chef.io/" target="_blank" rel="noopener noreferrer">Chef</a></strong>
      +    </div>
      +  </div>
      +  <div id="wrapper">
      +    <div id="main">
      +      <div class="mybox">
      +        <div id="content">
      +          <h1>Are You Looking For the Chef Infra Server?</h1>
      +
      +          <p>
      +            Hello! It looks like you were trying to browse to your Chef Infra Server.
      +          </p>
      +          <p>
      +            Most users interact with the Chef Infra Server using <a href="https://docs.chef.io/workstation/knife/" target="_blank" rel="noopener noreferrer">knife</a> or other
      +            tooling you can learn about at <a href="https://learn.chef.io" target="_blank" rel="noopener noreferrer">Learn Chef</a>.
      +          </p>
      +          <p>
      +            You can access the server programmatically with the Chef Infra Server API. To learn how
      +            to do this, head over to our <a href="https://docs.chef.io/server/api_chef_server/" target="_blank" rel="noopener noreferrer">API Documentation</a> pages.
      +          </p>
      +        </div>
      +      </div>
      +    </div>
      +  </div>
      +  <div class="footer-block">
      +    <div id="footer">
      +      <div class="mybox">
      +      </div>
      +      <div class="footer-bottom">
      +        <span>&copy; 2010&thinsp;&ndash;&thinsp;2022 Chef Software, Inc. All Rights Reserved</span>
      +      </div>
      +    </div>
      +  </div>
      +</body>
      +</html>
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * directory[/var/opt/opscode/nginx/html/images] action create
      - create new directory /var/opt/opscode/nginx/html/images
      - change mode from '' to '0750'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-body.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-body.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-body.gif from none to 79e254
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * directory[/var/opt/opscode/nginx/html/css] action create
      - create new directory /var/opt/opscode/nginx/html/css
      - change mode from '' to '0750'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/css/all.css] action create
      - create new file /var/opt/opscode/nginx/html/css/all.css
      - update content in file /var/opt/opscode/nginx/html/css/all.css from none to 445730
      --- /var/opt/opscode/nginx/html/css/all.css       2025-10-05 06:15:16.356922064 +0000
      +++ /var/opt/opscode/nginx/html/css/.chef-all20251005-1727-104pche.css    2025-10-05 06:15:16.356922064 +0000
      @@ -1 +1,888 @@
      +body {
      + margin:0;
      + font:14px "Helvetica Neue", Helvetica, Arial, sans-serif;
      +        font-size: 1em;
      + color:#666;
      +        background-color:#212c35;
      +        -webkit-font-smoothing: antialiased;
      +}
      +a {
      + text-decoration:none;
      + color:#4d97c6;
      +}
      +a:hover {
      +        color: #f18a20;
      +}
      +input,
      +textarea,
      +select{
      + font:100% arial,sans-serif;
      + vertical-align:middle;
      +}
      +form,fieldset{
      + margin:0;
      + padding:0;
      + border:none;
      +}
      +img {
      + border:0;
      +}
      +#wrapper {
      + position:relative;
      + padding: 20px 0 100px 0px;
      +        background-color: #fff;
      +}
      +
      +.header-block {
      + margin: 0;
      + background-color:#212c35 ;
      + width:100%;
      + min-width:940px;
      +}
      +
      +#header {
      + margin:0 auto;
      + padding:0;
      +}
      +
      +#header:after {
      + content:"";
      + clear:both;
      + display:block;
      +}
      +.logo {
      + float:left;
      + margin:10px 0 12px 10px;
      +}
      +.logo a {
      + display:block;
      +        width: 128px;
      +        height: 30px;
      +        background-image:  url('/images/logo.png');
      +        background-image:  url('/images/logo.svg'), none;
      +        background-size: 100% 100%;
      + text-indent:-9999px;
      + overflow:hidden;
      +}
      +.header-r {
      + width:794px;
      + float:right;
      + position:relative;
      +}
      +.header-r:after {
      + content:"";
      + clear:both;
      + display:block;
      +}
      +.login-box {
      + height:37px;
      + width:794px;
      + position:absolute;
      + top:0;
      + left:0;
      + z-index:10;
      +}
      +.login-box:after {
      + content:"";
      + clear:both;
      + display:block;
      +}
      +.logged-in {
      + float:right;
      + margin:10px 0 0;
      + padding:0;
      + list-style:none;
      + display:none;
      +}
      +.logged-in li {
      + display:inline;
      + float:left;
      + background: url(../images/separator-login.gif) no-repeat 0 3px;
      + padding:0 0 0 16px;
      + margin:0 0 0 14px;
      +}
      +.logged-in li a {
      + text-decoration:underline;
      + font-weight:bold;
      +}
      +.logged-in li a,
      +.logged-in li span {
      + font-size:11px;
      + color:#fff;
      +}
      +.logged-in li:first-child {
      + background:none;
      +}
      +.login {
      + float:right;
      + margin:10px -10px 0 0;
      + padding:0;
      + list-style:none;
      + clear:both;
      + display:inline;
      +}
      +* html #login {
      + height:1%;
      + overflow:visible;
      +}
      +.login:after {
      + content:"";
      + clear:both;
      + display:block;
      +}
      +.login li {
      + display:inline;
      + float:right;
      + background: url(../images/separator-login.gif) no-repeat right 3px;
      + padding:0 16px 0 14px;
      +}
      +.login  .active {
      + position:relative;
      +}
      +.login li a {
      + font-size:11px;
      + color:#fff;
      +}
      +.login li:first-child {
      + background:none;
      +}
      +#close {
      + width:68px;
      + height:21px;
      + position:absolute;
      + background:url(../images/bg-close.gif) no-repeat;
      + top:-21px;
      + left:183px;
      + line-height:22px;
      + text-align:center;
      +}
      +.login-form {
      + width:446px;
      + background:url(../images/bg-login-block-t.gif) no-repeat;
      + position:absolute;
      + top:18px;
      + left:-188px;
      + display:none;
      +}
      +.login-form .block {
      + background:#bc4301 url(../images/bg-login-form-t.gif) no-repeat;
      + width:415px;
      + padding:13px 14px 9px 17px;
      + overflow:hidden;
      +}
      +.login-form-b {
      + background: url(../images/bg-login-form-b.png) no-repeat;
      + height:8px;
      + width:446px;
      + font-size:0;
      + line-height:0;
      +}
      +.login-form .field {
      + width:190px;
      + float:left;
      +}
      +.login-form .field label,
      +.login-form .field input {
      + clear:both;
      + float:left;
      +}
      +.login-form .field label {
      + color:#fff;
      +}
      +.login-form .field input {
      + margin:3px 0 0;
      + border:3px solid #d4d4d2;
      + padding:2px 0;
      + width:173px;
      +}
      +.login-form .go {
      + height:26px;
      + width:35px;
      + background:url(../images/btn-go.gif) no-repeat;
      + border:none;
      + text-indent:-9999px;
      + font-size:0;
      + line-height:0;
      + float:left;
      + margin:17px 0 0;
      + cursor:pointer;
      +}
      +.nav-box {
      + background:url(../images/nav-bg.gif) no-repeat right bottom;
      + width:794px;
      + overflow:hidden;
      + float:left;
      + position:absolute;
      + top:78px;
      + left:0;
      + z-index:1;
      +}
      +#nav {
      + list-style:none;
      + float:right;
      + clear:both;
      + margin:0;
      + padding:0 10px 0 0;
      +}
      +#nav li {
      + float:left;
      + display:inline;
      + padding:0 8px 5px;
      + margin:0 5px 0 14px;
      +}
      +#nav li a {
      + font-size:15px;
      + color:#f7681a;
      + float:left;
      + display:inline;
      + white-space:nowrap;
      + display:block;
      +}
      +#nav li:hover,
      +#nav li.hover {
      + background:url(../images/nav-hover.gif) repeat-x 0 bottom;
      + color:#f7681a;
      +}
      +#nav li:hover a,
      +#nav li.hover a {
      + color:#f7681a;
      +}
      +#nav li.active {
      + background:url(../images/nav-active.gif) repeat-x 0 bottom;
      +}
      +#nav li.active a {
      + color:#7c7b7b;
      +}
      +#nav li a:hover {
      + text-decoration:none;
      +}
      +.hidden {
      + display:none !important;
      +}
      +.visible {
      + display:inline !important;
      +}
      +#main {
      + max-width: 940px;
      + margin:0 auto;
      +}
      +.main-t {
      + background:#f6f4f1 url(../images/bg-main-t.gif) no-repeat;
      +}
      +.main-b {
      + background:url(../images/bg-main-b.gif) no-repeat 0 bottom;
      + width:940px;
      + overflow:hidden;
      +}
      +.main-404 {
      + width:940px;
      + overflow:hidden;
      +}
      +#main .mybox {
      + max-width: 940px;
      + overflow:hidden;
      +}
      +.visual {
      + width:358px;
      + float:left;
      +}
      +.visual img {
      + display:block;
      +}
      +#main .content {
      + width:502px;
      + padding:0 38px 0 42px;
      + float:left;
      +}
      +.content h1 {
      + font-size: 38.5px;
      + margin:19px 0 0;
      + font-weight:normal;
      +}
      +.content h3 {
      + font-size:17px;
      + font-weight:normal;
      + margin:10px 0 0;
      +}
      +.content .text {
      +}
      +.content p {
      + margin:27px 0 0;
      + font-size:14px;
      + line-height:19px;
      +}
      +.find-more {
      + display:block;
      + font-size:20px;
      + height:36px;
      + width:164px;
      + background:url(../images/btn-more.gif) no-repeat;
      + color:#fff;
      + line-height:36px;
      + text-align:center;
      + margin:38px 0 0;
      +}
      +.find-more:hover {
      + text-decoration:none;
      +}
      +.blocks {
      + background:#f6f4f1 url(../images/bg-blocks-t.gif) no-repeat;
      + width:940px;
      + margin:20px 0 0;
      +}
      +.blocks-b {
      + background:url(../images/bg-blocks-b.gif) no-repeat 0 bottom;
      + width:940px;
      + padding:25px 0 36px;
      + overflow:hidden;
      +}
      +.blocks .about {
      + width:266px;
      + float:left;
      + padding:0 18px 0 20px;
      + background:url(../images/separator-blocks.gif) no-repeat right 59px;
      +}
      +.blocks h2 {
      + font-size:23px;
      + padding:0 0 2px 46px;
      + margin:0;
      + font-weight:normal;
      + letter-spacing:1px;
      +}
      +.blocks .about h2 {
      + background: url(../images/bullet-about.gif) no-repeat;
      +}
      +.blocks .platform {
      + width:265px;
      + float:left;
      + padding:0 23px 0 28px;
      + background:url(../images/separator-blocks.gif) no-repeat right 59px;
      +}
      +.blocks .platform h2 {
      + background: url(../images/bullet-platform.gif) no-repeat;
      +}
      +.blocks p {
      + margin:17px 0 0px;
      + line-height:18px;
      +}
      +.blocks p a {
      + color:#99b504;
      +}
      +.blocks .friends {
      + width:298px;
      + float:left;
      + padding:0 0 0 22px;
      +}
      +.blocks .friends h2 {
      + background: url(../images/bullet-friends.gif) no-repeat;
      +}
      +.blocks .friends .list {
      + margin:0;
      + padding:10px 0 0 5px;
      + list-style:none;
      + width:281px;
      + overflow:hidden;
      +}
      +.blocks .friends .list li {
      + margin:12px 14px 0 0;
      + float:left;
      + display:inline;
      +}
      +.blocks .friends .list li img {
      + display:block;
      +}
      +.blocks .friends .more {
      + text-align:center;
      + margin:10px 0 0;
      + padding:0 40px 0 0;
      +}
      +.footer-block{
      + margin:0;
      + background-color:#212c35 ;
      + width:100%;
      + min-width:940px;
      +}
      +#footer {
      + margin:0 auto;
      + width:940px;
      + padding:0 0 50px 0;
      +}
      +#footer .mybox {
      + width:940px;
      + overflow:hidden;
      + padding:20px 0 0;
      +}
      +#footer .blog {
      + width:673px;
      + float:left;
      + padding:0 30px 0 0;
      +}
      +#footer .blog h2 {
      + color:#fff;
      + font-size:17px;
      + padding:0 0 7px 37px;
      + margin:0;
      + background:url(../images/bullet-blog.gif) no-repeat;
      +}
      +#footer .blog .posts {
      + margin:0;
      + padding:12px 0 0;
      + list-style:none;
      +}
      +#footer .blog .posts li {
      + margin:0 0 19px 0;
      +}
      +#footer .blog .posts li span {
      + color:#a1a1a1;
      + font-weight:bold;
      +}
      +#footer .blog .posts li a {
      + color:#a1ba21;
      +}
      +#footer .blog .list {
      + margin:0;
      + padding:0;
      + list-style:none;
      + overflow:hidden;
      +}
      +* html #footer .blog .list {
      + height:1%;
      + overflow:visible;
      +}
      +#footer .blog .list li {
      + float:left;
      + margin:0 12px 0 0;
      + display:inline;
      +}
      +#footer .blog .list li a {
      + color:#99b504;
      +}
      +#footer .blog .list .subscribe {
      + background:url(../images/separator-footer-list.gif) no-repeat 0 2px;;
      + padding:0 0 0 14px;
      +}
      +#footer .blog .list .subscribe a {
      + padding:0 0 0 18px;
      + background:url(../images/bullet-subscribe.gif) no-repeat 0 2px;
      +}
      +#footer .contact {
      + width:222px;
      + float:left;
      + padding:0 15px 0 0;
      +}
      +#footer .contact h2 {
      + color:#fff;
      + font-size:17px;
      + padding:0 0 7px 0;
      + margin:0 0 9px 0;
      +}
      +#footer .contact .email,
      +#footer .contact .phone {
      + color:#a1a1a1;
      + display:block;
      + margin:4px 0 0;
      +}
      +#footer .contact .email a {
      + color:#a1ba21;
      +}
      +#footer .contact .list {
      + margin:13px 0 0;
      + padding:0;
      + list-style:none;
      +}
      +#footer .contact .list li {
      + border-top:1px solid #828282;
      + border-bottom:1px solid #828282;
      + padding:9px 0;
      + margin:-1px 0 0 0;
      +}
      +#footer .contact .list li a {
      + color:#99b504;
      +}
      +#footer .footer-bottom {
      +        padding-left: 10px;
      + font-size:11px;
      + color:#a1a1a1;
      + margin:0;
      +}
      +#footer .footer-bottom ul {
      + margin:0;
      + padding:0;
      + list-style:none;
      + display:inline;
      +}
      +#footer .footer-bottom ul li {
      + display:inline;
      + padding:0 0 0 10px;
      + margin:0 0 0 10px;
      + background:url(../images/separator-footer-bottom.gif) no-repeat 0 2px;
      +}
      +#footer .footer-bottom ul li a {
      + color:#a1a1a1;
      +}
      +
      +#footer .footer-bottom ul li a:hover {
      + color:#9db426
      +}
      +/*inner1 page*/
      +#content {
      +
      + float:left;
      + padding:0 41px 0 11px;
      + background:#fff;
      +}
      +#content h1 {
      + padding:5px 0 0;
      + margin:15px 0 0;
      + font-weight:normal;
      +}
      +#content .product-title {
      + background:url(../images/bullet-heading.gif) no-repeat;
      + padding:5px 0 18px 100px;
      +}
      +#content h3 {
      + font-size:16px;
      + padding:0 0 4px 100px;
      + margin:-19px 0 0;
      + font-weight:normal;
      +}
      +#content p {
      + margin:18px 0 0;
      + line-height:21px;
      +}
      +#content .platform {
      + width:623px;
      + margin:38px 0 0;
      +}
      +#content .platform-item {
      + width:623px;
      + overflow:hidden;
      + margin:22px 0 0;
      +}
      +#content .platform-item .visual  {
      + float:left;
      + width:151px;
      +}
      +#content .platform-item .text {
      + width:444px;
      + float:left;
      + padding:0 0 0 28px;
      +}
      +.platform-item .text p {
      + margin:0 0 16px 0 !important;
      +}
      +#content .platform2 {
      + width:680px;
      + overflow:hidden;
      + margin:23px 0 0 -50px;
      +}
      +#content .platform2 h2 {
      + font-size:22px;
      + margin:0;
      + font-weight:normal;
      +}
      +#content .platform2-item {
      + width:290px;
      + float:left;
      + margin:0 0 0 50px;
      + display:inline;
      +}
      +#content .platform2-item p {
      + margin:0;
      + padding:0;
      + line-height:20px;
      +}
      +#content .platform2-item ul {
      + margin:10px 0 0;
      + padding:0;
      + list-style:none;
      +}
      +#content .platform2-item ul li {
      + background:url(../images/bullet-platform2-item.gif) no-repeat 0 4px;
      + padding:0 0 0 14px;
      + margin:0 0 11px 9px;
      +}
      +#content .find-more {
      + margin:53px 0 40px 214px;
      +}
      +#sidebar {
      + width:255px;
      + float:left;
      +}
      +.sidebar-b {
      + width:226px;
      + padding:0 11px 10px 18px;
      +}
      +#sidebar .category {
      + margin:17px 0 0;
      +}
      +#sidebar h3 {
      + height:26px;
      + margin:0 -11px 0 -29px;
      + padding:0 0 11px 30px;
      + position:relative;
      + font-size:14px;
      + font-weight:normal;
      + color:#6f6f6f;
      + background:url(../images/bg-sidebar-title.gif) no-repeat;
      + line-height:26px;
      +}
      +#sidebar ul {
      + margin:0;
      + padding:0;
      + list-style:none;
      +}
      +#sidebar ul li {
      + margin:0 0 5px 0;
      +}
      +#sidebar p {
      + color: #748082;
      + margin:6px 0 0;
      + line-height:20px;
      +}
      +/*inner2 page*/
      +.blog-post {
      + margin:28px 0 0;
      + padding:10px 30px 0 0;
      + width:603px;
      + overflow:hidden;
      +}
      +#content .blog-post h2 {
      + font-size:30px;
      + font-weight:normal;
      + margin:0;
      +}
      +.post-info {
      + margin:5px 0 0 -10px;
      + padding:0;
      + list-style:none;
      +}
      +.post-info li {
      + display:inline;
      + padding:0 4px 0 10px;
      + background:url(../images/separator-post-info.gif) no-repeat 0 2px;
      + font-size:13px;
      +}
      +.post-info li:first-child {
      + background:none;
      +}
      +.blog-post p {
      + margin:13px 0 0 !important;
      + line-height:20px !important;
      +}
      +.blog-post .visual {
      + width:252px;
      + float:left;
      + margin:17px 0 0;
      + padding:0 28px 10px 0;
      +}
      +.post-navigation {
      + margin:36px 0 0;
      + padding:0 0 0 2px;
      + list-style:none;
      + width:620px;
      + overflow:hidden;
      +}
      +.post-navigation .previous {
      + float:left;
      + padding:0 0 0 20px;
      + background:url(../images/bullet-previous.gif) no-repeat 0 5px;
      +}
      +.post-navigation .next {
      + float:right;
      + padding:0 20px 0 0;
      + background:url(../images/bullet-next.gif) no-repeat right 5px;
      +}
      +#sidebar .subscribe {
      + display:block;
      + text-align:center;
      + margin:13px 0 -7px;
      +}
      +#sidebar .subscribe a {
      + background:url(../images/bullet-subscribe2.gif) no-repeat 0 1px;
      + padding:0 0 0 20px;
      +
      +}
      +#sidebar .tweets {
      + margin:0 0 18px 0;
      + padding:0 30px 0 0;
      +}
      +#sidebar .tweets .date {
      + font-size:11px;
      +}
      +#sidebar .tweets p {
      + font-size:11px;
      + line-height:18px;
      + margin:0 !important;
      +}
      +/*inner4*/
      +#content h1.blog-title {
      + background:url(../images/bullet-blog-title.gif) no-repeat;
      + padding:0 30px 16px 55px ;
      + margin:44px 0 0;
      +}
      +#content .video-player {
      + width:600px;
      + margin:20px 0 0;
      +}
      +.video-player img {
      + display:block;
      +}
      +.coments-counter {
      + font-size:20px;
      + display:block;
      + margin:30px 0 0;
      +}
      +.coment {
      + width:520px;
      + padding:10px 32px 20px 24px;
      + background:#f6f4f1;
      + margin:23px 0 0;
      +}
      +.coment .post-info li {
      + font-size:12px;
      +}
      +#content .coment p {
      + margin:7px 0 0 ;
      + line-height:20px;
      +}
      +.coment2 {
      + width:486px;
      + padding:0 32px 0 58px;
      + margin:23px 0 0;
      +}
      +.coment2 .post-info li {
      + font-size:12px;
      +}
      +#content .coment2 p {
      + margin:7px 0 0 ;
      + line-height:20px;
      +}
      +.reply {
      + font-size:20px;
      + display:block;
      + margin:34px 0 0;
      +}
      +.reply-form {
      + width:480px;
      + overflow:hidden;
      +}
      +.reply-form .box {
      + width:240px;
      + float:left;
      +}
      +.reply-form .input-fields {
      + float:left;
      + clear:both;
      + border:3px solid #d4d4d2;
      + margin:3px 0 0;
      + padding:3px 0;
      + width:190px;
      +}
      +.form-title {
      + float:left;
      + clear:both;
      + margin:16px 0 0;
      +}
      +.coment-field {
      + float:left;
      + clear:both;
      + border:3px solid #d4d4d2;
      + margin:3px 0 0;
      + width:430px;
      + height:80px;
      + overflow:hidden;
      +
      +}
      +.reply-form .frame {
      + width:480px;
      + overflow:auto;
      +}
      +.reply-form .submit-btn {
      + display:block;
      + width:107px;
      + height:35px;
      + border:0;
      + background: url(../images/btn-submit.gif) no-repeat;
      + line-height:35px;
      + text-align:center;
      + font-size:20px;
      + margin:27px 0 20px;
      + color:#fff;
      +}
      +/*inner5*/
      +#content .friends-box {
      + width:680px;
      + overflow:hidden;
      + margin:23px 0 0 -50px;
      +}
      +#content .friends-box h2 {
      + font-size:22px;
      + margin:0;
      + font-weight:normal;
      +}
      +#content .friends-item {
      + width:280px;
      + float:left;
      + padding:0 10px 0 0;
      + margin:0 0 0 50px;
      + display:inline;
      +}
      +#content .friends-item p {
      + margin:0 0 17px;
      + padding:0;
      + line-height:20px;
      +}
      +#content .friends-item span {
      + line-height:20px;
      + display:block;
      +}
      +#content .friends-item ul {
      + margin:10px 0 0;
      + padding:0;
      + list-style:none;
      +}
      +#content .friends-item ul li {
      + background:url(../images/bullet-platform2-item.gif) no-repeat 0 4px;
      + padding:0 0 0 14px;
      + margin:0 0 11px 9px;
      +}
      +#content h2 {
      + font-size:22px;
      + margin:0;
      + font-weight:normal;
      +}
      +.team {
      + margin:27px 0 0;
      + width:633px;
      +}
      +.team-item {
      + width:610px;
      + overflow:hidden;
      + margin:13px 0 0;
      + padding:0 20px 10px 3px;
      +}
      +.team-item .visual {
      + float:left;
      + margin:4px 0 0;
      + width:110px;
      + padding:0 24px 0 0;
      +}
      +.team-item .person {
      + font-size:16px;
      + font-weight:normal;
      +}
      +.team-item p {
      + margin:0 !important;
      +}
      +#sidebar .contact-info {
      + margin:0;
      +}
      +#sidebar .contact-info li {
      + margin:0 0 5px;
      + font-size:11px;
      +}
      +.contact-info .phone {
      + margin:22px 0 5px !important;
      +}
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-main-b.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-main-b.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-main-b.gif from none to eb09bd
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-footer.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-footer.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-footer.gif from none to 467fc5
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-blocks-t.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-blocks-t.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-blocks-t.gif from none to 959c0d
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-close.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-close.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-close.gif from none to a1af5d
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-blocks-b.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-blocks-b.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-blocks-b.gif from none to b0e6f1
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-login-form-t.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-login-form-t.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-login-form-t.gif from none to 69f556
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-about.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-about.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-about.gif from none to a47f45
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-login-form-b.png] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-login-form-b.png
      - update content in file /var/opt/opscode/nginx/html/images/bg-login-form-b.png from none to 15d8a3
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-next.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-next.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-next.gif from none to 995052
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-friends.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-friends.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-friends.gif from none to b1fe37
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-main-t.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-main-t.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-main-t.gif from none to 616a67
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/btn-go.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/btn-go.gif
      - update content in file /var/opt/opscode/nginx/html/images/btn-go.gif from none to 6682b2
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/btn-submit.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/btn-submit.gif
      - update content in file /var/opt/opscode/nginx/html/images/btn-submit.gif from none to 9558f3
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-heading.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-heading.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-heading.gif from none to c0ed32
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/btn-more.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/btn-more.gif
      - update content in file /var/opt/opscode/nginx/html/images/btn-more.gif from none to 8443e8
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-blog-title.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-blog-title.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-blog-title.gif from none to 26d800
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-sidebar-title.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-sidebar-title.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-sidebar-title.gif from none to 027720
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-subscribe.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-subscribe.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-subscribe.gif from none to 5c93bd
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-previous.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-previous.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-previous.gif from none to 8fc6fd
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-platform.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-platform.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-platform.gif from none to 7a7f21
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/logo.svg] action create
      - create new file /var/opt/opscode/nginx/html/images/logo.svg
      - update content in file /var/opt/opscode/nginx/html/images/logo.svg from none to 530c95
      --- /var/opt/opscode/nginx/html/images/logo.svg   2025-10-05 06:15:16.734587547 +0000
      +++ /var/opt/opscode/nginx/html/images/.chef-logo20251005-1727-1aypgyd.svg        2025-10-05 06:15:16.734587547 +0000
      @@ -1 +1,59 @@
      +<?xml version="1.0" encoding="utf-8"?>
      +<!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
      +<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
      +<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
      +  width="235.061px" height="55px" viewBox="0 0 235.061 55" enable-background="new 0 0 235.061 55" xml:space="preserve">
      +<g>
      + <defs>
      +         <rect id="SVGID_1_" x="-468.661" y="-339.791" width="1224" height="792"/>
      + </defs>
      + <clipPath id="SVGID_2_">
      +         <use xlink:href="#SVGID_1_"  overflow="visible"/>
      + </clipPath>
      + <path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M63.287,27.403v-0.124c0-12.331,9.295-22.432,22.618-22.432
      +         c8.18,0,13.075,2.727,17.103,6.693l-6.072,7.002c-3.347-3.036-6.755-4.895-11.092-4.895c-7.312,0-12.58,6.073-12.58,13.508v0.124
      +         c0,7.436,5.143,13.633,12.58,13.633c4.957,0,7.993-1.983,11.401-5.081l6.073,6.134c-4.461,4.771-9.418,7.746-17.785,7.746
      +         C72.769,49.711,63.287,39.858,63.287,27.403"/>
      + <polygon clip-path="url(#SVGID_2_)" fill="#FFFFFF" points="110.94,5.591 120.482,5.591 120.482,22.756 138.081,22.756
      +         138.081,5.591 147.624,5.591 147.624,48.967 138.081,48.967 138.081,31.555 120.482,31.555 120.482,48.967 110.94,48.967    "/>
      + <polygon clip-path="url(#SVGID_2_)" fill="#FFFFFF" points="159.274,5.591 191.993,5.591 191.993,14.081 168.756,14.081
      +         168.756,22.88 189.204,22.88 189.204,31.369 168.756,31.369 168.756,40.478 192.303,40.478 192.303,48.967 159.274,48.967   "/>
      + <polygon clip-path="url(#SVGID_2_)" fill="#FFFFFF" points="202.032,5.591 235.061,5.591 235.061,14.267 211.575,14.267
      +         211.575,23.499 232.271,23.499 232.271,32.175 211.575,32.175 211.575,48.967 202.032,48.967       "/>
      + <path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M27.501,39.886c-6.83,0-12.386-5.556-12.386-12.386s5.556-12.386,12.386-12.386
      +         c5.638,0,10.403,3.787,11.897,8.949h4.793c-1.595-7.753-8.472-13.602-16.691-13.602c-9.395,0-17.039,7.644-17.039,17.039
      +         c0,9.395,7.644,17.038,17.039,17.038c8.219,0,15.096-5.848,16.691-13.601h-4.793C37.904,36.1,33.139,39.886,27.501,39.886"/>
      + <path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M19.152,35.849c2.139,2.139,5.093,3.464,8.349,3.464v-4.938
      +         c-1.898,0-3.617-0.77-4.861-2.014L19.152,35.849z"/>
      + <path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M15.688,27.5c0,1.691,0.36,3.299,1.002,4.755l4.518-1.987
      +         c-0.373-0.847-0.582-1.783-0.582-2.768c0-3.797,3.079-6.875,6.875-6.875v-4.938C20.987,15.686,15.688,20.986,15.688,27.5"/>
      + <path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M31.785,16.491l-1.791,4.604c1.462,0.57,2.683,1.624,3.461,2.968h5.348
      +         C37.747,20.595,35.135,17.799,31.785,16.491"/>
      + <path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M29.994,33.905l1.791,4.604c3.35-1.309,5.962-4.104,7.019-7.572h-5.349
      +         C32.676,32.281,31.456,33.335,29.994,33.905"/>
      + <path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M5.646,34.108c-0.079-0.259-0.153-0.52-0.222-0.782
      +         c-0.004-0.016-0.008-0.032-0.013-0.047c-0.064-0.243-0.123-0.487-0.179-0.731c-0.012-0.05-0.021-0.1-0.033-0.15
      +         c-0.047-0.211-0.09-0.422-0.131-0.635c-0.019-0.094-0.034-0.189-0.051-0.284c-0.03-0.169-0.06-0.339-0.086-0.509
      +         c-0.022-0.146-0.042-0.292-0.061-0.438c-0.134-0.996-0.206-2.008-0.206-3.033H0c-0.001,1.118,0.069,2.222,0.201,3.311H0.2
      +         c0.003,0.024,0.007,0.048,0.01,0.071c0.037,0.297,0.078,0.593,0.124,0.887c0.013,0.081,0.027,0.161,0.041,0.242
      +         c0.04,0.241,0.082,0.483,0.128,0.723c0.025,0.127,0.052,0.254,0.078,0.381c0.04,0.191,0.08,0.382,0.124,0.571
      +         c0.038,0.167,0.081,0.333,0.122,0.499c0.038,0.148,0.074,0.297,0.114,0.445c0.053,0.196,0.109,0.391,0.166,0.585
      +         c0.024,0.082,0.045,0.165,0.069,0.245l0.003-0.001c0.322,1.066,0.704,2.105,1.147,3.112l4.275-1.879
      +         C6.231,35.855,5.914,34.993,5.646,34.108z"/>
      + <path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M27.501,50.336c-6.296,0-12.003-2.563-16.138-6.699l-3.305,3.305
      +         C13.034,51.919,19.907,55,27.501,55c14.024,0,25.595-10.497,27.287-24.062H50.08C48.417,41.905,38.925,50.336,27.501,50.336"/>
      + <path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M27.501,4.663c5.115,0,9.841,1.691,13.651,4.543l2.795-3.746
      +         C39.361,2.031,33.668,0,27.501,0C15.832,0,5.861,7.269,1.868,17.525l4.352,1.693C9.542,10.708,17.829,4.663,27.501,4.663"/>
      + <path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M50.079,24.062h4.708c-0.504-4.047-1.889-7.821-3.955-11.125l-3.965,2.474
      +         C48.486,17.997,49.603,20.926,50.079,24.062"/>
      + <path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M44.775,24.062H49.5c-1.233-7.921-6.658-14.47-13.926-17.308l-1.688,4.337
      +         C39.414,13.25,43.595,18.121,44.775,24.062"/>
      + <path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M27.501,9.888L27.501,9.888l0-4.652h0c-9.43,0-17.508,5.893-20.747,14.19
      +         l4.335,1.687C13.651,14.55,20.042,9.888,27.501,9.888"/>
      + <path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M9.89,27.5L9.89,27.5H5.237c0,9.356,5.803,17.377,13.997,20.667l1.727-4.318
      +         C14.479,41.246,9.89,34.9,9.89,27.5"/>
      + <path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M27.501,45.111v4.652c11.107,0,20.34-8.176,21.999-18.826h-4.724
      +         C43.172,39.008,36.036,45.111,27.501,45.111"/>
      +</g>
      +</svg>
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-platform2-item.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-platform2-item.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-platform2-item.gif from none to fdacf5
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-blog.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-blog.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-blog.gif from none to 151fb0
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-subscribe2.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-subscribe2.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-subscribe2.gif from none to 12a499
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/nav-active.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/nav-active.gif
      - update content in file /var/opt/opscode/nginx/html/images/nav-active.gif from none to 3db5e5
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/image2.jpg] action create
      - create new file /var/opt/opscode/nginx/html/images/image2.jpg
      - update content in file /var/opt/opscode/nginx/html/images/image2.jpg from none to 42e2f0
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/image3.jpg] action create
      - create new file /var/opt/opscode/nginx/html/images/image3.jpg
      - update content in file /var/opt/opscode/nginx/html/images/image3.jpg from none to 349966
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/hd-header.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/hd-header.gif
      - update content in file /var/opt/opscode/nginx/html/images/hd-header.gif from none to f74554
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/logo.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/logo.gif
      - update content in file /var/opt/opscode/nginx/html/images/logo.gif from none to f82259
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/image.jpg] action create
      - create new file /var/opt/opscode/nginx/html/images/image.jpg
      - update content in file /var/opt/opscode/nginx/html/images/image.jpg from none to 6e2c7d
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/nav-bg.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/nav-bg.gif
      - update content in file /var/opt/opscode/nginx/html/images/nav-bg.gif from none to a64d7c
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/logo.png] action create
      - create new file /var/opt/opscode/nginx/html/images/logo.png
      - update content in file /var/opt/opscode/nginx/html/images/logo.png from none to 0b3336
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/nav-hover.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/nav-hover.gif
      - update content in file /var/opt/opscode/nginx/html/images/nav-hover.gif from none to 735c67
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/photo.jpg] action create
      - create new file /var/opt/opscode/nginx/html/images/photo.jpg
      - update content in file /var/opt/opscode/nginx/html/images/photo.jpg from none to c86a08
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-post-info.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/separator-post-info.gif
      - update content in file /var/opt/opscode/nginx/html/images/separator-post-info.gif from none to 6a3483
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/upMenuArrow.png] action create
      - create new file /var/opt/opscode/nginx/html/images/upMenuArrow.png
      - update content in file /var/opt/opscode/nginx/html/images/upMenuArrow.png from none to d3a446
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-login.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/separator-login.gif
      - update content in file /var/opt/opscode/nginx/html/images/separator-login.gif from none to 8796a8
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-footer-list.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/separator-footer-list.gif
      - update content in file /var/opt/opscode/nginx/html/images/separator-footer-list.gif from none to fb81f5
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-blocks.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/separator-blocks.gif
      - update content in file /var/opt/opscode/nginx/html/images/separator-blocks.gif from none to b76a8f
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-footer-bottom.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/separator-footer-bottom.gif
      - update content in file /var/opt/opscode/nginx/html/images/separator-footer-bottom.gif from none to 664672
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'

Recipe: infra-server::nginx
  * template[/var/opt/opscode/nginx/etc/scripts/config.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/config.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/config.lua from none to 5c559f
    --- /var/opt/opscode/nginx/etc/scripts/config.lua   2025-10-05 06:15:17.061904668 +0000
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-config20251005-1727-zlok2f.lua 2025-10-05 06:15:17.060904664 +0000
    @@ -1 +1,213 @@
    +-- this script exposes get_org_config which returns an array of
    +-- darklaunch configuration maps retrieved from redis
    +module("config", package.seeall)
    +
    +-- NOTE: assumption that the following is defined globally:
    +-- redis = require("resty/redis")
    +
    +local redis_password = os.getenv("REDIS_PASSWORD")
    +
    +local failsafe_config = {}
    +failsafe_config["dl_default"] = {}
    +failsafe_config["dl_default"][1] = "503_mode"
    +failsafe_config["dl_default"][2] = true
    +
    +-- Client must set these via set_ban_refresh_interval
    +-- and set_maint_refresh_interval.
    +maint_refresh_interval = nil
    +ban_refresh_interval = nil
    +default_org = false
    +
    +local function b_to_i(v)
    +  -- these values are coming back as a string from redis. Handle both scenarios
    +  -- so that we don't break if our redis interface gets smarter down the road.
    +  if v == "true" or v == true then
    +    return 1
    +  elseif v == "false" or v == false then
    +    return 0
    +  else
    +    return v -- preserve string values
    +  end
    +end
    +
    +local function array_to_hash(t)
    +  local h = {}
    +  for i = 1, #t, 2 do
    +    h[t[i]] = t[i + 1]
    +  end
    +  return h
    +end
    +
    +local function auth_not_required(err)
    +  -- conservatively try to determine if auth is not required.
    +  -- if auth isn't required, we can safely ignore an error from
    +  -- the AUTH command
    +  return err == "ERR Client sent AUTH, but no password is set"
    +end
    +
    +local function connect_redis()
    +   local red = redis:new()
    +   red:set_timeout(1000)
    +   local ok, err = red:connect("127.0.0.1", 16379)
    +
    +   if not ok then
    +      ngx.log(ngx.ERR, "failed to connect redis: ", err)
    +   end
    +
    +   if redis_password == nil then
    +      ngx.log(ngx.ERR, "REDIS_PASSWORD not found in the environment")
    +      ok = false
    +   else
    +      local ok, err = red:auth(redis_password)
    +      if not ok then
    +         if auth_not_required(err) then
    +            ok = true
    +         else
    +            ngx.log(ngx.ERR, "failed to authenticate to redis: ", err)
    +        end
    +      end
    +   end
    +   return ok, red
    +end
    +
    +local function close_redis(red)
    +  local ok, err = red:set_keepalive(2000, 250)
    +  if not ok then
    +    ngx.log(ngx.ERR, "Failed to set keepalive: " .. err)
    +  end
    +end
    +
    +-- Get configuration information for default/orgname/override in pipelined fashion
    +-- return failsafe defaults if redis error occurs otherwise an array of results.
    +local function redis_pipelined_get_config(red, orgname)
    +  red:init_pipeline()
    +  red:hgetall("dl_default")
    +  red:hgetall("dl_org_" .. orgname)
    +  red:hgetall("dl_override")
    +  local results, err = red:commit_pipeline()
    +  if not results then
    +    ngx.log(ngx.ERR, "failed to commit the pipelined requests: " .. err )
    +    results = failsafe_config
    +  end
    +  return results
    +end
    +
    +local function redis_fetch_set(set_name)
    +  local result = {}
    +  local ok, red = connect_redis()
    +  if ok then
    +    result, err = red:smembers(set_name);
    +    if err then
    +      ngx.log(ngx.ERR, "Redis read error retrieving " .. set_name .. ": " .. err);
    +      ok = false
    +    else
    +      close_redis(red)
    +    end
    +  end
    +  return ok, result
    +end
    +
    +-- Connect to redis and retrieve configuration for this org.
    +local function get_org_config(orgname)
    +  local ok, red = connect_redis()
    +  if ok then
    +    results = redis_pipelined_get_config(red, orgname)
    +    close_redis(red)
    +  else
    +    results = failsafe_config
    +  end
    +  return results
    +end
    +
    +-- Examines the shared_dict provided and determine if it needs updating
    +-- based on expiry time.  If so, it clears all entries and refreshes
    +-- the dict data from redis
    +local function refresh_expiring_set(shared_dict, redis_set_name, interval)
    +  local updated_at = shared_dict:get("updated_at");
    +  if updated_at == nil or (ngx.now() - updated_at) >= interval then
    +    ok, updated_data = redis_fetch_set(redis_set_name)
    +    if ok then
    +       shared_dict:flush_all();
    +       for index, key in ipairs(updated_data) do
    +         shared_dict:set(key, true);
    +       end
    +       shared_dict:set("updated_at", ngx.now());
    +    end
    +  end
    +end
    +
    +-- return true if our systems are in maintenance mode
    +-- and the remote address is not excluded from maintenance mode
    +-- will refresh maint-mode state and whitelisted IPs periodically.
    +function config.is_in_maint_mode_for_addr(remote_addr)
    +  local maint = ngx.shared.maint_data
    +  refresh_expiring_set(maint, "maint_data", maint_refresh_interval)
    +  return maint:get("maint_mode")
    +end
    +
    +-- This does not attempt to refresh the maintenance mode data, as it's
    +-- intended to be invoked only after main data has been loaded/refreshed earlier int he flow
    +function config.is_route_in_maint_mode(route_id)
    +  local maint = ngx.shared.maint_data
    +  return maint:get("maint_mode_" .. route_id)
    +end
    +
    +function config.is_route_darklaunched(route_id)
    +  local maint = ngx.shared.maint_data
    +  return maint:get("dl_" .. route_id)
    +end
    +
    +-- return true if ip needs to be allowed in maintenance mode
    +-- gets the data by redis call
    +function config.is_addr_allowed_in_maint_mode(remote_addr)
    +  ok, allowed_ips_list = redis_fetch_set("xmaint_allowed_ips_list")
    +--  for k, v in pairs(allowed_ips_list) do ngx.log(ngx.ERR, "inside maint_allowlisted with : ", v) end
    +  if ok then
    +    for k, v in pairs(allowed_ips_list) do
    +      if v == remote_addr then return true end
    +    end
    +  end
    +  return false
    +end
    +
    +-- need to change by using 'banned_ips' shared dict or calling the redis directly
    +function config.is_addr_banned(remote_addr)
    +  return false
    +end
    +
    +-- Get 'raw' org configuration - nested array of darklaunch rules
    +function config.raw_org_config(org)
    +  local results = get_org_config(org)
    +  local c = {}
    +  local i = 1
    +  for index, result in pairs(results) do
    +    c[i] = {}
    +    for k, v in pairs(array_to_hash(result)) do c[i][k] = v end
    +    i = i + 1
    +  end
    +  return c
    +end
    +
    +-- Get org configuration and darklaunch rules
    +function config.org_config(org)
    +  local results = get_org_config(org or "_OC_INTERNAL_NO_ORG")
    +  -- merge results into a single table, with later key values overwriting earlier ones.
    +  local org_config = {}
    +  for index, result in pairs(results) do
    +    for k, v in pairs(array_to_hash(result)) do org_config[k] = b_to_i(v) end
    +  end
    +  return org_config
    +end
    +
    +function set_ban_refresh_interval(interval)
    +  ban_refresh_interval = interval
    +end
    +
    +function set_maint_refresh_interval(interval)
    +  maint_refresh_interval = interval
    +end
    +
    +function set_default_org(org)
    +  default_org = org
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/nginx/etc/scripts/dispatch.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/dispatch.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/dispatch.lua from none to cd54b7
    --- /var/opt/opscode/nginx/etc/scripts/dispatch.lua 2025-10-05 06:15:17.087904783 +0000
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-dispatch20251005-1727-1gx2wwx.lua      2025-10-05 06:15:17.086904779 +0000
    @@ -1 +1,115 @@
    +-- Note: these modules are loaded during server init, since they're
    +-- used in every request:
    +-- routes = routes.lua
    +-- config = config.lua
    +-- resolver = resolver.lua
    +
    +local mode = ngx.var.mode
    +local internal = false
    +local min_version = 10
    +
    +local remote_addr = ngx.var.remote_addr
    +
    +
    +-- Before we go any further, check banned IPs
    +if config.is_addr_banned(remote_addr) then
    +    ngx.exit(ngx.HTTP_FORBIDDEN)
    +end
    +
    +-- If chef-user is missing then it's presumably not a chef client.
    +local userid = ngx.var.http_x_ops_userid or ""
    +local uri = ngx.var.uri
    +
    +-- A couple of early-exit validations that are specific
    +-- to an api vhost:
    +if mode == "api" then
    +  -- If we've defined an override upstream and we don't have a userid, use
    +  -- the override upstream.
    +  local override_upstream = ngx.var.add_on_override_upstream
    +  if userid == "" and override_upstream ~= "" then
    +    ngx.var.upstream = override_upstream
    +    return
    +  end
    +
    +  -- Internal API does not validate chef version
    +  if not internal then
    +    -- Exit early: If they don't have the right chef version, send them packing.
    +    local version = ngx.var.http_x_chef_version
    +    if version then
    +      if not routes.is_client_version_valid(version, min_version) then
    +        ngx.status = ngx.HTTP_BAD_REQUEST
    +        ngx.say('{"error": "400 - Bad Request: Chef Client version ' ..
    +                min_version .. ' or higher required. Your version of Chef is ' ..
    +                version .. '."}')
    +        ngx.exit(ngx.HTTP_OK)
    +      end
    +    else
    +        -- the request did not originate with a chef client, we'll give something
    +        -- more friendly to web browsers.
    +        return ngx.exec("/index.html")
    +    end
    +  end
    +
    +  -- Exit early: If they don't have a chef user id we don't want them here.
    +  -- Only API server (both internal and external) verify that user id is present.
    +  if userid == "" then
    +    ngx.exit(ngx.HTTP_UNAUTHORIZED)
    +  end
    +end
    +
    +
    +-- This check is of not much value as the list of ip not to be allowed
    +-- is more than the list of ips to be allowed in maintenance mode
    +-- if we should remove this call, then we need to handle the ngx.shared.maint_data
    +-- refresh logic correctly, currently as far as I know we are not setting the
    +-- 'maint_data' set in redis
    +-- global maint mode && address NOT excluded? no can do, muchacho
    +if config.is_in_maint_mode_for_addr(remote_addr) then
    +  ngx.exit(ngx.HTTP_SERVICE_UNAVAILABLE)
    +end
    +
    +-- Parse the URI to determine that it points to a valid destination
    +-- and extract necessary components to move forward.
    +local route = routes.resolve_uri(mode, uri)
    +
    +-- If we don't have a route identifier it means we  couldn't match the url
    +-- to a valid path.
    +if not route.route_id then
    +  ngx.exit(ngx.HTTP_NOT_FOUND)
    +end
    +
    +-- add the flag to ignore 503 route level check
    +route.maint_ip_allowed = config.is_addr_allowed_in_maint_mode(remote_addr)
    +
    +-- Load restrictions and darklaunch constraints for this org.
    +-- note that org name may not be valid - we'll use an appropriate default if it's not,
    +-- such as when the URI is valid but does not contain an org name.
    +route.org_config = config.org_config(route.org_name, mode)
    +
    +-- API mode means that internal routing rules do not apply, so only flag as internal if
    +-- we're not in api mode
    +if not (mode == "api") then
    +  route.internal = internal
    +end
    +
    +-- All remaining checks are done with the full request context that we've built
    +-- Any non-zero response indicates an http response code that we must terminate with
    +-- immediately.
    +local response = route_checks.run(route)
    +if (response > 0) then
    +  ngx.exit(response)
    +end
    +
    +-- At long last! Against all odds, they're cleared to move onto
    +-- their final destination. Let's figure out what that is, pack
    +-- them up with a shiny new set of darklaunch headers,
    +-- and send them on their way
    +ngx.var.upstream = resolver.determine_upstream(route)
    +
    +local dl_header = ""
    +
    +for k, v in pairs(route.org_config) do dl_header = dl_header .. k .. "=" .. v .. ";" end
    +ngx.req.set_header("X-Ops-DarkLaunch", dl_header)
    +
    +
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/nginx/etc/scripts/resolver.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/resolver.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/resolver.lua from none to 3ca213
    --- /var/opt/opscode/nginx/etc/scripts/resolver.lua 2025-10-05 06:15:17.109904880 +0000
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-resolver20251005-1727-qnun2.lua        2025-10-05 06:15:17.108904876 +0000
    @@ -1 +1,52 @@
    +module("resolver", package.seeall)
    +local upstream_resolver = { }
    +
    +-- To preserve the ability to run tests locally, please comment out any
    +-- chef templating if statements so that the un-rendered portions run in tests.
    +-- For example:
    +--
    +
    +-- These names map directly to named upstreams
    +upstream_resolver.chef = "opscode_chef"
    +upstream_resolver.erchef = "opscode_erchef"
    +upstream_resolver.acct = "opscode_account"
    +
    +-- Resolve an upstream, applying any necessary darklaunch controls.
    +-- Once we have an upstream name, modify it if the upstream
    +-- is tarpitted per the configuration.
    +upstream_resolver.resolve = function(route)
    +  local upstream = nil
    +  local route_id = route.route_id
    +  local resolver_fun = upstream_resolver[route_id .. "_fun"]
    +  if resolver_fun then
    +    route_id = resolver_fun(route)
    +  end
    +  return upstream_resolver.tarpitify(route_id, route.org_config, route.internal)
    +end
    +
    +-- If config names a tarpit for the given route, then
    +-- alter the upstream name to the appropriate tarpit
    +upstream_resolver.tarpitify = function(route_id, org_config, internal)
    +  local upstream = upstream_resolver[route_id]
    +  -- internal non-API lbs don't tarpit
    +  if internal then
    +    return upstream
    +  end
    +
    +  tarpitid = org_config["tarpit_" .. route_id]
    +  if tarpitid then
    +    return upstream .. "_tarpit" .. tarpitid
    +  end
    +  return upstream
    +end
    +
    +upstream_resolver.acct_erchef_fun = function(route)
    +--  returns "erchef" as we moved away from 'opscode_account'
    +  return "erchef"
    +end
    +
    +-- If this is an internal non API vhost , the caller must also ensure that route.internal == true
    +function resolver.determine_upstream(route)
    +  return upstream_resolver.resolve(route)
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/nginx/etc/scripts/route_checks.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/route_checks.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/route_checks.lua from none to 18b247
    --- /var/opt/opscode/nginx/etc/scripts/route_checks.lua     2025-10-05 06:15:17.129904969 +0000
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-route_checks20251005-1727-1qpmok6.lua  2025-10-05 06:15:17.129904969 +0000
    @@ -1 +1,85 @@
    +module("route_checks", package.seeall)
    +
    +-- To preserve the ability to run tests locally, please comment out any
    +-- chef templating if statements so that the un-rendered portions run in tests.
    +-- For example:
    +--
    +
    +local response = {}
    +response[403] = {}
    +response[404] = {}
    +response[503] = {}
    +
    +-- To add checks for a new response code, first declare it above in the form
    +-- response[CODE] = {}, then at minimum add a new function response[CODE].default = function(route)
    +
    +
    +-- To add route-specific checks, add a new function for the given
    +-- response code in the form of response[CODE].ROUTE_ID = function(route)
    +-- This function must return "true" if the request shoudl be terminated with "CODE".
    +--
    +-- For example to implement "a 404 should occur for the users endpoint on the
    +-- "acct" route if we are configured to force users endpoint not found":
    +--
    +-- response[404].acct = function(org_config, endpoint, object_name)
    +--   return endpoint == "users" and org_config['force_users_not_found'] == 1
    +-- end
    +--
    +
    +--
    +-- Default checks -- applied first regardless of endpoint or object-name
    +-- are handled here.
    +--
    +response[503].default = function(route)
    +--  ngx.log(ngx.ERR, "allowlist check is ", (not route.maint_ip_allowed))
    +  if (not route.maint_ip_allowed) and
    +     (route.org_config["503_mode"] == 1 or config.is_route_in_maint_mode(route.route_id)) then
    +     return true
    +   end
    +  return false
    +end
    +
    +response[404].default = function(route)
    +  -- route-level darklaunch check:
    +  if config.is_route_darklaunched(route.route_id) then
    +    return not (route.org_config["dl_" .. route.route_id] == 1)
    +  end
    +  return false
    +end
    +
    +response[403].default = function(route)
    +  return route.org_config["org_blocked"] == 1
    +end
    +
    +--
    +-- Endpoint-specific checks from here on down.
    +--
    +
    +-- return true if client is posting to "organizations" endpoint but
    +-- new org creation is disabled
    +response[503].acct = function(route)
    +  return route.org_name == nil and
    +         route.endpoint == "organizations" and
    +         ngx.req.get_method() == "POST" and
    +         route.org_config["disable_new_orgs"] == 1
    +end
    +
    +--
    +-- Our only public interface
    +--
    +
    +-- Run all available checks for the given parameters.  Returns 0
    +-- if it's clear to proceed, otherwise it returns an http response code
    +function route_checks.run(route)
    +  for code, check in pairs(response) do
    +    if check.default(route) or
    +       (check[route.route_id] and
    +        check[route.route_id](route)) then
    +      return code
    +    end
    +  end
    +  return 0
    +end
    +
    +
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/nginx/etc/scripts/routes.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/routes.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/routes.lua from none to 3947e4
    --- /var/opt/opscode/nginx/etc/scripts/routes.lua   2025-10-05 06:15:17.149905057 +0000
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-routes20251005-1727-1k5g4kh.lua        2025-10-05 06:15:17.149905057 +0000
    @@ -1 +1,272 @@
    +module("routes", package.seeall)
    +
    +-- To preserve the ability to run tests locally, please comment out any
    +-- chef templating if statements so that the un-rendered portions run in tests.
    +-- For example:
    +--
    +
    +-- For lpeg syntax, reference www.inf.puc-rio.br/~roberto/lpeg/
    +local lpeg = require "lpeg"
    +local match = lpeg.match
    +local P  = lpeg.P
    +local B  = lpeg.B
    +local S  = lpeg.S
    +local R  = lpeg.R
    +local C  = lpeg.C
    +local Ct = lpeg.Ct
    +local Cg = lpeg.Cg
    +local Cc = lpeg.Cc
    +
    +-- create a capture that maps the value of 'name' to capture group "route_id"
    +local function Crt(name)
    +  return Cg(Cc(name), "route_id")
    +end
    +
    +-- create a capture that maps the captured value of 'exp' to capture group 'endpoint'
    +local function Cendpoint(exp)
    +  return Cg(exp, "endpoint")
    +end
    +
    +-- match the first argument and set the endpoint to the second argument.
    +-- useful for when you want to set a route to an endpoint whose name
    +-- is not contained in the route.
    +-- for example:
    +--   Cmatch_and_assign_endpoint(p_users, "associations") * p_sep * p_eol
    +-- would match /users(/) and set its endpoint to "associations"
    +local function Cmatch_and_assign_endpoint(p_to_match, endpoint_string)
    +   return p_to_match * Cendpoint(Cc(endpoint_string))
    +end
    +
    +-- Basic identifiers
    +local p_eol = P(-1)
    +local p_lower = R"az"
    +local p_upper = R"AZ"
    +local p_numeric = R"09"
    +local p_special = S"_-"
    +local p_sep = P"/"
    +local p_dot = P"."
    +
    +-- Route Components
    +local p_org = P"organizations"
    +local p_org_base = P"/organizations"
    +local p_auth_user = P"authenticate_user"
    +local p_system_recovery = P"system_recovery"
    +local p_license = P"license"
    +local p_api_version = P"server_api_version"
    +local p_acl = P"/_acl"
    +local p_search = P"search"
    +local p_nodes = P"nodes"
    +local p_cookbooks = P"cookbooks"
    +local p_data = P"data"
    +local p_roles = P"roles"
    +local p_sandboxes = P"sandboxes"
    +local p_environments = P"environments"
    +local p_users = P"users"
    +local p_groups = P"groups"
    +local p_containers = P"containers"
    +local p_association_requests = P"association_requests"
    +local p_clients = P"clients"
    +local p_runs = P"runs"
    +local p_principals = P"principals"
    +local p_internal_organizations_base = P"/internal-organizations"
    +local p_controls = P"controls"
    +local p_keys = P"keys"
    +local p_policyfile = P"policies"
    +local p_policy_groups = P"policy_groups"
    +local p_cookbook_artifacts = P"cookbook_artifacts"
    +local p_universe = P"universe"
    +
    +
    +-- Composite patterns
    +local p_maybe_sep = p_sep^-1
    +local p_trailing_sep = p_maybe_sep * p_eol
    +local p_org_identifier_char = p_lower + p_numeric + p_special
    +local p_org_identifier = p_org_identifier_char^1
    +local p_until_next_separator = (P(1) - p_sep)^1
    +
    +-- Because we implement different identifiers differently (users & orgs have one set of rules,
    +-- other objects have different rules) accept anything up to but not including the separator
    +-- as an identifier sufficient to pass along to the upstream.
    +local p_identifier = p_until_next_separator
    +
    +local p_org_prefix = p_org_base * p_sep
    +local p_named_org = p_org_prefix * Cg(p_org_identifier, "org_name")
    +local p_named_org_prefix = p_named_org * p_sep
    +local p_all_until_acl = (P(1) - p_acl)^1
    +-- Not techncially for routing, this will be used to capture chef version from inbound headers
    +-- leaving it here to keep all of our grammar in one location.
    +local p_chef_version = Cg(p_numeric^1, "major") * p_dot * Cg(p_numeric^1, "minor") * p_dot
    +
    +
    +-- ROUTE CAPTURES
    +-- These captures will map the constant name to the capture group "route_id".
    +-- If you're adding a new route, the first step is to define the capture that returns
    +-- the route name below:
    +
    +local c_acct = Crt("acct")
    +local c_erchef = Crt("erchef")
    +local c_acct_erchef = Crt("acct_erchef")
    +
    +-- The "valid identifier" capture is used for any object name such
    +-- as node name, user name, etc.
    +local c_identifier = Cg(p_identifier, "object_name")
    +
    +local c_maybe_identifier = (p_sep * c_identifier)^-1
    +
    +local p_erchef_endpoint = p_cookbooks + p_data + p_roles + p_sandboxes +
    +                          p_environments + p_clients + p_nodes + p_principals +
    +                          p_groups + p_containers + p_controls +
    +                          p_policy_groups + p_policyfile + p_cookbook_artifacts + p_universe
    +
    +
    +-- endpoints that map directly to erchef
    +-- If an object identifier is present - as identified with /IDENTIFIER - then
    +-- capture it. Otherwise -- require end-of-line (in other words, avoid the case
    +-- of "/nodesSOMEDATA" resolving to 'nodes' endpoint.
    +local p_erchef_direct = (Cendpoint(p_erchef_endpoint) * ((p_sep * c_identifier) + (p_maybe_sep * p_eol))) +
    +                        Cendpoint(p_search)
    +
    +-- users endpoint is currently split between erchef and account.
    +-- /users, /users/USERNAME/, /authenticate_user, and /system_recover -> erchef
    +-- /users/USERNAME/organizations, /users/USERNAME/association_requests go to account
    +local p_erchef_users = (p_sep * Cendpoint(p_users) * p_trailing_sep) +
    +                       (p_sep * Cendpoint(p_users) * (p_sep * c_identifier)^-1 * p_trailing_sep) +
    +                       (p_sep * Cendpoint(p_auth_user) * p_trailing_sep) +
    +                       (p_sep * Cendpoint(p_system_recovery) * p_trailing_sep)
    +
    +local p_keys_route = ((p_named_org_prefix * p_clients * p_sep * p_identifier * p_sep * Cendpoint(p_keys)) +
    +                      (p_named_org_prefix * p_users * p_sep * p_identifier * p_sep * Cendpoint(p_keys)) +
    +                      (p_sep * p_users * p_sep * p_identifier * p_sep * Cendpoint(p_keys))) *
    +                        ((p_sep * c_identifier)^-1 * p_trailing_sep)
    +
    +
    +local p_license_route = (p_sep * Cendpoint(p_license) * p_trailing_sep)
    +local p_server_api_version_route = (p_sep * Cendpoint(p_api_version) * p_trailing_sep)
    +
    +-- Everything that gets sent to erchef
    +local p_erchef = p_keys_route +
    +                 (p_named_org_prefix * p_erchef_direct) +
    +                 p_erchef_users +
    +                 p_license_route +
    +                 p_server_api_version_route
    +
    +-- erchef routing rules for chef_internal, which includes an additional
    +-- principals endpoint not exposed via the api rules
    +local p_erchef_int = p_erchef +
    +                    (p_named_org_prefix * Cendpoint(p_principals) * p_maybe_sep)
    +
    +-- /users endpoints for account:
    +local p_named_user = (p_sep * p_users * p_sep * c_identifier)
    +
    +
    +                     -- /organizations/:orgname/association_requests(/), custom endpoint for darklaunch
    +local p_acct_users = (p_named_org_prefix * Cendpoint(p_association_requests) * (p_sep + p_eol)) +
    +                     -- /organizations/:orgname/users/:username(/), endpoint "associations" for darklaunch
    +                     (p_named_org_prefix * Cmatch_and_assign_endpoint(p_users, "associations") * p_sep * c_identifier * (p_sep + p_eol)) +
    +                     -- /organizations/:orgname/users(/)
    +                     (p_named_org_prefix * Cmatch_and_assign_endpoint(p_users, "associations") * (p_sep + p_eol)) +
    +                     -- /users/:username/(/)association_requets(/) OR /users/:username/organiztaions(/)
    +                     p_named_user *
    +                       -- below rule for backwards compatibility with original:
    +                       -- /users/BLAH/{0,1}/association_requests
    +                       -- which permits: /users/BLAH//association_requests
    +                       ((p_sep * p_maybe_sep * Cendpoint(p_association_requests) * (p_sep + p_eol)) +
    +                       -- set /users/:username/organizations(/) to endpoint "associations" so we
    +                       -- can darklaunch it
    +                       (p_sep * Cmatch_and_assign_endpoint(p_org, "associations") * p_trailing_sep) )
    +
    +
    +-- /organizations(/:orgname/)
    +local p_org_endpoint = (p_sep * Cendpoint(p_org) * (p_sep * Cg(p_org_identifier, "org_name"))^-1 * p_trailing_sep)
    +
    +-- note that the acl endpoint is a special case because it supercedes all others
    +-- including routes that would otherwise go to erchef.
    +local p_acl_endpoint = (p_named_org_prefix * p_all_until_acl * Cendpoint(p_acl) * (p_sep + p_eol)) +
    +                       (p_named_user * Cendpoint(p_acl) * (p_sep + p_eol))
    +
    +
    +-- Default org endpoints. This is to help with migrating from OSC 11 to Chef Server 12
    +local p_default_org_endpoints = p_search + p_nodes + p_cookbooks + p_data + p_roles + p_sandboxes +
    +      p_environments + p_clients + p_runs + p_principals + p_groups + p_containers
    +
    +-- acct_erchef endpoints that are also routed to internal_acct
    +local p_internal_acct_erchef_endpoints = p_acct_users + p_org_endpoint
    +
    +local uri_resolvers = {
    +  -- Retain ordering to ensure proper eval:
    +  -- p_acl_endpont must come first because a trailing _acl takes precedence
    +  -- over any other identifiers which may be in the url.
    +
    +  api = (p_acl_endpoint * c_acct_erchef) +
    +        (p_erchef * c_erchef) +
    +        (p_internal_acct_erchef_endpoints * c_acct_erchef),
    +
    +  -- This one is easy - everything passes through, though we'll still need to capture components
    +  -- (org name, object name, endpoint name) where we can, so that post-route hooks can be applied.
    +  internal_acct =
    +                  -- as in API, acls come first so that we can ensure webui requests for
    +                  -- acls get routed correctly to account, even when the underlying object is
    +                  -- darklaunched to erchef.
    +                  (p_acl_endpoint * c_acct_erchef) +
    +
    +                  -- TODO confirm - this should no longer be required.
    +                  -- Special case: webui1 will still send requests for clients over to us, so
    +                  -- we have to be able to route migrated endpoints (that used to be acct) to erchef.
    +                  -- we will need to continue to add migrated acct->erchef endpoints here
    +                  -- until we either correct or retire webui 1
    +                  ((p_named_org_prefix * Cendpoint(p_clients) * c_maybe_identifier) * c_erchef) +
    +                  (p_erchef_users * c_erchef) +
    +                  (p_internal_acct_erchef_endpoints * c_acct_erchef) +
    +                  (p_internal_organizations_base * c_acct),
    +
    +  -- Anything that routes to erchef or reporting is handled here.
    +  internal_chef = (p_erchef_int * c_erchef)
    +}
    +
    +-- Checks if the request is for default orgs
    +local function needs_default_org(uri)
    +  return match(p_sep * p_default_org_endpoints, uri)
    +end
    +
    +-- caller should bypass this client version check if caller is internal lb
    +function routes.is_client_version_valid(version, min)
    +  local res = match(Ct(p_chef_version), version)
    +  if (res == nil) then
    +    return false
    +  end
    +  local major = tonumber(res.major)
    +  local minor = tonumber(res.minor)
    +  if (major or minor) and
    +     -- Look at the provided arguments, but 'special case' from before we
    +     -- changed our version string format. ONce we desupport that version,
    +     -- we will need to make a final update here.
    +     (major >= min or (major == 0 and minor == 10)) then
    +    return true
    +  end
    +  return false
    +end
    +
    +-- Return a table containing:
    +-- route_id (route id, nil if invalid route)
    +-- org_name (nil if not found)
    +-- endpoint (nil if not found)
    +-- object_name (nil if not found)
    +function routes.resolve_uri(mode, uri)
    +  if config.default_org and needs_default_org(uri) then
    +    uri = '/organizations/' .. config.default_org .. uri
    +    -- Deliberately do not rewrite uri here, and pass the
    +    -- original to erchef. Client requests are checksummed
    +  end
    +  route = match(Ct(uri_resolvers[mode]), uri)
    +  if not route then
    +    route = {}
    +  end
    +
    +  -- normalize /_acl endpoint to acls
    +  if route.endpoint == "/_acl" then
    +    route.endpoint = "acls"
    +  end
    +
    +  return route
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/nginx/etc/scripts/dispatch_route.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/dispatch_route.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/dispatch_route.lua from none to 993889
    --- /var/opt/opscode/nginx/etc/scripts/dispatch_route.lua   2025-10-05 06:15:17.178905185 +0000
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-dispatch_route20251005-1727-16vcj07.lua        2025-10-05 06:15:17.177905181 +0000
    @@ -1 +1,41 @@
    +-- This is for use with the internal /_routes endpoints
    +local cjson = require("cjson")
    +cjson.encode_keep_buffer(false)
    +args = ngx.req.get_uri_args()
    +
    +-- Let's go ahead pull the meat out of the url - easy, since we're guaranteed that our URI
    +-- is prefixed with "/_route/"
    +local uri = string.sub(ngx.var.uri, 8)
    +local route = routes.resolve_uri("api", uri)
    +if not route.route_id then
    +  ngx.say('{"error": "no route exists for the uri ' .. uri .. '"}')
    +  ngx.exit(ngx.HTTP_OK)
    +end
    +
    +route.org_config = config.org_config(route.org_name)
    +upstream = resolver.determine_upstream(route)
    +--
    +-- construct a table with response data, then serialize to json
    +local json = {}
    +-- Start out with the basics
    +json['org_name'] = route.org_name
    +json['upstream_target'] = upstream
    +json['uri'] = uri
    +json['route'] = route.route_id
    +json['endpoint'] = route.endpoint
    +json['object_name'] = route.object_name or ""
    +json['config'] = {}
    +json['config']['merged'] = route.org_config
    +
    +-- debug config - include merged and default/org/override config.
    +if args['all'] == "1" then
    +  local raw = config.raw_org_config(org_name)
    +  json['config']['default'] = raw[1]
    +  json['config']['org'] = raw[2]
    +  json['config']['override'] = raw[3]
    +end
    +
    +-- Send it back and done.
    +ngx.say(cjson.encode(json))
    +ngx.exit(ngx.HTTP_OK)
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/nginx/etc/scripts/validator.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/validator.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/validator.lua from none to 838cb8
    --- /var/opt/opscode/nginx/etc/scripts/validator.lua        2025-10-05 06:15:17.195905260 +0000
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-validator20251005-1727-is0a7u.lua      2025-10-05 06:15:17.195905260 +0000
    @@ -1 +1,37 @@
    +module("validator", package.seeall)
    +
    +-- Map to translate HTTP verbs to ngx.HTTP_* numericals
    +local HTTP_REQ_MAP = {
    +  GET = ngx.HTTP_GET,
    +  POST = ngx.HTTP_POST,
    +}
    +
    +-- Validate the request against the `/validate` endpoint.
    +-- method: The allowed HTTP verb as a string. e.g: "GET", "POST"
    +function validator.validate(method)
    +  if ngx.var.request_method ~= method then
    +    ngx.exit(ngx.HTTP_NOT_ALLOWED)
    +  end
    +
    +  -- ngx.req.read_body() is required when using ngx.location.capture()
    +  ngx.req.read_body()
    +
    +  local res = ngx.location.capture(
    +    "/organizations/" .. ngx.var.request_org .. "/validate" .. ngx.var.request_uri,
    +    {
    +      method = HTTP_REQ_MAP[ngx.req.get_method()],
    +      always_forward_body = true,
    +      copy_all_vars = true
    +    }
    +  )
    +
    +  if res.status == ngx.HTTP_OK then
    +    return
    +  else
    +    -- return the validation sub-request error message
    +    ngx.status = res.status
    +    ngx.say(res.body)
    +    ngx.exit(res.status)
    +  end
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * file[/var/opt/opscode/nginx/stats_htpasswd] action create
    - create new file /var/opt/opscode/nginx/stats_htpasswd
    - update content in file /var/opt/opscode/nginx/stats_htpasswd from none to 447807
    - suppressed sensitive resource
    - change mode from '' to '0400'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/nginx/etc/chef_https_lb.conf] action create
    - create new file /var/opt/opscode/nginx/etc/chef_https_lb.conf
    - update content in file /var/opt/opscode/nginx/etc/chef_https_lb.conf from none to 40a981
    --- /var/opt/opscode/nginx/etc/chef_https_lb.conf   2025-10-05 06:15:17.231905420 +0000
    +++ /var/opt/opscode/nginx/etc/.chef-chef_https_lb20251005-1727-14qm5do.conf        2025-10-05 06:15:17.230905415 +0000
    @@ -1 +1,156 @@
    +  server {
    +    listen 443 ssl;
    +    server_name ip-172-31-46-255.ap-south-1.compute.internal;
    +    more_clear_headers Server;
    +
    +    set_by_lua $data_collector_token 'return os.getenv("DATA_COLLECTOR_TOKEN")';
    +
    +    access_log /var/log/opscode/nginx/access.log opscode;
    +
    +      ssl_certificate /var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.crt;
    +      ssl_certificate_key /var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.key;
    +      ssl_dhparam /var/opt/opscode/nginx/ca/dhparams.pem;
    +
    +      ssl_session_timeout 5m;
    +
    +      ssl_protocols TLSv1.2;
    +      ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES:!aNULL:!eNULL:!EXPORT;
    +      ssl_prefer_server_ciphers on;
    +
    +
    +    root /var/opt/opscode/nginx/html;
    +    client_max_body_size 250m;
    +
    +    proxy_set_header Host $host;
    +    proxy_set_header X-Real-IP $remote_addr;
    +    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    +    proxy_set_header X-Forwarded-Proto https;
    +    proxy_pass_request_headers on;
    +    proxy_connect_timeout   1;
    +    proxy_send_timeout      300;
    +    proxy_read_timeout      300;
    +
    +    add_header X-Frame-Options DENY;
    +    add_header Content-Security-Policy "default-src 'self';";
    +    add_header X-Content-Type-Options nosniff;
    +    add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    +    add_header Referrer-Policy 'strict-origin';
    +    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    +
    +    error_page 404 =404 /404.html;
    +    error_page 503 =503 /503.json;
    +    error_page 400 401 402 403 405 406 407 408 409 410 411 412 413 414 415 416 417
    +      418 421 422 423 424 425 426 428 429 431 451 500 501 502 504 505 506 507 508 510 511 = @errorrespfilter;
    +
    +    # Whitelist the docs necessary to serve up error pages and friendly
    +    # html to non-chef clients hitting this host.
    +    location ~ "^/[0-9]{3,3}\.(json|html)|favicon.ico|index.html$" {
    +      add_header Content-Security-Policy "default-src 'self';";
    +      add_header X-Frame-Options DENY;
    +      add_header X-Content-Type-Options nosniff;
    +      add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    +      add_header Referrer-Policy 'strict-origin';
    +      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    +    }
    +
    +    location "/css/" {
    +      add_header Content-Security-Policy "default-src 'self';";
    +      add_header X-Frame-Options DENY;
    +      add_header X-Content-Type-Options nosniff;
    +      add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    +      add_header Referrer-Policy 'strict-origin';
    +      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    +    }
    +
    +    location "/images/" {
    +      add_header Content-Security-Policy "default-src 'self';";
    +      add_header X-Frame-Options DENY;
    +      add_header X-Content-Type-Options nosniff;
    +      add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    +      add_header Referrer-Policy 'strict-origin';
    +      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    +    }
    +
    +    location /version {
    +      add_header Content-Security-Policy "default-src 'self';";
    +      add_header X-Frame-Options DENY;
    +      add_header X-Content-Type-Options nosniff;
    +      add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    +      add_header Referrer-Policy 'strict-origin';
    +      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    +      types { }
    +      default_type text/plain;
    +      alias /opt/opscode/version-manifest.txt;
    +    }
    +
    +    location ~ "^/organizations/([^/]+)/validate" {
    +      allow 127.0.0.1;
    +      allow ::1;
    +      deny all;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +    location ~ "^/organizations/([^/]+)/required_recipe$" {
    +      # This endpoint is unique because it is defined via nginx and is not
    +      # handled by an upstream like oc_erchef. In order to make responses
    +      # consistent between Chef server and chef-zero we'll always enable
    +      # the location but explicitly return a 404 when the feature is disabled,
    +      # rather than leave it undefined. If we were to leave it undefined any
    +      # non-signed requests would be routed to the main index page and return
    +      # a 200 instead of 404.
    +      return 404;
    +    }
    +
    +
    +    # bookshelf
    +    location ~ "^/bookshelf/organization-.+" {
    +      proxy_pass http://bookshelf;
    +    }
    +
    +    # erchef status endpoint
    +    location ~ "^/_status/?$" {
    +      types { }
    +      default_type application/json;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +    # erchef stats endpoint
    +    location ~ "^/_stats/?$" {
    +      auth_basic "Chef Server Admin Stats";
    +      auth_basic_user_file /var/opt/opscode/nginx/stats_htpasswd;
    +      types { }
    +      default_type application/json;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +    # This variable is set to an empty string here so it can be used in
    +    # dispatch.lua later on. An add-on can set this variable to be used as an
    +    # upstream if we determine the request was not intended to go to the API.
    +    set $add_on_override_upstream "";
    +
    +    # Include external routes for addons
    +    include /var/opt/opscode/nginx/etc/addon.d/*_external.conf;
    +
    +    location /_route/ {
    +      default_type 'application/json';
    +      content_by_lua_file '/var/opt/opscode/nginx/etc/scripts/dispatch_route.lua';
    +    }
    +
    +    location / {
    +      satisfy any;
    +
    +
    +      set $mode "api";
    +      set $upstream "";
    +      rewrite_by_lua_file '/var/opt/opscode/nginx/etc/scripts/dispatch.lua';
    +      proxy_pass http://$upstream;
    +      proxy_redirect http://$upstream /;
    +    }
    +    location @errorrespfilter {
    +      header_filter_by_lua_block { ngx.header.content_length = nil }
    +      body_filter_by_lua '
    +      ngx.arg[1] = ngx.re.sub(ngx.arg[1],"openresty", "")
    +      ';
    +    }
    +  }
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/nginx/etc/chef_http_lb.conf] action create
    - create new file /var/opt/opscode/nginx/etc/chef_http_lb.conf
    - update content in file /var/opt/opscode/nginx/etc/chef_http_lb.conf from none to 42be63
    --- /var/opt/opscode/nginx/etc/chef_http_lb.conf    2025-10-05 06:15:17.259905543 +0000
    +++ /var/opt/opscode/nginx/etc/.chef-chef_http_lb20251005-1727-1i2sucw.conf 2025-10-05 06:15:17.259905543 +0000
    @@ -1 +1,141 @@
    +  server {
    +    listen 80;
    +    server_name ip-172-31-46-255.ap-south-1.compute.internal;
    +    more_clear_headers Server;
    +
    +    set_by_lua $data_collector_token 'return os.getenv("DATA_COLLECTOR_TOKEN")';
    +
    +    access_log /var/log/opscode/nginx/access-port-80.log opscode;
    +
    +
    +    root /var/opt/opscode/nginx/html;
    +    client_max_body_size 250m;
    +
    +    proxy_set_header Host $host;
    +    proxy_set_header X-Real-IP $remote_addr;
    +    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    +    proxy_set_header X-Forwarded-Proto https;
    +    proxy_pass_request_headers on;
    +    proxy_connect_timeout   1;
    +    proxy_send_timeout      300;
    +    proxy_read_timeout      300;
    +
    +    add_header X-Frame-Options DENY;
    +    add_header Content-Security-Policy "default-src 'self';";
    +    add_header X-Content-Type-Options nosniff;
    +    add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    +    add_header Referrer-Policy 'strict-origin';
    +
    +    error_page 404 =404 /404.html;
    +    error_page 503 =503 /503.json;
    +    error_page 400 401 402 403 405 406 407 408 409 410 411 412 413 414 415 416 417
    +      418 421 422 423 424 425 426 428 429 431 451 500 501 502 504 505 506 507 508 510 511 = @errorrespfilter;
    +
    +    # Whitelist the docs necessary to serve up error pages and friendly
    +    # html to non-chef clients hitting this host.
    +    location ~ "^/[0-9]{3,3}\.(json|html)|favicon.ico|index.html$" {
    +      add_header Content-Security-Policy "default-src 'self';";
    +      add_header X-Frame-Options DENY;
    +      add_header X-Content-Type-Options nosniff;
    +      add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    +      add_header Referrer-Policy 'strict-origin';
    +    }
    +
    +    location "/css/" {
    +      add_header Content-Security-Policy "default-src 'self';";
    +      add_header X-Frame-Options DENY;
    +      add_header X-Content-Type-Options nosniff;
    +      add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    +      add_header Referrer-Policy 'strict-origin';
    +    }
    +
    +    location "/images/" {
    +      add_header Content-Security-Policy "default-src 'self';";
    +      add_header X-Frame-Options DENY;
    +      add_header X-Content-Type-Options nosniff;
    +      add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    +      add_header Referrer-Policy 'strict-origin';
    +    }
    +
    +    location /version {
    +      add_header Content-Security-Policy "default-src 'self';";
    +      add_header X-Frame-Options DENY;
    +      add_header X-Content-Type-Options nosniff;
    +      add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    +      add_header Referrer-Policy 'strict-origin';
    +      types { }
    +      default_type text/plain;
    +      alias /opt/opscode/version-manifest.txt;
    +    }
    +
    +    location ~ "^/organizations/([^/]+)/validate" {
    +      allow 127.0.0.1;
    +      allow ::1;
    +      deny all;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +    location ~ "^/organizations/([^/]+)/required_recipe$" {
    +      # This endpoint is unique because it is defined via nginx and is not
    +      # handled by an upstream like oc_erchef. In order to make responses
    +      # consistent between Chef server and chef-zero we'll always enable
    +      # the location but explicitly return a 404 when the feature is disabled,
    +      # rather than leave it undefined. If we were to leave it undefined any
    +      # non-signed requests would be routed to the main index page and return
    +      # a 200 instead of 404.
    +      return 404;
    +    }
    +
    +
    +    # bookshelf
    +    location ~ "^/bookshelf/organization-.+" {
    +      proxy_pass http://bookshelf;
    +    }
    +
    +    # erchef status endpoint
    +    location ~ "^/_status/?$" {
    +      types { }
    +      default_type application/json;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +    # erchef stats endpoint
    +    location ~ "^/_stats/?$" {
    +      auth_basic "Chef Server Admin Stats";
    +      auth_basic_user_file /var/opt/opscode/nginx/stats_htpasswd;
    +      types { }
    +      default_type application/json;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +    # This variable is set to an empty string here so it can be used in
    +    # dispatch.lua later on. An add-on can set this variable to be used as an
    +    # upstream if we determine the request was not intended to go to the API.
    +    set $add_on_override_upstream "";
    +
    +    # Include external routes for addons
    +    include /var/opt/opscode/nginx/etc/addon.d/*_external.conf;
    +
    +    location /_route/ {
    +      default_type 'application/json';
    +      content_by_lua_file '/var/opt/opscode/nginx/etc/scripts/dispatch_route.lua';
    +    }
    +
    +    location / {
    +      satisfy any;
    +
    +
    +      set $mode "api";
    +      set $upstream "";
    +      rewrite_by_lua_file '/var/opt/opscode/nginx/etc/scripts/dispatch.lua';
    +      proxy_pass http://$upstream;
    +      proxy_redirect http://$upstream /;
    +    }
    +    location @errorrespfilter {
    +      header_filter_by_lua_block { ngx.header.content_length = nil }
    +      body_filter_by_lua '
    +      ngx.arg[1] = ngx.re.sub(ngx.arg[1],"openresty", "")
    +      ';
    +    }
    +  }
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/nginx/etc/nginx.conf] action create
    - create new file /var/opt/opscode/nginx/etc/nginx.conf
    - update content in file /var/opt/opscode/nginx/etc/nginx.conf from none to e2809d
    --- /var/opt/opscode/nginx/etc/nginx.conf   2025-10-05 06:15:17.285905658 +0000
    +++ /var/opt/opscode/nginx/etc/.chef-nginx20251005-1727-17jahq8.conf        2025-10-05 06:15:17.284905654 +0000
    @@ -1 +1,154 @@
    +user opscode opscode;
    +worker_processes 2;
    +error_log /var/log/opscode/nginx/error.log;
    +# Enviroment variables that we wish to access while running must be declared here,
    +# otherwise they will not be available.
    +env REDIS_PASSWORD;
    +env DATA_COLLECTOR_TOKEN;
    +daemon off;
    +
    +events {
    +  worker_connections 10240;
    +}
    +
    +http {
    +  server_tokens off;
    +
    +  log_format opscode '$remote_addr - $remote_user [$time_iso8601]  '
    +                    '"$request" $status "$request_time" $body_bytes_sent '
    +                    '"$http_referer" "$http_user_agent" "$upstream_addr" "$upstream_status" "$upstream_response_time" "$http_x_chef_version" "$http_x_ops_sign" "$http_x_ops_userid" "$http_x_ops_timestamp" "$http_x_ops_content_hash" $request_length "$http_x_remote_request_id"';
    +
    +  # In the Chef API a 404 is not an error. These 404s will still be
    +  # logged to the request log.
    +  log_not_found off;
    +
    +  error_page 301 400 401 402 403 405 406 407 408 409 410 411 412 413 414 415 416 417
    +      418 421 422 423 424 425 426 428 429 431 451 500 501 502 504 505 506 507 508 510 511 = @errorrespfilter;
    +  server_names_hash_bucket_size 128;
    +
    +  sendfile on;
    +  tcp_nopush on;
    +  tcp_nodelay on;
    +
    +  keepalive_timeout 65;
    +
    +  gzip on;
    +  gzip_http_version 1.0;
    +  gzip_comp_level 2;
    +  gzip_proxied any;
    +  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;
    +
    +  include /opt/opscode/embedded/conf/mime.types;
    +
    +  lua_package_path "/var/opt/opscode/nginx/etc/scripts/?.lua;$prefix/?.lua;;";
    +  lua_shared_dict maint_data 1m;
    +  lua_shared_dict banned_ips 1m;
    +
    +  # Preload some shared modules globally
    +  init_by_lua '
    +    redis = require("resty/redis")
    +    config = require("config")
    +    routes = require("routes")
    +    resolver = require("resolver")
    +    route_checks = require("route_checks")
    +    validator = require("validator")
    +
    +    config.set_maint_refresh_interval(600)
    +    config.set_ban_refresh_interval(600)
    +    config.set_default_org(false)
    +  ';
    +
    +  # Listen for local requests to the stub_status module.
    +  server {
    +    listen 127.0.0.1:9999;
    +    location /nginx_status {
    +      stub_status on;
    +      access_log   off;
    +      allow 127.0.0.1;
    +      deny all;
    +    }
    +  }
    +
    +  upstream opscode_erchef {
    +    server 127.0.0.1:8000;
    +  }
    +  upstream oc_bifrost {
    +    server 127.0.0.1:9463;
    +  }
    +  upstream bookshelf {
    +    server 127.0.0.1:4321;
    +  }
    +
    +
    +
    +  # Include upstream definitions for addons
    +  include /var/opt/opscode/nginx/etc/addon.d/*_upstreams.conf;
    +
    +  fastcgi_temp_path "/var/opt/opscode/nginx/tmp/fastcgi";
    +  client_body_temp_path "/var/opt/opscode/nginx/tmp/client_body";
    +  uwsgi_temp_path "/var/opt/opscode/nginx/tmp/uwsgi";
    +  scgi_temp_path "/var/opt/opscode/nginx/tmp/scgi";
    +
    +  # external lb config for Chef API
    +    proxy_cache_path  /var/opt/opscode/nginx/cache/webui levels=1:2 keys_zone=webui-cache:50m max_size=5000m inactive=600m;
    +    proxy_cache_path  /var/opt/opscode/nginx/cache/cookbooks levels=1:2 keys_zone=cookbooks:50m max_size=5000m inactive=600m;
    +    proxy_temp_path /var/opt/opscode/nginx/cache-tmp;
    +
    +
    +    # We support three options: serve nothing on non_ssl_port (80),
    +    # redirect to https, or actually serve the API.
    +          server {
    +            listen 80;
    +            server_name ip-172-31-46-255.ap-south-1.compute.internal;
    +            more_clear_headers Server;
    +            access_log /var/log/opscode/nginx/rewrite-port-80.log;
    +            return 301 https://$host$request_uri;
    +            location @errorrespfilter {
    +              return 301 https://$host$request_uri;
    +              header_filter_by_lua_block { ngx.header.content_length = nil }
    +              body_filter_by_lua '
    +              ngx.arg[1] = ngx.re.sub(ngx.arg[1],"openresty", "")
    +              ';
    +            }
    +          }
    +
    +    # Chef HTTPS API
    +    include /var/opt/opscode/nginx/etc/chef_https_lb.conf;
    +
    +  # internal lb config for Chef API Services
    +  server {
    +    listen 9680;
    +    server_name ip-172-31-46-255.ap-south-1.compute.internal;
    +    more_clear_headers Server;
    +
    +    client_max_body_size 250m;
    +    proxy_set_header        Host            $host;
    +    proxy_set_header        X-Real-IP       $remote_addr;
    +    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    +    proxy_set_header        X-Forwarded-Proto http;
    +    proxy_set_header        X-Forwarded-Host $http_host;
    +    proxy_pass_request_headers on;
    +    proxy_connect_timeout   90;
    +    proxy_send_timeout      90;
    +    proxy_read_timeout      90;
    +
    +    access_log /var/log/opscode/nginx/internal-chef.access.log opscode;
    +    error_log  /var/log/opscode/nginx/internal-chef.error.log;
    +
    +    # Include internal routes for addons
    +    include /var/opt/opscode/nginx/etc/addon.d/*_internal.conf;
    +
    +    location "/" {
    +      set $upstream "";
    +      set $mode "internal_chef";
    +      rewrite_by_lua_file '/var/opt/opscode/nginx/etc/scripts/dispatch.lua';
    +
    +      proxy_redirect http://$upstream /;
    +      proxy_pass http://$upstream;
    +    }
    +  }
    +
    +
    +  include /var/opt/opscode/nginx/etc/nginx.d/*.conf;
    +}
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * cookbook_file[/var/opt/opscode/nginx/etc/addon.d/README.md] action create
    - create new file /var/opt/opscode/nginx/etc/addon.d/README.md
    - update content in file /var/opt/opscode/nginx/etc/addon.d/README.md from none to 51b41f
    --- /var/opt/opscode/nginx/etc/addon.d/README.md    2025-10-05 06:15:17.309248803 +0000
    +++ /var/opt/opscode/nginx/etc/addon.d/.chef-README20251005-1727-1pnpirh.md 2025-10-05 06:15:17.309248803 +0000
    @@ -1 +1,16 @@
    +# Chef Infra Server Addons
    +
    +This directory exists to allow addons to Chef Infra Server to add upstreams and routing rules to the nginx configuration
    +
    +## Included files
    +
    +There are includes in the main Nginx configuration that match the following patterns:
    +
    +* `*_upstreams.conf`: Upstream definitions
    +* `*_external.conf`: Routing rules for routes exposed via the external LB
    +* `*_internal.conf`: Routing rules for routes exposed via the internal LB
    +
    +## File Naming
    +
    +Files are included in normal alphabetic ordering.  To ensure consistent ordering, each addon should use a 2 digit numeric prefix followed by the component name.  e.g for addon 'foo' we would have files named `10-foo_upstreams.conf`, `10-foo_external.conf`, etc.
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * component_runit_service[nginx] action enable
    * template[/var/log/opscode/nginx/config] action create
      - create new file /var/log/opscode/nginx/config
      - update content in file /var/log/opscode/nginx/config from none to 5e16ac
      --- /var/log/opscode/nginx/config 2025-10-05 06:15:17.325905835 +0000
      +++ /var/log/opscode/nginx/.chef-config20251005-1727-1v9d3e5      2025-10-05 06:15:17.325905835 +0000
      @@ -1 +1,4 @@
      +# svlogd configuration
      +s104857600
      +n10
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
  Recipe: <Dynamically Defined Resource>
    * service[nginx] action nothing (skipped due to action :nothing)
    * runit_service[nginx] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/nginx] action create
        - create new directory /opt/opscode/sv/nginx
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/nginx/run] action create
        - create new file /opt/opscode/sv/nginx/run
        - update content in file /opt/opscode/sv/nginx/run from none to 78f2cd
        --- /opt/opscode/sv/nginx/run   2025-10-05 06:15:17.355905968 +0000
        +++ /opt/opscode/sv/nginx/.chef-run20251005-1727-42sxw9 2025-10-05 06:15:17.355905968 +0000
        @@ -1 +1,7 @@
        +#!/bin/sh
        +exec 2>&1
        +exec /opt/opscode/embedded/bin/veil-env-helper -f /etc/opscode/private-chef-secrets.json -o DATA_COLLECTOR_TOKEN=data_collector.token -s REDIS_PASSWORD=redis_lb.password -- \
        +  chpst \
        +  -P env TZ=UTC  \
        +  /opt/opscode/embedded/sbin/nginx -c /var/opt/opscode/nginx/etc/nginx.conf
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/nginx/log] action create
        - create new directory /opt/opscode/sv/nginx/log
      * directory[/opt/opscode/sv/nginx/log/main] action create
        - create new directory /opt/opscode/sv/nginx/log/main
        - change mode from '' to '0755'
      * directory[/var/log/nginx] action create
        - create new directory /var/log/nginx
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/nginx/log/config] action create
        - create new file /opt/opscode/sv/nginx/log/config
        - update content in file /opt/opscode/sv/nginx/log/config from none to e3b0c4
        (no diff)
        - change mode from '' to '0644'
      * link[/var/log/nginx/config] action create
        - create symlink at /var/log/nginx/config to /opt/opscode/sv/nginx/log/config
      * template[/opt/opscode/sv/nginx/log/run] action create
        - create new file /opt/opscode/sv/nginx/log/run
        - update content in file /opt/opscode/sv/nginx/log/run from none to 3c7476
        --- /opt/opscode/sv/nginx/log/run       2025-10-05 06:15:17.393906136 +0000
        +++ /opt/opscode/sv/nginx/log/.chef-run20251005-1727-vv0ucq     2025-10-05 06:15:17.393906136 +0000
        @@ -1 +1,4 @@
        +#!/bin/sh
        +exec chpst -U opscode -u opscode \
        +  svlogd -tt /var/log/opscode/nginx
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/nginx/env] action create
        - create new directory /opt/opscode/sv/nginx/env
        - change mode from '' to '0755'
      * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/nginx/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/nginx/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/nginx/control] action create
        - create new directory /opt/opscode/sv/nginx/control
        - change mode from '' to '0755'
      * link[/opt/opscode/init/nginx] action create
        - create symlink at /opt/opscode/init/nginx to /opt/opscode/embedded/bin/sv
      * file[/opt/opscode/sv/nginx/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/nginx] action create (up to date)
        * template[/opt/opscode/sv/nginx/run] action create (up to date)
        * directory[/opt/opscode/sv/nginx/log] action create (up to date)
        * directory[/opt/opscode/sv/nginx/log/main] action create (up to date)
        * directory[/var/log/nginx] action create (up to date)
        * template[/opt/opscode/sv/nginx/log/config] action create (up to date)
        * link[/var/log/nginx/config] action create (up to date)
        * template[/opt/opscode/sv/nginx/log/run] action create (up to date)
        * directory[/opt/opscode/sv/nginx/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/nginx/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/nginx/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/nginx/control] action create (up to date)
        * link[/opt/opscode/init/nginx] action create (up to date)
        * file[/opt/opscode/sv/nginx/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/nginx] action create
          - create symlink at /opt/opscode/service/nginx to /opt/opscode/sv/nginx
        * ruby_block[wait for nginx service socket] action run
          - execute the ruby block wait for nginx service socket
        - execute the ruby block restart_service
      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/nginx] action create (up to date)
        * template[/opt/opscode/sv/nginx/run] action create (up to date)
        * directory[/opt/opscode/sv/nginx/log] action create (up to date)
        * directory[/opt/opscode/sv/nginx/log/main] action create (up to date)
        * directory[/var/log/nginx] action create (up to date)
        * template[/opt/opscode/sv/nginx/log/config] action create (up to date)
        * link[/var/log/nginx/config] action create (up to date)
        * template[/opt/opscode/sv/nginx/log/run] action create (up to date)
        * directory[/opt/opscode/sv/nginx/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/nginx/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/nginx/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/nginx/control] action create (up to date)
        * link[/opt/opscode/init/nginx] action create (up to date)
        * file[/opt/opscode/sv/nginx/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/nginx] action create (up to date)
        * ruby_block[wait for nginx service socket] action run
          - execute the ruby block wait for nginx service socket
        - execute the ruby block restart_log_service
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/nginx] action create (up to date)
      * ruby_block[wait for nginx service socket] action run
        - execute the ruby block wait for nginx service socket

    * runit_service[nginx] action reload_log
      - reload log service

Recipe: infra-server::nginx
  * component_runit_service[nginx] action start
  Recipe: <Dynamically Defined Resource>
    * service[nginx] action nothing (skipped due to action :nothing)
    * runit_service[nginx] action start (up to date)
     (up to date)
Recipe: infra-server::nginx
  * template[/etc/opscode/logrotate.d/nginx] action create
    - create new file /etc/opscode/logrotate.d/nginx
    - update content in file /etc/opscode/logrotate.d/nginx from none to 9bb37e
    --- /etc/opscode/logrotate.d/nginx  2025-10-05 06:15:18.709911953 +0000
    +++ /etc/opscode/logrotate.d/.chef-nginx20251005-1727-798bt4        2025-10-05 06:15:18.709911953 +0000
    @@ -1 +1,11 @@
    +/var/log/opscode/nginx/*.log {
    +  rotate 10
    +  size 104857600
    +  create 644 opscode opscode
    +  delaycompress
    +  sharedscripts
    +  postrotate
    +    /opt/opscode/embedded/sbin/nginx -c /var/opt/opscode/nginx/etc/nginx.conf -s reopen
    +  endscript
    +}
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * execute[find /opt/opscode/embedded/nginx -user 'root' -exec chown opscode {} \;] action run (skipped due to only_if)
  * execute[find /var/opt/opscode/nginx -user 'root' -exec chown opscode {} \;] action run (skipped due to only_if)
  * execute[find /var/log/opscode/nginx -user 'root' -exec chown opscode {} \;] action run (skipped due to only_if)
Recipe: infra-server::bootstrap
  * execute[/opt/opscode/bin/chef-server-ctl start postgresql] action run
    - execute /opt/opscode/bin/chef-server-ctl start postgresql
  * execute[/opt/opscode/bin/chef-server-ctl start oc_bifrost] action run
    - execute /opt/opscode/bin/chef-server-ctl start oc_bifrost
  * ruby_block[bootstrap-chef-server-data] action run
    - execute the ruby block bootstrap-chef-server-data
  * file[/var/opt/opscode/bootstrapped] action create
    - create new file /var/opt/opscode/bootstrapped
    - update content in file /var/opt/opscode/bootstrapped from none to 4a3dbb
    --- /var/opt/opscode/bootstrapped   2025-10-05 06:15:20.503919883 +0000
    +++ /var/opt/opscode/.chef-bootstrapped20251005-1727-1eq3fe0        2025-10-05 06:15:20.503919883 +0000
    @@ -1 +1,2 @@
    +bootstrapped on 2025-10-05T06:13:00+00:00 (you punk)
    - change mode from '' to '0600'
    - change owner from '' to 'root'
    - change group from '' to 'root'
Recipe: infra-server::redis_lb
  * directory[/var/opt/opscode/redis_lb] action create
    - create new directory /var/opt/opscode/redis_lb
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/redis_lb/etc] action create
    - create new directory /var/opt/opscode/redis_lb/etc
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/redis_lb/data] action create
    - create new directory /var/opt/opscode/redis_lb/data
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/log/opscode/redis_lb] action create
    - create new directory /var/log/opscode/redis_lb
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * link[/var/opt/opscode/redis_lb/data] action create (skipped due to not_if)
  * template[/var/opt/opscode/redis_lb/etc/redis.conf] action create
    - create new file /var/opt/opscode/redis_lb/etc/redis.conf
    - update content in file /var/opt/opscode/redis_lb/etc/redis.conf from none to 054f25
    --- /var/opt/opscode/redis_lb/etc/redis.conf        2025-10-05 06:15:20.536920028 +0000
    +++ /var/opt/opscode/redis_lb/etc/.chef-redis20251005-1727-12r4ltb.conf     2025-10-05 06:15:20.536920028 +0000
    @@ -1 +1,34 @@
    +daemonize no
    +pidfile /var/opt/opscode/redis_lb/lb-redis.pid
    +
    +port 16379
    +bind 127.0.0.1
    +
    +tcp-keepalive 60
    +timeout 300
    +loglevel notice
    +logfile ""
    +
    +databases 16
    +
    +save 900 1
    +save 300 10
    +save 60 1000
    +
    +rdbcompression yes
    +dbfilename dump.rdb
    +dir /var/opt/opscode/redis_lb/data
    +
    +maxmemory 8m
    +maxmemory-policy noeviction
    +maxmemory-samples 3
    +
    +appendonly no
    +appendfsync always
    +
    +no-appendfsync-on-rewrite no
    +activerehashing no
    +
    +auto-aof-rewrite-percentage 50
    +auto-aof-rewrite-min-size 16mb
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * component_runit_service[redis_lb] action enable
    * template[/var/log/opscode/redis_lb/config] action create
      - create new file /var/log/opscode/redis_lb/config
      - update content in file /var/log/opscode/redis_lb/config from none to 79b978
      --- /var/log/opscode/redis_lb/config      2025-10-05 06:15:20.556920117 +0000
      +++ /var/log/opscode/redis_lb/.chef-config20251005-1727-1yhitgu   2025-10-05 06:15:20.556920117 +0000
      @@ -1 +1,4 @@
      +# svlogd configuration
      +s1000000
      +n10
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * runit_service[redis_lb] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/redis_lb] action create
        - create new directory /opt/opscode/sv/redis_lb
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/redis_lb/run] action create
        - create new file /opt/opscode/sv/redis_lb/run
        - update content in file /opt/opscode/sv/redis_lb/run from none to 6945e5
        --- /opt/opscode/sv/redis_lb/run        2025-10-05 06:15:20.586920249 +0000
        +++ /opt/opscode/sv/redis_lb/.chef-run20251005-1727-h8jydh      2025-10-05 06:15:20.586920249 +0000
        @@ -1 +1,5 @@
        +#!/bin/sh
        +exec 2>&1
        +exec /opt/opscode/embedded/bin/veil-env-helper -f /etc/opscode/private-chef-secrets.json -s REDIS_PASSWORD=redis_lb.password -- chpst -P -o 131071-u opscode -U opscode -o 100000 env HOME="/var/opt/opscode/redis_lb" /opt/opscode/embedded/bin/redis-server /var/opt/opscode/redis_lb/etc/redis.conf --requirepass "${REDIS_PASSWORD}"
        +
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/redis_lb/log] action create
        - create new directory /opt/opscode/sv/redis_lb/log
      * directory[/opt/opscode/sv/redis_lb/log/main] action create
        - create new directory /opt/opscode/sv/redis_lb/log/main
        - change mode from '' to '0755'
      * directory[/var/log/redis_lb] action create
        - create new directory /var/log/redis_lb
        - change mode from '' to '0755'
      * template[/opt/opscode/sv/redis_lb/log/config] action create
        - create new file /opt/opscode/sv/redis_lb/log/config
        - update content in file /opt/opscode/sv/redis_lb/log/config from none to e3b0c4
        (no diff)
        - change mode from '' to '0644'
      * link[/var/log/redis_lb/config] action create
        - create symlink at /var/log/redis_lb/config to /opt/opscode/sv/redis_lb/log/config
      * template[/opt/opscode/sv/redis_lb/log/run] action create
        - create new file /opt/opscode/sv/redis_lb/log/run
        - update content in file /opt/opscode/sv/redis_lb/log/run from none to 2ac1d5
        --- /opt/opscode/sv/redis_lb/log/run    2025-10-05 06:15:20.623920413 +0000
        +++ /opt/opscode/sv/redis_lb/log/.chef-run20251005-1727-1va62tk 2025-10-05 06:15:20.623920413 +0000
        @@ -1 +1,4 @@
        +#!/bin/sh
        +exec chpst -U opscode -u opscode \
        +  svlogd -tt /var/log/opscode/redis_lb
        - change mode from '' to '0755'
      * directory[/opt/opscode/sv/redis_lb/env] action create
        - create new directory /opt/opscode/sv/redis_lb/env
        - change mode from '' to '0755'
      * ruby_block[Delete unmanaged env files for redis_lb service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/redis_lb/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/redis_lb/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/redis_lb/control] action create
        - create new directory /opt/opscode/sv/redis_lb/control
        - change mode from '' to '0755'
      * link[/opt/opscode/init/redis_lb] action create
        - create symlink at /opt/opscode/init/redis_lb to /opt/opscode/embedded/bin/sv
      * file[/opt/opscode/sv/redis_lb/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/redis_lb] action create (up to date)
        * template[/opt/opscode/sv/redis_lb/run] action create (up to date)
        * directory[/opt/opscode/sv/redis_lb/log] action create (up to date)
        * directory[/opt/opscode/sv/redis_lb/log/main] action create (up to date)
        * directory[/var/log/redis_lb] action create (up to date)
        * template[/opt/opscode/sv/redis_lb/log/config] action create (up to date)
        * link[/var/log/redis_lb/config] action create (up to date)
        * template[/opt/opscode/sv/redis_lb/log/run] action create (up to date)
        * directory[/opt/opscode/sv/redis_lb/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for redis_lb service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/redis_lb/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/redis_lb/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/redis_lb/control] action create (up to date)
        * link[/opt/opscode/init/redis_lb] action create (up to date)
        * file[/opt/opscode/sv/redis_lb/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/redis_lb] action create
          - create symlink at /opt/opscode/service/redis_lb to /opt/opscode/sv/redis_lb
        * ruby_block[wait for redis_lb service socket] action run
          - execute the ruby block wait for redis_lb service socket
        - execute the ruby block restart_service
      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/sv/redis_lb] action create (up to date)
        * template[/opt/opscode/sv/redis_lb/run] action create (up to date)
        * directory[/opt/opscode/sv/redis_lb/log] action create (up to date)
        * directory[/opt/opscode/sv/redis_lb/log/main] action create (up to date)
        * directory[/var/log/redis_lb] action create (up to date)
        * template[/opt/opscode/sv/redis_lb/log/config] action create (up to date)
        * link[/var/log/redis_lb/config] action create (up to date)
        * template[/opt/opscode/sv/redis_lb/log/run] action create (up to date)
        * directory[/opt/opscode/sv/redis_lb/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for redis_lb service] action run (skipped due to only_if)
        * template[/opt/opscode/sv/redis_lb/check] action create (skipped due to only_if)
        * template[/opt/opscode/sv/redis_lb/finish] action create (skipped due to only_if)
        * directory[/opt/opscode/sv/redis_lb/control] action create (up to date)
        * link[/opt/opscode/init/redis_lb] action create (up to date)
        * file[/opt/opscode/sv/redis_lb/down] action nothing (skipped due to action :nothing)
        * directory[/opt/opscode/service] action create (up to date)
        * link[/opt/opscode/service/redis_lb] action create (up to date)
        * ruby_block[wait for redis_lb service socket] action run
          - execute the ruby block wait for redis_lb service socket
        - execute the ruby block restart_log_service
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/redis_lb] action create (up to date)
      * ruby_block[wait for redis_lb service socket] action run
        - execute the ruby block wait for redis_lb service socket


  * service[redis_lb] action nothing (skipped due to action :nothing)
  * runit_service[redis_lb] action restart (up to date)
  * template[/etc/opscode/logrotate.d/redis_lb] action create
    - create new file /etc/opscode/logrotate.d/redis_lb
    - update content in file /etc/opscode/logrotate.d/redis_lb from none to e6e69e
    --- /etc/opscode/logrotate.d/redis_lb       2025-10-05 06:15:24.875939208 +0000
    +++ /etc/opscode/logrotate.d/.chef-redis_lb20251005-1727-1ozg8b0    2025-10-05 06:15:24.875939208 +0000
    @@ -1 +1,6 @@
    +/var/log/opscode/redis_lb/*.log {
    +  rotate 10
    +  size 1000000
    +  create 644 opscode opscode
    +}
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * ruby_block[set_lb_redis_values] action runPipelining commands on a Redis instance is deprecated and will be removed in Redis 5.0.0.

redis.pipelined do
  redis.get("key")
end

should be replaced by

redis.pipelined do |pipeline|
  pipeline.get("key")
end

(called from /var/opt/opscode/local-mode-cache/cookbooks/infra-server/recipes/redis_lb.rb:129:in `block (2 levels) in from_file'}
Pipelining commands on a Redis instance is deprecated and will be removed in Redis 5.0.0.

redis.pipelined do
  redis.get("key")
end

should be replaced by

redis.pipelined do |pipeline|
  pipeline.get("key")
end

(called from /var/opt/opscode/local-mode-cache/cookbooks/infra-server/recipes/redis_lb.rb:135:in `block (2 levels) in from_file'}

    - execute the ruby block set_lb_redis_values
Recipe: infra-server::cleanup
  * component_runit_service[opscode-solr4] action disable
  Recipe: <Dynamically Defined Resource>
    * service[opscode-solr4] action nothing (skipped due to action :nothing)
    * runit_service[opscode-solr4] action disable
      * ruby_block[disable opscode-solr4] action run (skipped due to only_if)
       (up to date)
     (up to date)
Recipe: infra-server::cleanup
  * directory[/opt/opscode/sv/opscode-solr4] action delete (up to date)
  * component_runit_service[rabbitmq] action disable
  Recipe: <Dynamically Defined Resource>
    * service[rabbitmq] action nothing (skipped due to action :nothing)
    * runit_service[rabbitmq] action disable
      * ruby_block[disable rabbitmq] action run (skipped due to only_if)
       (up to date)
     (up to date)
Recipe: infra-server::cleanup
  * directory[/opt/opscode/sv/rabbitmq] action delete (up to date)
  * component_runit_service[opscode-chef-mover] action disable
  Recipe: <Dynamically Defined Resource>
    * service[opscode-chef-mover] action nothing (skipped due to action :nothing)
    * runit_service[opscode-chef-mover] action disable
      * ruby_block[disable opscode-chef-mover] action run (skipped due to only_if)
       (up to date)
     (up to date)
Recipe: infra-server::cleanup
  * directory[/opt/opscode/sv/opscode-chef-mover] action delete (up to date)
  * directory[/opt/opscode/sv/elasticsearch] action delete (up to date)
  * directory[/opt/opscode/embedded/elasticsearch] action delete (up to date)
  * directory[/opt/opscode/service/elasticsearch] action delete (up to date)
  * directory[/var/log/opscode/elasticsearch/] action delete (up to date)
Recipe: infra-server::log_version
  * file[/var/opt/opscode/chef_version_history.txt] action create_if_missing
    - create new file /var/opt/opscode/chef_version_history.txt
    - change mode from '' to '0755'
  * bash[append_to_config] action run
    - execute "bash"
Recipe: infra-server::private-chef-sh
  * template[/etc/opscode/private-chef.sh] action create
    - create new file /etc/opscode/private-chef.sh
    - update content in file /etc/opscode/private-chef.sh from none to ac5f8f
    --- /etc/opscode/private-chef.sh    2025-10-05 06:15:25.135940365 +0000
    +++ /etc/opscode/.chef-private-chef20251005-1727-3vsya8.sh  2025-10-05 06:15:25.135940365 +0000
    @@ -1 +1,8 @@
    +# Chef Infra Server shell variables for use by diagnotic scripts in
    +# /opt/opscode/bin. This file is generated based on
    +# /etc/opscode/private-chef.rb contents during chef-server-ctl reconfigure.
    +#
    +#### DO NOT EDIT! ALL EDITS WILL BE LOST ON chef-server-ctl reconfigure ####
    +
    +POSTGRESQL_UNIX_USER=opscode-pgsql
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
Recipe: infra-server::oc-chef-pedant
  * directory[/var/opt/opscode/oc-chef-pedant] action create
    - create new directory /var/opt/opscode/oc-chef-pedant
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/oc-chef-pedant/etc] action create
    - create new directory /var/opt/opscode/oc-chef-pedant/etc
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/log/opscode/oc-chef-pedant] action create
    - create new directory /var/log/opscode/oc-chef-pedant
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * template[/var/opt/opscode/oc-chef-pedant/etc/pedant_config.rb] action create
    - create new file /var/opt/opscode/oc-chef-pedant/etc/pedant_config.rb
    - update content in file /var/opt/opscode/oc-chef-pedant/etc/pedant_config.rb from none to 137666
    --- /var/opt/opscode/oc-chef-pedant/etc/pedant_config.rb    2025-10-05 06:15:25.164940494 +0000
    +++ /var/opt/opscode/oc-chef-pedant/etc/.chef-pedant_config20251005-1727-1re4xow.rb 2025-10-05 06:15:25.163940490 +0000
    @@ -1 +1,196 @@
    +# This annotated Pedant configuration file details the various
    +# configuration settings available to you.  It is separate from the
    +# actual Pedant::Config class because not all settings have sane
    +# defaults, and not all settings are appropriate in all settings.
    +
    +################################################################################
    +#
    +
    +# The base_resource_url gets set whenever we are operating behind a proxy,
    +# notably in the automate-chef-server all in one installation
    +#
    +# base_resource_url "host_header"
    +
    +# A unique identification string used to create orgs and users specific
    +# to a each single chef server's nodes' OS. Simply using "Process.pid"
    +# proved to not be unique enough when running pedant simultaneously
    +# on multiple nodes of the same chef server when the generated pedant
    +# config file could have been copied across during the setup of that
    +# chef server.
    +chef_server_uid = "ip-172-31-46-255_#{Process.pid}".downcase
    +
    +# Specify a testing organization if you are testing a multi-tenant
    +# instance of a Chef Server (e.g., Private Chef, Hosted Chef).  If you
    +# are testing a single-tenant instance (i.e. Open Source Chef Server),
    +# DO NOT include this parameter
    +#
    +# Due to how the current org cache operates, it is best to use a
    +# unique name for your testing organization. If you do not use a
    +# unique name and run tests several times (destroying the organization
    +# between runs) you will likely get inconsistent results.
    +#
    +# If you wish Pedant to create the organization for you at test time,
    +# include the `:create_me => true` pair.  If you wish to use an
    +# existing organization for tests, you should supply a `:validator_key
    +# => "/full/path/to/key.pem"` pair
    +org({:name => "pedant_testorg_#{chef_server_uid}",
    +     :create_me => true})
    +
    +validate_org_creation true
    +
    +# org({:name => "existing_org",
    +#      :validator_key => "/etc//existing_org-validator.pem"})
    +
    +# account internal URL
    +internal_account_url "http://127.0.0.1:9685"
    +
    +# If you want Pedant to delete the testing organization when it is
    +# done, use this parameter.  Note that this only has an effect if
    +# Pedant also created the testing organization.
    +delete_org true
    +
    +# You MUST specify the address of the server the API requests will be
    +# sent to.  Only specify protocol, hostname, and port.
    +chef_server "https://ip-172-31-46-255.ap-south-1.compute.internal"
    +
    +# This configration specifies the default orgname. Note that it does *not*
    +# mean that Pedant will test things with default org urls. To do that,
    +# pass --use-default-org on the command line
    +default_orgname nil
    +
    +# If you are doing development testing, you can specify the address of
    +# the Solr server.  The presence of this parameter will enable tests
    +# to force commits to Solr, greatly decreasing the amout of time
    +# needed for testing the search endpoint.  This is only an
    +# optimization for development!  If you are testing a "live" Chef
    +# Server, or otherwise do not have access to the Solr server from your
    +# testing location, you should not specify a value for this parameter.
    +# The tests will still run, albeit slower, as they will now need to
    +# poll for a period to ensure they are querying committed results.
    +search_server "http://127.0.0.1:9200"
    +
    +search_commit_url "/_refresh"
    +search_url_fmt "/chef/_search?q=X_CHEF_type_CHEF_X:%{type}%%20%{query}"
    +
    +search_provider "opensearch"
    +search_auth_username "opensearch_user"
    +search_auth_password "e6ae6a61d7a57099d1d7961080a89cd5"
    +
    +# Some tests expect access erchef server directly, instead of routing through
    +# LB.
    +#
    +internal_server "http://127.0.0.1:8000"
    +
    +
    +# Related to the 'search_server' parameter, this specifies the maximum
    +# amout of time (in seconds) that search endpoint requests should be
    +# retried before giving up.  If not explicitly set, it will default to
    +# 65 seconds; only set it if you know that your Solr commit interval
    +# differs significantly from this.
    +maximum_search_time 65
    +
    +# We're starting to break tests up into groups based on different
    +# criteria.  The proper API tests (the results of which are viewable
    +# to OPC customers) should be the only ones run by Pedant embedded in
    +# OPC installs.  There are other specs that help us keep track of API
    +# cruft that we want to come back and fix later; these shouldn't be
    +# viewable to customers, but we should be able to run them in
    +# development and CI environments.  If this parameter is missing or
    +# explicitly `false` only the customer-friendly tests will be run.
    +#
    +# This is mainly here for documentation purposes, since the
    +# command-line `oc-chef-pedant` utility ultimately determines this
    +# value.
    +include_internal false
    +
    +# SSL protocol version to use for secure communications
    +# with the load balancer
    +ssl_version :TLSv1_2
    +
    +# Test users.  The five users specified below are required; their
    +# names (:user, :non_org_user, etc.) are indicative of their role
    +# within the tests.  All users must have a ':name' key.  If they have
    +# a ':create_me' key, Pedant will create these users for you.  If you
    +# are using pre-existing users, you must supply a ':key_file' key,
    +# which should be the fully-qualified path /on the machine Pedant is
    +# running on/ to a private key for that user.
    +
    +superuser_name 'pivotal'
    +
    +requestors({
    +             :clients => {
    +               :admin => {
    +                 :name => "pedant_admin_client_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :create_knife => true,
    +                 :admin => true
    +               },
    +               :non_admin => {
    +                 :name => "pedant_client_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :create_knife => true,
    +               },
    +               :bad => {
    +                 :name => "bad_client_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :bogus => true
    +               }
    +             },
    +
    +             :users => {
    +               # An administrator in the testing organization
    +               :admin => {
    +                 :name => "pedant_admin_user_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :create_knife => true,
    +                 :admin => true
    +               },
    +
    +               :non_admin => {
    +                 :name => "pedant_user_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :create_knife => true,
    +                 :admin => false
    +               },
    +
    +               # A user that is not a member of the testing organization
    +               :bad => {
    +                 :name => "pedant_nobody_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :create_knife => true,
    +                 :associate => false
    +               },
    +             }
    +           })
    +
    +# To facilitate testing, we have added a org creation validation tests.
    +# These tests run before the main Pedant tests, so their output has been
    +# suppressed. To make it easier to debug org creation, you can turn this
    +# on and get the full output
    +debug_org_creation false
    +
    +# The behavior of these features depends on erchef configuration
    +search_acls?               false
    +
    +old_runlists_and_search true
    +
    +# Default server api version for all requests that don't specify it.
    +server_api_version         0
    +
    +
    +# Enable/Disable tests if the required_recipe endpoint is turned on
    +required_recipe_enabled false
    +
    +# Log HTTP Requests
    +log_file "/var/log/opscode/oc-chef-pedant/http-traffic.log"
    +
    +reindex_endpoint "https://127.0.0.1"
    +
    +chef_pgsql_collector true
    +
    +topology "standalone"
    +role "standalone"
    +
    +include_version_in_status false
    +include_x_ops_api_info false
    - change mode from '' to '0755'
    - change owner from '' to 'root'
    - change group from '' to 'root'
Recipe: infra-server::log_cleanup
  * template[/etc/opscode/logrotate.conf] action create
    - create new file /etc/opscode/logrotate.conf
    - update content in file /etc/opscode/logrotate.conf from none to 134283
    --- /etc/opscode/logrotate.conf     2025-10-05 06:15:25.190940610 +0000
    +++ /etc/opscode/.chef-logrotate20251005-1727-5s2ero.conf   2025-10-05 06:15:25.190940610 +0000
    @@ -1 +1,5 @@
    +missingok
    +compress
    +notifempty
    +include /etc/opscode/logrotate.d
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * template[/etc/cron.hourly/opc_logrotate] action create
    - create new file /etc/cron.hourly/opc_logrotate
    - update content in file /etc/cron.hourly/opc_logrotate from none to 3cb1bc
    --- /etc/cron.hourly/opc_logrotate  2025-10-05 06:15:25.208940691 +0000
    +++ /etc/cron.hourly/.chef-opc_logrotate20251005-1727-mboexm        2025-10-05 06:15:25.208940691 +0000
    @@ -1 +1,7 @@
    +#!/bin/sh
    +
    +PATH=/opt/opscode/embedded/sbin:$PATH
    +
    +command -v logrotate >/dev/null 2>&1 || exit 0
    +nice -n 19 ionice -c3 logrotate -s /var/log/opscode/logrotate.status /etc/opscode/logrotate.conf
    - change mode from '' to '0755'
    - change owner from '' to 'root'
    - change group from '' to 'root'
Recipe: infra-server::partybus
  * directory[/var/opt/opscode/upgrades] action create
    - create new directory /var/opt/opscode/upgrades
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/var/opt/opscode/upgrades/etc] action create
    - create new directory /var/opt/opscode/upgrades/etc
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * directory[/opt/opscode/embedded/service/partybus] action create
    - change mode from '0755' to '0750'
    - change owner from 'root' to 'opscode'
    - change group from 'root' to 'opscode'
  * template[/var/opt/opscode/upgrades/etc/config.rb] action create
    - create new file /var/opt/opscode/upgrades/etc/config.rb
    - update content in file /var/opt/opscode/upgrades/etc/config.rb from none to 87e48e
    --- /var/opt/opscode/upgrades/etc/config.rb 2025-10-05 06:15:25.238940825 +0000
    +++ /var/opt/opscode/upgrades/etc/.chef-config20251005-1727-1qct9eg.rb      2025-10-05 06:15:25.237940821 +0000
    @@ -1 +1,10 @@
    +Partybus.configure do |c|
    +  c.partybus_migration_directory  = "/opt/#{ChefUtils::Dist::Org::LEGACY_CONF_DIR}/embedded/upgrades"
    +  c.migration_state_file          = "/var/opt/#{ChefUtils::Dist::Org::LEGACY_CONF_DIR}/upgrades/migration-level"
    +  c.private_chef_role             = "standalone"
    +  c.database_service_name         = "postgres"
    +  c.is_data_master                = true
    +  c.bootstrap_server              = true
    +  c.couchdb_data_dir              = "/var/opt/opscode/couchdb/db"
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
  * link[/opt/opscode/embedded/service/partybus/config.rb] action create
    - create symlink at /opt/opscode/embedded/service/partybus/config.rb to /var/opt/opscode/upgrades/etc/config.rb
  * execute[set initial migration level] action nothing (skipped due to action :nothing)
  * ruby_block[migration-level file check] action nothing (skipped due to action :nothing)
Recipe: infra-server::ctl_config
  * template[/etc/opscode/pivotal.rb] action create
    - create new file /etc/opscode/pivotal.rb
    - update content in file /etc/opscode/pivotal.rb from none to 8f0da2
    --- /etc/opscode/pivotal.rb 2025-10-05 06:15:25.261940928 +0000
    +++ /etc/opscode/.chef-pivotal20251005-1727-2kqbw9.rb       2025-10-05 06:15:25.261940928 +0000
    @@ -1 +1,27 @@
    +require "tempfile"
    +require "veil"
    +require 'chef-utils/dist'
    +
    +secrets_file = ENV['SECRETS_FILE'] || "/etc/#{ChefUtils::Dist::Org::LEGACY_CONF_DIR}/private-#{ChefUtils::Dist::Infra::SHORT}-secrets.json"
    +credentials = Veil::CredentialCollection::ChefSecretsFile.from_file(secrets_file)
    +
    +key = Tempfile.new("latovip")
    +key.puts credentials.get("chef-server", "superuser_key")
    +key.flush
    +key.close
    +
    +node_name "pivotal"
    +chef_server_url "https://127.0.0.1:443"
    +chef_server_root "https://127.0.0.1:443"
    +no_proxy "127.0.0.1"
    +client_key key.path
    +
    +ssl_verify_mode :verify_none
    +
    +at_exit do
    +  # By holding onto key to reference it in at_exit,
    +  # we ensure that it won't be GC'd and unlinked before
    +  # knife is done with it.
    +  key.unlink
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
Recipe: infra-server::default
  * file[/etc/opscode/chef-server-running.json] action create
    - create new file /etc/opscode/chef-server-running.json
    - update content in file /etc/opscode/chef-server-running.json from none to 88d99d
    --- /etc/opscode/chef-server-running.json   2025-10-05 06:15:25.279941008 +0000
    +++ /etc/opscode/.chef-chef-server-running20251005-1727-1ay3amm.json        2025-10-05 06:15:25.279941008 +0000
    @@ -1 +1,633 @@
    +{
    +  "private_chef": {
    +    "removed_services": [
    +      "opscode-webui",
    +      "opscode-solr",
    +      "couchdb",
    +      "opscode-account",
    +      "opscode-org-creator",
    +      "opscode-certificate",
    +      "opscode-chef-mover"
    +    ],
    +    "api_version": "12.0.0",
    +    "flavor": "cs",
    +    "install_path": "/opt/opscode",
    +    "notification_email": "pc-default@chef.io",
    +    "from_email": "\"Opscode\" <donotreply@chef.io>",
    +    "role": "standalone",
    +    "license": {
    +      "nodes": 25,
    +      "upgrade_url": "https://www.chef.io/pricing"
    +    },
    +    "default_orgname": null,
    +    "fips_enabled": false,
    +    "required_recipe": {
    +      "enable": false,
    +      "path": null
    +    },
    +    "sysvinit_id": "SV",
    +    "addons": {
    +      "install": false,
    +      "path": null,
    +      "packages": [
    +        "opscode-reporting",
    +        "opscode-manage",
    +        "opscode-push-jobs-server"
    +      ],
    +      "ubuntu_supported_codenames": [
    +        "lucid",
    +        "precise",
    +        "trusty"
    +      ],
    +      "ubuntu_distribution": "lucid"
    +    },
    +    "user": {
    +      "username": "opscode",
    +      "shell": "/usr/sbin/nologin",
    +      "home": "/opt/opscode/embedded"
    +    },
    +    "service_dir_perms": "0750",
    +    "couchdb": {
    +      "data_dir": "/var/opt/opscode/couchdb/db",
    +      "vip": "127.0.0.1",
    +      "port": 5984
    +    },
    +    "opscode-solr": {
    +      "data_dir": "/var/opt/opscode/opscode-solr/data"
    +    },
    +    "rabbitmq": {
    +      "dir": "/var/opt/opscode/rabbitmq",
    +      "data_dir": "/var/opt/opscode/rabbitmq/db",
    +      "log_directory": "/var/opt/opscode/rabbitmq"
    +    },
    +    "opscode-solr4": {
    +      "dir": "/var/opt/opscode/opscode-solr4",
    +      "data_dir": "/var/opt/opscode/opscode-solr4/data",
    +      "log_directory": "/var/opt/opscode/opscode-solr4",
    +      "external": false,
    +      "external_url": null,
    +      "heap_size": null,
    +      "log_rotation": {
    +
    +      }
    +    },
    +    "opscode-expander": {
    +      "dir": "/var/opt/opscode/opscode-expander",
    +      "log_directory": "/var/opt/opscode/opscode-expander"
    +    },
    +    "server-api-version": 0,
    +    "haproxy": {
    +      "enable": true,
    +      "dir": "/var/opt/opscode/haproxy",
    +      "log_directory": "/var/opt/opscode/haproxy",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "listen": "0.0.0.0",
    +      "local_postgresql_port": 5432,
    +      "remote_postgresql_port": 5432,
    +      "local_elasticsearch_port": 9200,
    +      "remote_elasticsearch_port": 9200,
    +      "leaderl_healthcheck_port": 7331,
    +      "etcd_port": 2379
    +    },
    +    "elasticsearch": {
    +      "enable": false,
    +      "dir": "/var/opt/opscode/elasticsearch",
    +      "data_dir": "/var/opt/opscode/elasticsearch/data",
    +      "plugins_directory": "/var/opt/opscode/elasticsearch/plugins",
    +      "scripts_directory": "/var/opt/opscode/elasticsearch/scripts",
    +      "temp_directory": "/var/opt/opscode/elasticsearch/tmp",
    +      "log_directory": "/var/log/opscode/elasticsearch",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "vip": "127.0.0.1",
    +      "listen": "127.0.0.1",
    +      "port": 9200,
    +      "enable_gc_log": false,
    +      "initial_cluster_join_timeout": 90,
    +      "shard_count": 5,
    +      "replica_count": 1,
    +      "jvm_opts": [
    +
    +      ],
    +      "heap_size": 1024,
    +      "new_size": 64
    +    },
    +    "opensearch": {
    +      "external": null,
    +      "external_url": null,
    +      "shard_count": 5,
    +      "replica_count": 1,
    +      "jvm_opts": [
    +
    +      ],
    +      "heap_size": 1024,
    +      "new_size": 64,
    +      "enable": true,
    +      "dir": "/var/opt/opscode/opensearch",
    +      "data_dir": "/var/opt/opscode/opensearch/data",
    +      "plugins_directory": "/var/opt/opscode/opensearch/plugins",
    +      "scripts_directory": "/var/opt/opscode/opensearch/scripts",
    +      "temp_directory": "/var/opt/opscode/opensearch/tmp",
    +      "log_directory": "/var/log/opscode/opensearch",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "vip": "127.0.0.1",
    +      "listen": "127.0.0.1",
    +      "port": 9200,
    +      "enable_gc_log": false,
    +      "initial_cluster_join_timeout": 90,
    +      "cluster_name": "ChefInfraServer-d1104f25"
    +    },
    +    "opscode-erchef": {
    +      "enable": true,
    +      "dir": "/var/opt/opscode/opscode-erchef",
    +      "memory_maxbytes": null,
    +      "log_directory": "/var/log/opscode/opscode-erchef",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10,
    +        "max_messages_per_second": 1000
    +      },
    +      "vip": "127.0.0.1",
    +      "listen": "127.0.0.1",
    +      "port": 8000,
    +      "auth_skew": "900",
    +      "authz_pooler_timeout": "0",
    +      "bulk_fetch_batch_size": "5",
    +      "udp_socket_pool_size": null,
    +      "sql_user": "opscode_chef",
    +      "sql_ro_user": "opscode_chef_ro",
    +      "sql_connection_user": null,
    +      "enable_request_logging": true,
    +      "allow_email_update_only_from_manage": false,
    +      "reindex_batch_size": 10,
    +      "reindex_sleep_min_ms": 500,
    +      "reindex_sleep_max_ms": 2000,
    +      "reindex_item_retries": 3,
    +      "db_pool_size": 20,
    +      "db_pool_max": null,
    +      "db_pool_init": null,
    +      "db_pool_queue_max": 20,
    +      "db_pooler_timeout": 2000,
    +      "sql_db_timeout": 5000,
    +      "depsolver_pooler_timeout": "0",
    +      "depsolver_pool_queue_max": "50",
    +      "depsolver_worker_count": 5,
    +      "depsolver_timeout": 5000,
    +      "ibrowse_max_sessions": 256,
    +      "ibrowse_max_pipeline_size": 1,
    +      "enable_ibrowse_traces": false,
    +      "search_provider": "opensearch",
    +      "search_queue_mode": "batch",
    +      "search_batch_max_size": "5000000",
    +      "search_batch_max_wait": "10",
    +      "search_auth_username": "opensearch_user",
    +      "solr_timeout": 30000,
    +      "solr_http_init_count": 25,
    +      "solr_http_max_count": 100,
    +      "solr_http_cull_interval": "{1, min}",
    +      "solr_http_max_age": "{70, sec}",
    +      "solr_http_max_connection_duration": "{70,sec}",
    +      "solr_retry_on_conn_closed": true,
    +      "solr_ibrowse_options": "[{connect_timeout, 10000}]",
    +      "base_resource_url": "host_header",
    +      "s3_bucket": "bookshelf",
    +      "s3_url_ttl": 28800,
    +      "nginx_bookshelf_caching": "off",
    +      "s3_url_expiry_window_size": "off",
    +      "s3_parallel_ops_timeout": 5000,
    +      "s3_parallel_ops_fanout": 20,
    +      "authz_timeout": 2000,
    +      "authz_fanout": 20,
    +      "root_metric_key": "chefAPI",
    +      "max_request_size": 2000000,
    +      "cleanup_batch_size": 0,
    +      "keygen_cache_size": 10,
    +      "keygen_start_size": 0,
    +      "keygen_cache_workers": "auto",
    +      "keygen_timeout": 1000,
    +      "keygen_key_size": 2048,
    +      "strict_search_result_acls": false,
    +      "ssl_session_caching": {
    +        "enabled": false
    +      },
    +      "include_x_ops_api_info": false,
    +      "cbv_cache_enabled": false,
    +      "cbv_cache_item_ttl": 30000,
    +      "health_ping_timeout": 400,
    +      "include_version_in_status": false,
    +      "stats_auth_enable": true,
    +      "stats_user": "statsuser",
    +      "stats_password_file": "/var/opt/opscode/nginx/stats_htpasswd",
    +      "sql_password": "d2ca30b1fcd2274d57aab2983cdceed744b6a5ce7697767a051a5fae6686",
    +      "sql_ro_password": "6bd5e79966a9e2239b5d9b4ade06a60297c8784ebb589e9d53aade412a07",
    +      "stats_password": "7277bb7aa75f1862759c3a0e81a20b64b323759498635e51e9b99ba39f7fc58ecb4bf7bff4faab8bdd3587b45936d0e695e9",
    +      "search_auth_password": "e6ae6a61d7a57099d1d7961080a89cd5"
    +    },
    +    "opscode-chef": {
    +      "checksum_path": "/var/opt/opscode/opscode-chef/checksum"
    +    },
    +    "opscode-webui": {
    +      "enable": false
    +    },
    +    "oc-chef-pedant": {
    +      "dir": "/var/opt/opscode/oc-chef-pedant",
    +      "log_directory": "/var/log/opscode/oc-chef-pedant",
    +      "log_http_requests": true,
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "debug_org_creation": false,
    +      "chef_server": null
    +    },
    +    "redis_lb": {
    +      "enable": true,
    +      "dir": "/var/opt/opscode/redis_lb",
    +      "data_dir": "/var/opt/opscode/redis_lb/data",
    +      "log_directory": "/var/log/opscode/redis_lb",
    +      "log_rotation": {
    +        "file_maxbytes": 1000000,
    +        "num_to_keep": 10
    +      },
    +      "port": "16379",
    +      "bind": "127.0.0.1",
    +      "vip": "127.0.0.1",
    +      "keepalive": "60",
    +      "timeout": "300",
    +      "loglevel": "notice",
    +      "databases": "16",
    +      "appendonly": "no",
    +      "appendfsync": "always",
    +      "activerehashing": "no",
    +      "aof_rewrite_percent": "50",
    +      "aof_rewrite_min_size": "16mb",
    +      "maxmemory": "8m",
    +      "maxmemory_policy": "noeviction",
    +      "save_frequency": {
    +        "900": "1",
    +        "300": "10",
    +        "60": "1000"
    +      },
    +      "password": "ebc28ea0e1dd4c968881dd15646f70f6e27f38b584874abd2b47fa4766576c7e1c50b73fa3146afc91b3a7e435ce132a1152"
    +    },
    +    "lb": {
    +      "enable": true,
    +      "vip": "127.0.0.1",
    +      "api_fqdn": "ip-172-31-46-255.ap-south-1.compute.internal",
    +      "web_ui_fqdn": "ip-172-31-46-255.ap-south-1.compute.internal",
    +      "debug": false,
    +      "upstream": {
    +        "opscode-erchef": [
    +          "127.0.0.1"
    +        ],
    +        "oc_bifrost": [
    +          "127.0.0.1"
    +        ],
    +        "bookshelf": [
    +          "127.0.0.1"
    +        ]
    +      },
    +      "redis_connection_timeout": 1000,
    +      "redis_keepalive_timeout": 2000,
    +      "redis_connection_pool_size": 250,
    +      "maint_refresh_interval": 600,
    +      "ban_refresh_interval": 600,
    +      "chef_min_version": 10,
    +      "access_by_lua_file": false,
    +      "xdl_defaults": {
    +        "503_mode": false,
    +        "couchdb_containers": false,
    +        "couchdb_groups": false,
    +        "couchdb_acls": false,
    +        "couchdb_association_requests": false,
    +        "couchdb_organizations": false,
    +        "couchdb_associations": false
    +      },
    +      "xmaint_allowed_ips_list": [
    +        "127.0.0.1"
    +      ]
    +    },
    +    "lb_internal": {
    +      "enable": true,
    +      "vip": "127.0.0.1",
    +      "chef_port": 9680,
    +      "account_port": 9685
    +    },
    +    "nginx": {
    +      "enable": true,
    +      "dir": "/var/opt/opscode/nginx",
    +      "log_directory": "/var/log/opscode/nginx",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "log_x_forwarded_for": false,
    +      "time_format": "time_iso8601",
    +      "ssl_port": 443,
    +      "enable_non_ssl": false,
    +      "non_ssl_port": 80,
    +      "x_forwarded_proto": "https",
    +      "server_name": "ip-172-31-46-255.ap-south-1.compute.internal",
    +      "url": "https://ip-172-31-46-255.ap-south-1.compute.internal",
    +      "proxy_connect_timeout": 1,
    +      "enable_stub_status": true,
    +      "stub_status": {
    +        "listen_host": "127.0.0.1",
    +        "listen_port": "9999",
    +        "location": "/nginx_status",
    +        "allow_list": [
    +          "127.0.0.1"
    +        ]
    +      },
    +      "ssl_protocols": "TLSv1.2",
    +      "ssl_ciphers": "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES:!aNULL:!eNULL:!EXPORT",
    +      "ssl_certificate": "/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.crt",
    +      "ssl_certificate_key": "/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.key",
    +      "ssl_dhparam": "/var/opt/opscode/nginx/ca/dhparams.pem",
    +      "ssl_country_name": "US",
    +      "ssl_company_name": "YouCorp",
    +      "ssl_organizational_unit_name": "Operations",
    +      "ssl_key_length": 2048,
    +      "ssl_duration": 3650,
    +      "hsts_max_age": 31536000,
    +      "dhparam_key_length": 2048,
    +      "dhparam_generator_id": 2,
    +      "worker_processes": 2,
    +      "worker_connections": 10240,
    +      "sendfile": "on",
    +      "tcp_nopush": "on",
    +      "tcp_nodelay": "on",
    +      "gzip": "on",
    +      "gzip_http_version": "1.0",
    +      "gzip_comp_level": "2",
    +      "gzip_proxied": "any",
    +      "gzip_types": [
    +        "text/plain",
    +        "text/css",
    +        "application/x-javascript",
    +        "text/xml",
    +        "application/xml",
    +        "application/xml+rss",
    +        "text/javascript",
    +        "application/json"
    +      ],
    +      "keepalive_timeout": 65,
    +      "client_max_body_size": "250m",
    +      "cache_max_size": "5000m",
    +      "server_names_hash_bucket_size": 128,
    +      "enable_ipv6": false,
    +      "strict_host_header": false,
    +      "use_implicit_hosts": false,
    +      "show_welcome_page": true,
    +      "ssl_client_ca": false,
    +      "pivotal_ssl_client_cert": false,
    +      "pivotal_ssl_client_key": false,
    +      "ssl_verify_depth": 2,
    +      "nginx_no_root": false
    +    },
    +    "postgresql": {
    +      "version": "13",
    +      "enable": true,
    +      "external": false,
    +      "dir": "/var/opt/opscode/postgresql/13",
    +      "data_dir": "/var/opt/opscode/postgresql/13/data",
    +      "log_directory": "/var/log/opscode/postgresql/13",
    +      "log_min_duration_statement": -1,
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "username": "opscode-pgsql",
    +      "db_superuser": "opscode-pgsql",
    +      "db_connection_superuser": null,
    +      "shell": "/bin/sh",
    +      "home": "/var/opt/opscode/postgresql",
    +      "user_path": "/opt/opscode/embedded/bin:/opt/opscode/bin:$PATH",
    +      "vip": "127.0.0.1",
    +      "port": 5432,
    +      "listen_address": "127.0.0.1,::1",
    +      "max_connections": 350,
    +      "keepalives_idle": 60,
    +      "keepalives_interval": 15,
    +      "keepalives_count": 2,
    +      "md5_auth_cidr_addresses": [
    +        "127.0.0.1/32",
    +        "::1/128"
    +      ],
    +      "wal_level": "minimal",
    +      "archive_mode": "off",
    +      "archive_command": "",
    +      "archive_timeout": 0,
    +      "sslmode": "disable",
    +      "shared_buffers": "978MB",
    +      "work_mem": "8MB",
    +      "effective_cache_size": "1956MB",
    +      "max_wal_size": "1GB",
    +      "min_wal_size": "80MB",
    +      "checkpoint_timeout": "5min",
    +      "checkpoint_completion_target": 0.5,
    +      "checkpoint_flush_after": "256kB",
    +      "checkpoint_warning": "30s",
    +      "pg_upgrade_timeout": 7200,
    +      "db_superuser_password": "bc1827275853ceff7b1370b96c10562db327e34aef0668b84a98faeacc0d47f9069a688ab932dd2c3e22033d799fa81c510e"
    +    },
    +    "oc_bifrost": {
    +      "enable": true,
    +      "dir": "/var/opt/opscode/oc_bifrost",
    +      "log_directory": "/var/log/opscode/oc_bifrost",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10,
    +        "max_messages_per_second": 1000
    +      },
    +      "vip": "127.0.0.1",
    +      "listen": "127.0.0.1",
    +      "port": 9463,
    +      "db_pool_size": "20",
    +      "db_pool_max": null,
    +      "db_pool_init": null,
    +      "db_pooler_timeout": 2000,
    +      "db_pool_queue_max": 20,
    +      "udp_socket_pool_size": null,
    +      "sql_user": "bifrost",
    +      "sql_ro_user": "bifrost_ro",
    +      "sql_connection_user": null,
    +      "sql_db_timeout": 5000,
    +      "extended_perf_log": true,
    +      "enable_request_logging": true,
    +      "superuser_id": "05e729dceeddf79053946d815fdf023a",
    +      "sql_password": "11ded75929918e5e92fd896e0fab3cc9d808f614f3f5aad431235efbc4b3c936513211bc9a4dc2b255c3d1d65374a3417e19",
    +      "sql_ro_password": "76b01eba7fbcc9f72d8a1bcee8684f7ba60599847c66af3363cc22626b96ac32d5eb7c925e2f039b4675d63a3fbded1a74ea"
    +    },
    +    "oc_chef_authz": {
    +      "http_init_count": 25,
    +      "http_max_count": 100,
    +      "http_queue_max": 50,
    +      "http_cull_interval": "{1, min}",
    +      "http_max_age": "{70, sec}",
    +      "http_max_connection_duration": "{70, sec}",
    +      "http_retry_on_conn_closed": true,
    +      "ibrowse_options": "[{connect_timeout, 5000}]",
    +      "max_connection_request_limit": 100
    +    },
    +    "bookshelf": {
    +      "enable": true,
    +      "dir": "/var/opt/opscode/bookshelf",
    +      "data_dir": "/var/opt/opscode/bookshelf/data",
    +      "log_directory": "/var/log/opscode/bookshelf",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "vip": "ip-172-31-46-255.ap-south-1.compute.internal",
    +      "vip_port": 443,
    +      "listen": "127.0.0.1",
    +      "port": 4321,
    +      "stream_download": true,
    +      "external_url": "host_header",
    +      "storage_type": "filesystem",
    +      "sql_retry_count": 0,
    +      "sql_retry_delay": 10,
    +      "abandoned_upload_cleanup_interval": 1140000,
    +      "deleted_data_cleanup_interval": 420000,
    +      "db_pool_size": 20,
    +      "db_pool_max": null,
    +      "db_pool_init": null,
    +      "db_pool_queue_max": 200,
    +      "db_pooler_timeout": 2000,
    +      "sql_db_timeout": 5000,
    +      "sql_ro_user": "bookshelf_ro",
    +      "sql_user": "bookshelf",
    +      "sql_connection_user": null,
    +      "enable_request_logging": false,
    +      "access_key_id": "96ed88420147c27a3ed92989360b794b739a6fc7",
    +      "secret_access_key": "499b12b3da2f9800c61a1dd60fa040697e9fb03d1d196d64669f8240b5f86f1f704c3e466853e6d3",
    +      "sql_password": "a58e57400e5702e00a1f73f844721aac83d03c3837e3c007c829e23b056802e7b8a2d4793d4e8bce",
    +      "sql_ro_password": "cd7ecba3d7ea0c252c8357da0a8aa134270cc2be36a3ea1fa1305d1668ea5b48a9cd2a43e118ee86"
    +    },
    +    "oc_id": {
    +      "enable": true,
    +      "dir": "/var/opt/opscode/oc_id",
    +      "log_directory": "/var/log/opscode/oc_id",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "vip": "127.0.0.1",
    +      "port": 9090,
    +      "sql_database": "oc_id",
    +      "sql_user": "oc_id",
    +      "sql_ro_user": "oc_id_ro",
    +      "sql_connection_user": null,
    +      "db_pool_size": "20",
    +      "sentry_dsn": null,
    +      "sign_up_url": null,
    +      "email_from_address": "\"Opscode\" <donotreply@chef.io>",
    +      "origin": null,
    +      "administrators": [
    +
    +      ],
    +      "applications": {
    +
    +      },
    +      "secret_key_base": "a4ec8a04bbb7865e28b19b32be4539a9650b08c80ffe6601b42e057178f0ff46beb18aa1ed198f2ceb0bf898990c95459dcd",
    +      "sql_password": "b50b3cd9e4ef4b3560249f76bfa27746a35820d6b39b048bed3b8b9555e3ab0662ae3a8c5d4ba2542b1e285ed274670d2c09",
    +      "sql_ro_password": "16257e79e798d70593f027ec9e5b55127400d23000a02518c2605fd47918a29a110350d824b1a5019b7d602e7c96dd541f60"
    +    },
    +    "dark_launch": {
    +      "quick_start": false,
    +      "new_theme": true,
    +      "private-chef": true,
    +      "sql_users": true,
    +      "add_type_and_bag_to_items": true,
    +      "reporting": true
    +    },
    +    "bootstrap": {
    +      "enable": true
    +    },
    +    "estatsd": {
    +      "enable": true,
    +      "dir": "/var/opt/opscode/estatsd",
    +      "log_directory": "/var/log/opscode/estatsd",
    +      "vip": "127.0.0.1",
    +      "port": 9466,
    +      "protocol": "estatsd"
    +    },
    +    "ldap": {
    +
    +    },
    +    "upgrades": {
    +      "dir": "/var/opt/opscode/upgrades"
    +    },
    +    "folsom_graphite": {
    +      "enabled": false,
    +      "host": "localhost",
    +      "port": 8080,
    +      "prefix": "stats_prefix",
    +      "send_interval": 10000,
    +      "retry_interval": 2000
    +    },
    +    "data_collector": {
    +      "timeout": 30000,
    +      "http_init_count": 25,
    +      "http_max_count": 100,
    +      "http_max_age": "{70, sec}",
    +      "http_cull_interval": "{1, min}",
    +      "http_max_connection_duration": "{70,sec}",
    +      "http_retry_on_conn_closed": true,
    +      "ibrowse_options": "[{connect_timeout, 10000}]",
    +      "health_check": true
    +    },
    +    "profiles": {
    +
    +    },
    +    "folsom-graphite": {
    +
    +    },
    +    "lb-internal": {
    +
    +    },
    +    "use_chef_backend": false,
    +    "chef_backend_members": [
    +
    +    ],
    +    "backup": {
    +      "strategy": "tar"
    +    },
    +    "topology": "standalone",
    +    "servers": {
    +
    +    },
    +    "backend_vips": {
    +
    +    },
    +    "logs": {
    +      "log_retention": {
    +
    +      }
    +    },
    +    "insecure_addon_compat": true
    +  },
    +  "run_list": [
    +  "recipe[infra-server::default]"
    +]
    +,
    +  "runit": {
    +    "prefer_local_yum": false,
    +    "sv_bin": "/opt/opscode/embedded/bin/sv",
    +    "svlogd_bin": "/opt/opscode/embedded/bin/svlogd",
    +    "chpst_bin": "/opt/opscode/embedded/bin/chpst",
    +    "service_dir": "/opt/opscode/service",
    +    "sv_dir": "/opt/opscode/sv",
    +    "lsb_init_dir": "/opt/opscode/init"
    +  }
    +}
    - change mode from '' to '0600'
    - change owner from '' to 'opscode'
    - change group from '' to 'root'
  * ruby_block[print reconfigure warnings] action run
    - execute the ruby block print reconfigure warnings
Recipe: infra-server::postgresql
  * component_runit_service[postgresql] action restart
  Recipe: <Dynamically Defined Resource>
    * service[postgresql] action nothing (skipped due to action :nothing)
    * runit_service[postgresql] action restart (up to date)
     (up to date)
Recipe: infra-server::oc_bifrost
  * component_runit_service[oc_bifrost] action restart
  Recipe: <Dynamically Defined Resource>
    * service[oc_bifrost] action nothing (skipped due to action :nothing)
    * runit_service[oc_bifrost] action restart (up to date)
     (up to date)
Recipe: infra-server::oc_id
  * component_runit_service[oc_id] action restart
  Recipe: <Dynamically Defined Resource>
    * service[oc_id] action nothing (skipped due to action :nothing)
    * runit_service[oc_id] action restart (up to date)
     (up to date)
Recipe: infra-server::nginx
  * component_runit_service[nginx] action restart
  Recipe: <Dynamically Defined Resource>
    * service[nginx] action nothing (skipped due to action :nothing)
    * runit_service[nginx] action restart (up to date)
     (up to date)
Recipe: infra-server::opensearch
  * component_runit_service[opensearch] action restart
  Recipe: <Dynamically Defined Resource>
    * service[opensearch] action nothing (skipped due to action :nothing)
    * runit_service[opensearch] action restart (up to date)
     (up to date)
Recipe: infra-server::bookshelf
  * component_runit_service[bookshelf] action restart
  Recipe: <Dynamically Defined Resource>
    * service[bookshelf] action nothing (skipped due to action :nothing)
    * runit_service[bookshelf] action restart (up to date)
     (up to date)
Recipe: infra-server::opscode-erchef
  * component_runit_service[opscode-erchef] action restart
  Recipe: <Dynamically Defined Resource>
    * service[opscode-erchef] action nothing (skipped due to action :nothing)
    * runit_service[opscode-erchef] action restart (up to date)
     (up to date)
Recipe: infra-server::partybus
  * execute[set initial migration level] action run
    - execute cd /opt/opscode/embedded/service/partybus && ./bin/partybus init
  * ruby_block[migration-level file check] action run (skipped due to not_if)
Recipe: infra-server::redis_lb
  * runit_service[redis_lb] action reload_log
    - reload log service

Running handlers:
Running handlers complete
Chef Infra Client finished, 407/861 resources updated in 02 minutes 58 seconds
Chef Infra Server Reconfigured!
root@ip-172-31-46-255:/home/ubuntu# apt update -y
Hit:1 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Get:2 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
Hit:3 http://ap-south-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease
Hit:4 http://security.ubuntu.com/ubuntu noble-security InRelease
Fetched 126 kB in 1s (202 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
41 packages can be upgraded. Run 'apt list --upgradable' to see them.
root@ip-172-31-46-255:/home/ubuntu# sudo chef-server-ctl status
run: bookshelf: (pid 20784) 177s; run: log: (pid 20262) 221s
run: nginx: (pid 20717) 178s; run: log: (pid 20504) 185s
run: oc_bifrost: (pid 20555) 179s; run: log: (pid 19708) 283s
run: oc_id: (pid 20714) 178s; run: log: (pid 19734) 273s
run: opensearch: (pid 20740) 177s; run: log: (pid 19931) 266s
run: opscode-erchef: (pid 20873) 176s; run: log: (pid 20456) 214s
run: postgresql: (pid 20536) 179s; run: log: (pid 19158) 296s
run: redis_lb: (pid 20562) 179s; run: log: (pid 21068) 176s
root@ip-172-31-46-255:/home/ubuntu# sudo chef-server-ctl install chef-manage
Type application/netcdf is already registered as a variant of application/netcdf.
Starting Chef Infra Client, version 16.17.51
Patents: https://www.chef.io/patents
resolving cookbooks for run list: ["infra-server::add_ons_wrapper"]
Synchronizing Cookbooks:
  - runit (5.1.7)
  - infra-server (0.1.2)
  - packagecloud (1.0.1)
  - enterprise (1.2.0)
  - yum-epel (4.5.0)
Installing Cookbook Gems:
Compiling Cookbooks...
Converging 4 resources
Recipe: infra-server::add_ons_wrapper
  * ruby_block[addon_install_notification_chef-manage] action nothing (skipped due to action :nothing)
  * remote_file[/var/opt/opscode/local-mode-cache/chef-manage_3.3.97-1_amd64.deb] action create
    - create new file /var/opt/opscode/local-mode-cache/chef-manage_3.3.97-1_amd64.deb
    - update content in file /var/opt/opscode/local-mode-cache/chef-manage_3.3.97-1_amd64.deb from none to 41d602
    (file sizes exceed 10000000 bytes, diff output suppressed)
  * ruby_block[locate_addon_package_chef-manage] action run
    - execute the ruby block locate_addon_package_chef-manage
  * apt_package[chef-manage] action install
    - install version 3.3.97-1 of package chef-manage
  * ruby_block[addon_install_notification_chef-manage] action run
    - execute the ruby block addon_install_notification_chef-manage

Running handlers:
-- Installed Add-On Package: chef-manage
  - #<Class:0x0000000040a14088>::AddonInstallHandler
Running handlers complete
Chef Infra Client finished, 4/5 resources updated in 19 seconds
root@ip-172-31-46-255:/home/ubuntu# sudo chef-server-ctl reconfigure

Documentation: https://docs.chef.io/server/
Patents:       https://www.chef.io/patents

Starting Chef Infra Client, version 16.17.51
Patents: https://www.chef.io/patents
resolving cookbooks for run list: ["infra-server::default"]
Synchronizing Cookbooks:
  - infra-server (0.1.2)
  - runit (5.1.7)
  - packagecloud (1.0.1)
  - enterprise (1.2.0)
  - yum-epel (4.5.0)
Installing Cookbook Gems:
Compiling Cookbooks...
Recipe: infra-server::default
  * directory[/etc/opscode] action create (up to date)
  * directory[/etc/opscode/logrotate.d] action create (up to date)
  Converging 205 resources
  * link[/usr/bin/private-chef-ctl] action create (up to date)
  * link[/usr/bin/chef-server-ctl] action create (up to date)
  * directory[/etc/opscode] action nothing (skipped due to action :nothing)
  * directory[/etc/opscode/logrotate.d] action nothing (skipped due to action :nothing)
  * log[opscode_webui deprecation notice] action write (skipped due to only_if)
Recipe: infra-server::users
  * linux_user[opscode] action create (up to date)
  * group[opscode] action create (up to date)
Recipe: infra-server::private_keys
  * file[/etc/opscode/pivotal.pem] action create (up to date)
  * file[/etc/opscode/webui_priv.pem] action create (up to date)
  * file[/etc/opscode/webui_pub.pem] action create (up to date)
Recipe: infra-server::default
  * file[/etc/opscode/dark_launch_features.json] action create (up to date)
  * directory[/etc/chef] action create (up to date)
  * directory[/var/opt/opscode] action create (up to date)
  * directory[/var/log/opscode] action create (up to date)
Recipe: enterprise::runit
  * component_runit_supervisor[private_chef] action create
    * template[/etc/systemd/system/private_chef-runsvdir-start.service] action create (up to date)
    * execute[systemctl daemon-reload] action nothing (skipped due to action :nothing)
    * file[/usr/lib/systemd/system/private_chef-runsvdir-start.service] action delete (up to date)
    * service[private_chef-runsvdir-start.service] action enable (up to date)
    * service[private_chef-runsvdir-start.service] action start (up to date)
     (up to date)
Recipe: infra-server::sysctl-updates
  * execute[sysctl-reload] action nothing (skipped due to action :nothing)
  * bash[dual ip4/ip6 portbind] action run (skipped due to only_if)
Recipe: infra-server::fix_permissions
  * execute[find /opt/opscode/embedded/lib/ruby/gems/*/gems -perm /u=x,g=x,o=x -exec chmod 755 {} \;] action run
    - execute find /opt/opscode/embedded/lib/ruby/gems/*/gems -perm /u=x,g=x,o=x -exec chmod 755 {} \;
  * execute[find /opt/opscode/embedded/lib/ruby/gems/*/gems -perm /u=r,g=r,o=r ! -perm /u=x -exec chmod 644 {} \;] action run
    - execute find /opt/opscode/embedded/lib/ruby/gems/*/gems -perm /u=r,g=r,o=r ! -perm /u=x -exec chmod 644 {} \;
Recipe: infra-server::postgresql
  * linux_user[opscode-pgsql] action create (up to date)
  * directory[/var/opt/opscode/postgresql] action create (up to date)
  * file[/var/opt/opscode/postgresql/.profile] action create (up to date)
  * directory[/var/log/opscode/postgresql/13] action create (up to date)
  * directory[/var/opt/opscode/postgresql/13] action create (up to date)
  * pg_upgrade[upgrade_if_necessary] action upgrade (up to date)
  * component_runit_service[postgresql] action enable
    * template[/var/log/opscode/postgresql/13/config] action create (up to date)
  Recipe: <Dynamically Defined Resource>
    * service[postgresql] action nothing (skipped due to action :nothing)
    * runit_service[postgresql] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/postgresql] action create (up to date)
      * template[/opt/opscode/sv/postgresql/run] action create (up to date)
      * directory[/opt/opscode/sv/postgresql/log] action create (up to date)
      * directory[/opt/opscode/sv/postgresql/log/main] action create (up to date)
      * directory[/var/log/postgresql] action create (up to date)
      * template[/opt/opscode/sv/postgresql/log/config] action create (up to date)
      * link[/var/log/postgresql/config] action create (up to date)
      * template[/opt/opscode/sv/postgresql/log/run] action create (up to date)
      * directory[/opt/opscode/sv/postgresql/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/postgresql/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/postgresql/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/postgresql/control] action create (up to date)
      * template[/opt/opscode/sv/postgresql/control/t] action create (up to date)
      * link[/opt/opscode/init/postgresql] action create (up to date)
      * file[/opt/opscode/sv/postgresql/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/postgresql] action create (up to date)
      * ruby_block[wait for postgresql service socket] action run
        - execute the ruby block wait for postgresql service socket


Recipe: infra-server::postgresql
  * pg_cluster[/var/opt/opscode/postgresql/13/data] action init
    * directory[/var/opt/opscode/postgresql/13/data] action create (up to date)
    * execute[initialize_cluster_/var/opt/opscode/postgresql/13/data] action run (skipped due to not_if)
    * template[/var/opt/opscode/postgresql/13/data/postgresql.conf] action create (up to date)
    * template[/var/opt/opscode/postgresql/13/data/pg_hba.conf] action create (up to date)
     (up to date)
  * link[/var/opt/opscode/postgresql/13/data] action create (skipped due to not_if)
  * execute[/opt/opscode/bin/chef-server-ctl start postgresql] action run
    - execute /opt/opscode/bin/chef-server-ctl start postgresql
  * ruby_block[wait for postgresql to start] action run
    - execute the ruby block wait for postgresql to start
  * pg_user[opscode-pgsql] action create (up to date)
  * pg_database[opscode-pgsql] action create (up to date)
Recipe: infra-server::erchef_database
  * pg_user[opscode_chef] action create (up to date)
  * pg_user[opscode_chef_ro] action create (up to date)
  * pg_database[opscode_chef] action create (up to date)
  * ruby_block[set opscode_chef ownership] action run
    - execute the ruby block set opscode_chef ownership
  * pg_sqitch[/opt/opscode/embedded/service/opscode-erchef/schema/baseline] action nothing (skipped due to action :nothing)
  * pg_sqitch[/opt/opscode/embedded/service/opscode-erchef/schema] action nothing (skipped due to action :nothing)
  * pg_user_table_access[opscode_chef] action create
    - GRANT CONNECT, TEMPORARY ON DATABASE opscode_chef TO opscode_chef
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO opscode_chef;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO opscode_chef
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, UPDATE ON SEQUENCES TO opscode_chef;
    - GRANT SELECT, UPDATE ON ALL SEQUENCES IN SCHEMA public TO opscode_chef
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT INSERT, SELECT, UPDATE, DELETE ON TABLES TO opscode_chef;
    - GRANT INSERT, SELECT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO opscode_chef
  * pg_user_table_access[opscode_chef_ro] action create
    - GRANT CONNECT ON DATABASE opscode_chef TO opscode_chef_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO opscode_chef_ro;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO opscode_chef_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON SEQUENCES TO opscode_chef_ro;
    - GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO opscode_chef_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO opscode_chef_ro;
    - GRANT SELECT ON ALL TABLES IN SCHEMA public TO opscode_chef_ro
  * directory[/opt/opscode/embedded/service/enterprise-chef-server-schema] action delete (up to date)
Recipe: infra-server::bifrost_database
  * pg_user[bifrost] action create (up to date)
  * pg_user[bifrost_ro] action create (up to date)
  * pg_database[bifrost] action create (up to date)
  * pg_user_table_access[bifrost] action create
    - GRANT CONNECT, TEMPORARY ON DATABASE bifrost TO bifrost
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO bifrost;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO bifrost
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, UPDATE ON SEQUENCES TO bifrost;
    - GRANT SELECT, UPDATE ON ALL SEQUENCES IN SCHEMA public TO bifrost
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT INSERT, SELECT, UPDATE, DELETE ON TABLES TO bifrost;
    - GRANT INSERT, SELECT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO bifrost
  * pg_user_table_access[bifrost_ro] action create
    - GRANT CONNECT ON DATABASE bifrost TO bifrost_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO bifrost_ro;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO bifrost_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON SEQUENCES TO bifrost_ro;
    - GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO bifrost_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO bifrost_ro;
    - GRANT SELECT ON ALL TABLES IN SCHEMA public TO bifrost_ro
  * pg_sqitch[/opt/opscode/embedded/service/oc_bifrost/db] action nothing (skipped due to action :nothing)
Recipe: infra-server::oc_id_database
  * pg_user[oc_id] action create (up to date)
  * pg_user[oc_id_ro] action create (up to date)
  * pg_database[oc_id] action create (up to date)
  * pg_user_table_access[oc_id_ro] action create
    - GRANT CONNECT ON DATABASE oc_id TO oc_id_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO oc_id_ro;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO oc_id_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON SEQUENCES TO oc_id_ro;
    - GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO oc_id_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO oc_id_ro;
    - GRANT SELECT ON ALL TABLES IN SCHEMA public TO oc_id_ro
Recipe: infra-server::oc_bifrost
  * directory[/var/opt/opscode/oc_bifrost] action create (up to date)
  * directory[/var/opt/opscode/oc_bifrost/bin] action create (up to date)
  * directory[/var/log/opscode/oc_bifrost] action create (up to date)
  * directory[/var/log/opscode/oc_bifrost/sasl] action create (up to date)
  * link[/opt/opscode/embedded/service/oc_bifrost/log] action create (up to date)
  * template[/var/opt/opscode/oc_bifrost/sys.config] action create (up to date)
  * link[/opt/opscode/embedded/service/oc_bifrost/sys.config] action create (up to date)
  * template[/var/opt/opscode/oc_bifrost/vm.args] action create (up to date)
  * link[/opt/opscode/embedded/service/oc_bifrost/vm.args] action create (up to date)
  * component_runit_service[oc_bifrost] action enable
    * template[/var/log/opscode/oc_bifrost/config] action create (up to date)
  Recipe: <Dynamically Defined Resource>
    * service[oc_bifrost] action nothing (skipped due to action :nothing)
    * runit_service[oc_bifrost] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/oc_bifrost] action create (up to date)
      * template[/opt/opscode/sv/oc_bifrost/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_bifrost/log] action create (up to date)
      * directory[/opt/opscode/sv/oc_bifrost/log/main] action create (up to date)
      * directory[/var/log/oc_bifrost] action create (up to date)
      * template[/opt/opscode/sv/oc_bifrost/log/config] action create (up to date)
      * link[/var/log/oc_bifrost/config] action create (up to date)
      * template[/opt/opscode/sv/oc_bifrost/log/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_bifrost/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for oc_bifrost service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/oc_bifrost/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/oc_bifrost/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/oc_bifrost/control] action create (up to date)
      * template[/opt/opscode/sv/oc_bifrost/control/t] action create (up to date)
      * link[/opt/opscode/init/oc_bifrost] action create (up to date)
      * file[/opt/opscode/sv/oc_bifrost/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/oc_bifrost] action create (up to date)
      * ruby_block[wait for oc_bifrost service socket] action run
        - execute the ruby block wait for oc_bifrost service socket


Recipe: infra-server::oc_id
  * directory[/var/opt/opscode/oc_id] action create (up to date)
  * directory[/var/opt/opscode/oc_id/config] action create (up to date)
  * directory[/var/opt/opscode/oc_id/tmp] action create (up to date)
  * directory[/var/log/opscode/oc_id] action create (up to date)
  * directory[/opt/opscode/embedded/service/oc_id/log] action delete (skipped due to not_if)
  * directory[/opt/opscode/embedded/service/oc_id/tmp] action delete (skipped due to not_if)
  * link[/opt/opscode/embedded/service/oc_id/log] action create (up to date)
  * link[/opt/opscode/embedded/service/oc_id/tmp] action create (up to date)
  * file[/var/opt/opscode/oc_id/config/production.yml] action create (up to date)
  * file[/opt/opscode/embedded/service/oc_id/config/settings/production.yml] action delete (skipped due to not_if)
  * link[/opt/opscode/embedded/service/oc_id/config/settings/production.yml] action create (up to date)
  * template[/var/opt/opscode/oc_id/config/secret_token.rb] action create (up to date)
  * file[/opt/opscode/embedded/service/oc_id/config/initializers/secret_token.rb] action delete (skipped due to not_if)
  * link[/opt/opscode/embedded/service/oc_id/config/initializers/secret_token.rb] action create (up to date)
  * template[/var/opt/opscode/oc_id/config/database.yml] action create (up to date)
  * file[/opt/opscode/embedded/service/oc_id/config/database.yml] action delete (skipped due to not_if)
  * link[/opt/opscode/embedded/service/oc_id/config/database.yml] action create (up to date)
  * execute[chown -R opscode:opscode /var/log/opscode/oc_id] action run (skipped due to only_if)
  * execute[oc_id_schema] action run
    - execute veil-env-helper --use-file -f /etc/opscode/private-chef-secrets.json -s chef-server.webui_key -s oc_id.sql_password -s oc_id.secret_key_base -- bundle exec --keep-file-descriptors rake db:migrate
  * component_runit_service[oc_id] action enable
    * template[/var/log/opscode/oc_id/config] action create (up to date)
  Recipe: <Dynamically Defined Resource>
    * service[oc_id] action nothing (skipped due to action :nothing)
    * runit_service[oc_id] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/oc_id] action create (up to date)
      * template[/opt/opscode/sv/oc_id/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_id/log] action create (up to date)
      * directory[/opt/opscode/sv/oc_id/log/main] action create (up to date)
      * directory[/var/log/oc_id] action create (up to date)
      * template[/opt/opscode/sv/oc_id/log/config] action create (up to date)
      * link[/var/log/oc_id/config] action create (up to date)
      * template[/opt/opscode/sv/oc_id/log/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_id/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for oc_id service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/oc_id/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/oc_id/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/oc_id/control] action create (up to date)
      * link[/opt/opscode/init/oc_id] action create (up to date)
      * file[/opt/opscode/sv/oc_id/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/oc_id] action create (up to date)
      * ruby_block[wait for oc_id service socket] action run
        - execute the ruby block wait for oc_id service socket


Recipe: infra-server::oc_id
  * directory[/var/opt/opscode/nginx/etc/addon.d] action create (up to date)
  * template[/var/opt/opscode/nginx/etc/addon.d/40-oc_id_upstreams.conf] action create (up to date)
  * template[/var/opt/opscode/nginx/etc/addon.d/40-oc_id_external.conf] action create (up to date)
Recipe: infra-server::opensearch
  * directory[/var/opt/opscode/opensearch] action create (up to date)
  * directory[/var/opt/opscode/opensearch/data] action create (up to date)
  * directory[/var/opt/opscode/opensearch/tmp] action create (up to date)
  * directory[/var/log/opscode/opensearch] action create (up to date)
  * directory[/var/opt/opscode/opensearch/config] action create (up to date)
  * directory[/var/opt/opscode/opensearch/plugins] action create (up to date)
  * directory[/var/opt/opscode/opensearch/scripts] action create (up to date)
  * execute[sysctl-reload] action nothing (skipped due to action :nothing)
  * file[/etc/sysctl.conf] action create (up to date)
  * sysctl[vm.max_map_count] action apply (up to date)
  * directory[/opt/opscode/service/opensearch/env] action delete
    - delete existing directory /opt/opscode/service/opensearch/env
  * template[/var/opt/opscode/opensearch/config/opensearch.yml] action create (up to date)
  * template[/var/opt/opscode/opensearch/config/logging.yml] action create (up to date)
  * template[/var/opt/opscode/opensearch/config/jvm.options] action create (up to date)
  * cookbook_file[/var/opt/opscode/opensearch/config/log4j2.properties] action create (up to date)
  * cookbook_file[/var/opt/opscode/opensearch/config/ssl_script.sh] action create (up to date)
  * execute[generate ssl certificates] action run (skipped due to not_if)
  * template[/opt/opscode/embedded/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml] action create
    - update content in file /opt/opscode/embedded/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml from 309e0c to c2de8b
    --- /opt/opscode/embedded/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml  2025-10-05 06:13:52.562534575 +0000
    +++ /opt/opscode/embedded/opensearch/plugins/opensearch-security/securityconfig/.chef-internal_users20251005-21841-1j1m9gq.yml      2025-10-05 06:19:39.433068437 +0000
    @@ -10,7 +10,7 @@

     # Define your internal users here
     opensearch_user:
    -  hash: "$2y$12$YTY3xfKXlStPote4FLZRiuReU2fNn5EwvALH9VqRU91tCMwQzDU4i"
    +  hash: "$2y$12$ik9IEtQD14ixDJOC63idjem53dwyFXfhBvMmUMXwV3VamkwNwhCG2"
       reserved: false
       hidden: false
       backend_roles:
  * link[/opt/opscode/embedded/opensearch/config] action create (up to date)
  * component_runit_service[opensearch] action enable
    * template[/var/log/opscode/opensearch/config] action create (up to date)
  Recipe: <Dynamically Defined Resource>
    * service[opensearch] action nothing (skipped due to action :nothing)
    * runit_service[opensearch] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opensearch] action create (up to date)
      * template[/opt/opscode/sv/opensearch/run] action create (up to date)
      * directory[/opt/opscode/sv/opensearch/log] action create (up to date)
      * directory[/opt/opscode/sv/opensearch/log/main] action create (up to date)
      * directory[/var/log/opensearch] action create (up to date)
      * template[/opt/opscode/sv/opensearch/log/config] action create (up to date)
      * link[/var/log/opensearch/config] action create (up to date)
      * template[/opt/opscode/sv/opensearch/log/run] action create (up to date)
      * directory[/opt/opscode/sv/opensearch/env] action create
        - create new directory /opt/opscode/sv/opensearch/env
        - change mode from '' to '0755'
      * ruby_block[Delete unmanaged env files for opensearch service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opensearch/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opensearch/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opensearch/control] action create (up to date)
      * link[/opt/opscode/init/opensearch] action create (up to date)
      * file[/opt/opscode/sv/opensearch/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opensearch] action create (up to date)
      * ruby_block[wait for opensearch service socket] action run
        - execute the ruby block wait for opensearch service socket


Recipe: infra-server::opensearch
  * component_runit_service[opensearch] action start
  Recipe: <Dynamically Defined Resource>
    * service[opensearch] action nothing (skipped due to action :nothing)
    * runit_service[opensearch] action start (up to date)
     (up to date)
Recipe: infra-server::opensearch
  * chef_sleep[10] action sleep
    - sleep 10 seconds
  * execute[add internal user to opensearch security plugin] action run
    - execute export JAVA_HOME="/opt/opscode/embedded/open-jre/"; ./securityadmin.sh   -f ../securityconfig/internal_users.yml   -icl -nhnv -cert /opt/opscode/embedded/opensearch/config/admin.pem   -cacert /opt/opscode/embedded/opensearch/config/root-ca.pem   -key /opt/opscode/embedded/opensearch/config/admin-key.pem
Recipe: infra-server::opensearch_index
  * opensearch_index[chef] action create (up to date)
Recipe: infra-server::bookshelf
  * template[/opt/opscode/embedded/bin/cookbook_migration.sh] action create (up to date)
  * directory[/var/opt/opscode/bookshelf] action create (up to date)
  * directory[/var/log/opscode/bookshelf] action create (up to date)
  * directory[/var/log/opscode/bookshelf/sasl] action create (up to date)
  * directory[/var/opt/opscode/bookshelf/data] action create (up to date)
  * execute[cookbook migration] action run (skipped due to not_if)
  * link[/opt/opscode/embedded/service/bookshelf/log] action create (up to date)
  * template[/var/opt/opscode/bookshelf/sys.config] action create (up to date)
  * link[/opt/opscode/embedded/service/bookshelf/sys.config] action create (up to date)
  * template[/var/opt/opscode/bookshelf/vm.args] action create (up to date)
  * link[/opt/opscode/embedded/service/bookshelf/vm.args] action create (up to date)
  * component_runit_service[bookshelf] action enable
    * template[/var/log/opscode/bookshelf/config] action create (up to date)
  Recipe: <Dynamically Defined Resource>
    * service[bookshelf] action nothing (skipped due to action :nothing)
    * runit_service[bookshelf] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/bookshelf] action create (up to date)
      * template[/opt/opscode/sv/bookshelf/run] action create (up to date)
      * directory[/opt/opscode/sv/bookshelf/log] action create (up to date)
      * directory[/opt/opscode/sv/bookshelf/log/main] action create (up to date)
      * directory[/var/log/bookshelf] action create (up to date)
      * template[/opt/opscode/sv/bookshelf/log/config] action create (up to date)
      * link[/var/log/bookshelf/config] action create (up to date)
      * template[/opt/opscode/sv/bookshelf/log/run] action create (up to date)
      * directory[/opt/opscode/sv/bookshelf/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for bookshelf service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/bookshelf/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/bookshelf/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/bookshelf/control] action create (up to date)
      * template[/opt/opscode/sv/bookshelf/control/t] action create (up to date)
      * link[/opt/opscode/init/bookshelf] action create (up to date)
      * file[/opt/opscode/sv/bookshelf/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/bookshelf] action create (up to date)
      * ruby_block[wait for bookshelf service socket] action run
        - execute the ruby block wait for bookshelf service socket


Recipe: infra-server::opscode-erchef
  * directory[/var/opt/opscode/opscode-erchef] action create (up to date)
  * directory[/var/log/opscode/opscode-erchef] action create (up to date)
  * directory[/var/log/opscode/opscode-erchef/sasl] action create (up to date)
  * link[/opt/opscode/embedded/service/opscode-erchef/log] action create (up to date)
  * template[/var/opt/opscode/opscode-erchef/sys.config] action create (up to date)
  * execute[remove_erchef_siz_files] action nothing (skipped due to action :nothing)
  * link[/opt/opscode/embedded/service/opscode-erchef/sys.config] action create (up to date)
  * template[/var/opt/opscode/opscode-erchef/vm.args] action create (up to date)
  * link[/opt/opscode/embedded/service/opscode-erchef/vm.args] action create (up to date)
  * component_runit_service[opscode-erchef] action enable
    * template[/var/log/opscode/opscode-erchef/config] action create (up to date)
  Recipe: <Dynamically Defined Resource>
    * service[opscode-erchef] action nothing (skipped due to action :nothing)
    * runit_service[opscode-erchef] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opscode-erchef] action create (up to date)
      * template[/opt/opscode/sv/opscode-erchef/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-erchef/log] action create (up to date)
      * directory[/opt/opscode/sv/opscode-erchef/log/main] action create (up to date)
      * directory[/var/log/opscode-erchef] action create (up to date)
      * template[/opt/opscode/sv/opscode-erchef/log/config] action create (up to date)
      * link[/var/log/opscode-erchef/config] action create (up to date)
      * template[/opt/opscode/sv/opscode-erchef/log/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-erchef/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for opscode-erchef service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-erchef/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-erchef/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opscode-erchef/control] action create (up to date)
      * template[/opt/opscode/sv/opscode-erchef/control/t] action create (up to date)
      * link[/opt/opscode/init/opscode-erchef] action create (up to date)
      * file[/opt/opscode/sv/opscode-erchef/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opscode-erchef] action create (up to date)
      * ruby_block[wait for opscode-erchef service socket] action run
        - execute the ruby block wait for opscode-erchef service socket


Recipe: infra-server::nginx
  * directory[/var/log/opscode/nginx] action create (up to date)
  * directory[/var/opt/opscode/nginx] action create (up to date)
  * directory[/var/opt/opscode/nginx/ca] action create (up to date)
  * directory[/var/opt/opscode/nginx/cache] action create (up to date)
  * directory[/var/opt/opscode/nginx/cache-tmp] action create (up to date)
  * directory[/var/opt/opscode/nginx/etc] action create (up to date)
  * directory[/var/opt/opscode/nginx/etc/addon.d] action create (up to date)
  * directory[/var/opt/opscode/nginx/etc/nginx.d] action create (up to date)
  * directory[/var/opt/opscode/nginx/etc/scripts] action create (up to date)
  * directory[/var/opt/opscode/nginx/html] action create (up to date)
  * directory[/var/opt/opscode/nginx/tmp] action create (up to date)
  * file[/var/log/opscode/nginx/access.log] action create (up to date)
  * file[/var/log/opscode/nginx/error.log] action create (up to date)
  * file[/var/log/opscode/nginx/current] action create (up to date)
  * openssl_x509_certificate[/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.crt] action create
    * file[/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.crt] action create_if_missing (up to date)
    * file[/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.key] action create_if_missing (up to date)
     (up to date)
  * file[/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.crt] action create (up to date)
  * file[/var/opt/opscode/nginx/ca/ip-172-31-46-255.ap-south-1.compute.internal.key] action create (up to date)
  * openssl_dhparam[/var/opt/opscode/nginx/ca/dhparams.pem] action create
    * file[/var/opt/opscode/nginx/ca/dhparams.pem] action create (up to date)
     (up to date)
  * remote_directory[/var/opt/opscode/nginx/html] action create
  Recipe: <Dynamically Defined Resource>
    * cookbook_file[/var/opt/opscode/nginx/html/404.html] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/favicon.ico] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/index.html] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/503.json] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-blocks-t.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-body.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-close.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-footer.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-login-form-b.png] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-login-form-t.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-main-b.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-main-t.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-sidebar-title.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/btn-go.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/css/all.css] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-blog-title.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-blog.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-friends.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-heading.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-blocks-b.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/btn-more.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-about.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/image.jpg] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/image2.jpg] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/image3.jpg] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/logo.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/logo.png] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/logo.svg] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/nav-active.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/nav-bg.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/nav-hover.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/photo.jpg] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-blocks.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-footer-bottom.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-footer-list.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-login.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-post-info.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/upMenuArrow.png] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-next.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-platform2-item.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/btn-submit.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/hd-header.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-subscribe.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-subscribe2.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-platform.gif] action create (up to date)
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-previous.gif] action create (up to date)
     (up to date)
Recipe: infra-server::nginx
  * template[/var/opt/opscode/nginx/etc/scripts/config.lua] action create (up to date)
  * template[/var/opt/opscode/nginx/etc/scripts/dispatch.lua] action create (up to date)
  * template[/var/opt/opscode/nginx/etc/scripts/resolver.lua] action create (up to date)
  * template[/var/opt/opscode/nginx/etc/scripts/route_checks.lua] action create (up to date)
  * template[/var/opt/opscode/nginx/etc/scripts/routes.lua] action create (up to date)
  * template[/var/opt/opscode/nginx/etc/scripts/dispatch_route.lua] action create (up to date)
  * template[/var/opt/opscode/nginx/etc/scripts/validator.lua] action create (up to date)
  * file[/var/opt/opscode/nginx/stats_htpasswd] action create
    - update content in file /var/opt/opscode/nginx/stats_htpasswd from 447807 to 5e7f0b
    - suppressed sensitive resource
  * template[/var/opt/opscode/nginx/etc/chef_https_lb.conf] action create
    - update content in file /var/opt/opscode/nginx/etc/chef_https_lb.conf from 40a981 to 2a8ac1
    --- /var/opt/opscode/nginx/etc/chef_https_lb.conf   2025-10-05 06:15:17.230905415 +0000
    +++ /var/opt/opscode/nginx/etc/.chef-chef_https_lb20251005-21841-1uo64wj.conf       2025-10-05 06:19:57.754149927 +0000
    @@ -30,12 +30,6 @@
         proxy_send_timeout      300;
         proxy_read_timeout      300;

    -    add_header X-Frame-Options DENY;
    -    add_header Content-Security-Policy "default-src 'self';";
    -    add_header X-Content-Type-Options nosniff;
    -    add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    -    add_header Referrer-Policy 'strict-origin';
    -    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

         error_page 404 =404 /404.html;
         error_page 503 =503 /503.json;
  * template[/var/opt/opscode/nginx/etc/chef_http_lb.conf] action create
    - update content in file /var/opt/opscode/nginx/etc/chef_http_lb.conf from 42be63 to dac679
    --- /var/opt/opscode/nginx/etc/chef_http_lb.conf    2025-10-05 06:15:17.259905543 +0000
    +++ /var/opt/opscode/nginx/etc/.chef-chef_http_lb20251005-21841-11zkqo9.conf        2025-10-05 06:19:57.774150017 +0000
    @@ -20,11 +20,6 @@
         proxy_send_timeout      300;
         proxy_read_timeout      300;

    -    add_header X-Frame-Options DENY;
    -    add_header Content-Security-Policy "default-src 'self';";
    -    add_header X-Content-Type-Options nosniff;
    -    add_header Permissions-Policy "camera=(); payment=(); microphone=(); gyroscope=(); magnetometer=(); midi=(); geolocation=()";
    -    add_header Referrer-Policy 'strict-origin';

         error_page 404 =404 /404.html;
         error_page 503 =503 /503.json;
  * template[/var/opt/opscode/nginx/etc/nginx.conf] action create (up to date)
  * cookbook_file[/var/opt/opscode/nginx/etc/addon.d/README.md] action create (up to date)
  * component_runit_service[nginx] action enable
    * template[/var/log/opscode/nginx/config] action create (up to date)
  Recipe: <Dynamically Defined Resource>
    * service[nginx] action nothing (skipped due to action :nothing)
    * runit_service[nginx] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/nginx] action create (up to date)
      * template[/opt/opscode/sv/nginx/run] action create (up to date)
      * directory[/opt/opscode/sv/nginx/log] action create (up to date)
      * directory[/opt/opscode/sv/nginx/log/main] action create (up to date)
      * directory[/var/log/nginx] action create (up to date)
      * template[/opt/opscode/sv/nginx/log/config] action create (up to date)
      * link[/var/log/nginx/config] action create (up to date)
      * template[/opt/opscode/sv/nginx/log/run] action create (up to date)
      * directory[/opt/opscode/sv/nginx/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/nginx/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/nginx/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/nginx/control] action create (up to date)
      * link[/opt/opscode/init/nginx] action create (up to date)
      * file[/opt/opscode/sv/nginx/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/nginx] action create (up to date)
      * ruby_block[wait for nginx service socket] action run
        - execute the ruby block wait for nginx service socket


Recipe: infra-server::nginx
  * component_runit_service[nginx] action start
  Recipe: <Dynamically Defined Resource>
    * service[nginx] action nothing (skipped due to action :nothing)
    * runit_service[nginx] action start (up to date)
     (up to date)
Recipe: infra-server::nginx
  * template[/etc/opscode/logrotate.d/nginx] action create (up to date)
  * execute[find /opt/opscode/embedded/nginx -user 'root' -exec chown opscode {} \;] action run (skipped due to only_if)
  * execute[find /var/opt/opscode/nginx -user 'root' -exec chown opscode {} \;] action run (skipped due to only_if)
  * execute[find /var/log/opscode/nginx -user 'root' -exec chown opscode {} \;] action run (skipped due to only_if)
Recipe: infra-server::redis_lb
  * directory[/var/opt/opscode/redis_lb] action create (up to date)
  * directory[/var/opt/opscode/redis_lb/etc] action create (up to date)
  * directory[/var/opt/opscode/redis_lb/data] action create (up to date)
  * directory[/var/log/opscode/redis_lb] action create (up to date)
  * link[/var/opt/opscode/redis_lb/data] action create (skipped due to not_if)
  * template[/var/opt/opscode/redis_lb/etc/redis.conf] action create (up to date)
  * component_runit_service[redis_lb] action enable
    * template[/var/log/opscode/redis_lb/config] action create (up to date)
    * runit_service[redis_lb] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/redis_lb] action create (up to date)
      * template[/opt/opscode/sv/redis_lb/run] action create (up to date)
      * directory[/opt/opscode/sv/redis_lb/log] action create (up to date)
      * directory[/opt/opscode/sv/redis_lb/log/main] action create (up to date)
      * directory[/var/log/redis_lb] action create (up to date)
      * template[/opt/opscode/sv/redis_lb/log/config] action create (up to date)
      * link[/var/log/redis_lb/config] action create (up to date)
      * template[/opt/opscode/sv/redis_lb/log/run] action create (up to date)
      * directory[/opt/opscode/sv/redis_lb/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis_lb service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/redis_lb/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/redis_lb/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/redis_lb/control] action create (up to date)
      * link[/opt/opscode/init/redis_lb] action create (up to date)
      * file[/opt/opscode/sv/redis_lb/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/redis_lb] action create (up to date)
      * ruby_block[wait for redis_lb service socket] action run
        - execute the ruby block wait for redis_lb service socket


  * service[redis_lb] action nothing (skipped due to action :nothing)
  * runit_service[redis_lb] action restart (up to date)
  * template[/etc/opscode/logrotate.d/redis_lb] action create (up to date)
  * ruby_block[set_lb_redis_values] action runPipelining commands on a Redis instance is deprecated and will be removed in Redis 5.0.0.

redis.pipelined do
  redis.get("key")
end

should be replaced by

redis.pipelined do |pipeline|
  pipeline.get("key")
end

(called from /var/opt/opscode/local-mode-cache/cookbooks/infra-server/recipes/redis_lb.rb:129:in `block (2 levels) in from_file'}
Pipelining commands on a Redis instance is deprecated and will be removed in Redis 5.0.0.

redis.pipelined do
  redis.get("key")
end

should be replaced by

redis.pipelined do |pipeline|
  pipeline.get("key")
end

(called from /var/opt/opscode/local-mode-cache/cookbooks/infra-server/recipes/redis_lb.rb:135:in `block (2 levels) in from_file'}

    - execute the ruby block set_lb_redis_values
Recipe: infra-server::cleanup
  * component_runit_service[opscode-solr4] action disable
  Recipe: <Dynamically Defined Resource>
    * service[opscode-solr4] action nothing (skipped due to action :nothing)
    * runit_service[opscode-solr4] action disable
      * ruby_block[disable opscode-solr4] action run (skipped due to only_if)
       (up to date)
     (up to date)
Recipe: infra-server::cleanup
  * directory[/opt/opscode/sv/opscode-solr4] action delete (up to date)
  * component_runit_service[rabbitmq] action disable
  Recipe: <Dynamically Defined Resource>
    * service[rabbitmq] action nothing (skipped due to action :nothing)
    * runit_service[rabbitmq] action disable
      * ruby_block[disable rabbitmq] action run (skipped due to only_if)
       (up to date)
     (up to date)
Recipe: infra-server::cleanup
  * directory[/opt/opscode/sv/rabbitmq] action delete (up to date)
  * component_runit_service[opscode-chef-mover] action disable
  Recipe: <Dynamically Defined Resource>
    * service[opscode-chef-mover] action nothing (skipped due to action :nothing)
    * runit_service[opscode-chef-mover] action disable
      * ruby_block[disable opscode-chef-mover] action run (skipped due to only_if)
       (up to date)
     (up to date)
Recipe: infra-server::cleanup
  * directory[/opt/opscode/sv/opscode-chef-mover] action delete (up to date)
  * directory[/opt/opscode/sv/elasticsearch] action delete (up to date)
  * directory[/opt/opscode/embedded/elasticsearch] action delete (up to date)
  * directory[/opt/opscode/service/elasticsearch] action delete (up to date)
  * directory[/var/log/opscode/elasticsearch/] action delete (up to date)
Recipe: infra-server::log_version
  * file[/var/opt/opscode/chef_version_history.txt] action create_if_missing (up to date)
  * bash[append_to_config] action run
    - execute "bash"
Recipe: infra-server::private-chef-sh
  * template[/etc/opscode/private-chef.sh] action create (up to date)
Recipe: infra-server::oc-chef-pedant
  * directory[/var/opt/opscode/oc-chef-pedant] action create (up to date)
  * directory[/var/opt/opscode/oc-chef-pedant/etc] action create (up to date)
  * directory[/var/log/opscode/oc-chef-pedant] action create (up to date)
  * template[/var/opt/opscode/oc-chef-pedant/etc/pedant_config.rb] action create (up to date)
Recipe: infra-server::log_cleanup
  * template[/etc/opscode/logrotate.conf] action create (up to date)
  * template[/etc/cron.hourly/opc_logrotate] action create (up to date)
Recipe: infra-server::partybus
  * directory[/var/opt/opscode/upgrades] action create (up to date)
  * directory[/var/opt/opscode/upgrades/etc] action create (up to date)
  * directory[/opt/opscode/embedded/service/partybus] action create (up to date)
  * template[/var/opt/opscode/upgrades/etc/config.rb] action create (up to date)
  * link[/opt/opscode/embedded/service/partybus/config.rb] action create (up to date)
  * execute[set initial migration level] action nothing (skipped due to action :nothing)
  * ruby_block[migration-level file check] action nothing (skipped due to action :nothing)
Recipe: infra-server::ctl_config
  * template[/etc/opscode/pivotal.rb] action create (up to date)
Recipe: infra-server::default
  * file[/etc/opscode/chef-server-running.json] action create
    - update content in file /etc/opscode/chef-server-running.json from 88d99d to f0f60c
    --- /etc/opscode/chef-server-running.json   2025-10-05 06:15:25.279941008 +0000
    +++ /etc/opscode/.chef-chef-server-running20251005-21841-603y6j.json        2025-10-05 06:19:58.745154354 +0000
    @@ -551,7 +551,7 @@
           "reporting": true
         },
         "bootstrap": {
    -      "enable": true
    +      "enable": false
         },
         "estatsd": {
           "enable": true,
  * ruby_block[print reconfigure warnings] action run
    - execute the ruby block print reconfigure warnings
Recipe: infra-server::opensearch
  * component_runit_service[opensearch] action restart
  Recipe: <Dynamically Defined Resource>
    * service[opensearch] action nothing (skipped due to action :nothing)
    * runit_service[opensearch] action restart (up to date)
     (up to date)
Recipe: infra-server::nginx
  * component_runit_service[nginx] action restart
  Recipe: <Dynamically Defined Resource>
    * service[nginx] action nothing (skipped due to action :nothing)
    * runit_service[nginx] action restart (up to date)
     (up to date)

Running handlers:
Running handlers complete
Chef Infra Client finished, 47/473 resources updated in 54 seconds
Chef Infra Server Reconfigured!
root@ip-172-31-46-255:/home/ubuntu# sudo chef-server-ctl user-create gaurav Gaurav Upadhayay gaurav@dropmail.live 'Gu@102831' --filename gaurav.pem
root@ip-172-31-46-255:/home/ubuntu# sudo chef-server-ctl org-create coforge 'Coforge Ltd.' --association_user gaurav --filename coforge-validator.pem
root@ip-172-31-46-255:/home/ubuntu# sudo chef-server-ctl reindex --all-orgs
Reindexing all organizations
Free space is sufficient to start OpenSearch reindex
- Reindexing.
Removing all index entries for organization 'coforge'...
Sending all data for organization 'coforge' to be indexed again.  It may take some time before everything is available via search.
root@ip-172-31-46-255:/home/ubuntu# ls
chef-server-core_15.3.2-1_amd64.deb  coforge-validator.pem  gaurav.pem
root@ip-172-31-46-255:/home/ubuntu# sudo chef-manage-ctl reconfigure
Chef Infra Client, version 17.5.22
Patents: https://www.chef.io/patents
Infra Phase starting
Resolving cookbooks for run list: ["omnibus-chef-manage::default"]
Synchronizing cookbooks:
  - omnibus-chef-manage (1.0.0)
  - chef-server-ingredient (0.5.2)
  - enterprise (1.2.0)
  - private_chef_addon (0.2.0)
  - runit (5.1.7)
  - unicorn (3.0.0)
  - chef-ingredient (0.11.3)
  - packagecloud (2.0.6)
  - yum-epel (5.0.6)
  - apt-chef (3.0.0)
  - yum-chef (4.0.0)
Installing cookbook gem dependencies:
Compiling cookbooks...
Loading Chef InSpec profile files:
Loading Chef InSpec input files:
Loading Chef InSpec waiver files:
Recipe: omnibus-chef-manage::default
  * private_chef_addon[chef-manage] action create
    * directory[/opt/chef-manage] action create
      - change mode from '0755' to '0775'
    * directory[/var/opt/chef-manage] action create
      - create new directory /var/opt/chef-manage
      - change mode from '' to '0775'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * directory[/var/opt/chef-manage/etc] action create
      - create new directory /var/opt/chef-manage/etc
      - change mode from '' to '0775'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * directory[/var/opt/chef-manage/tmp] action create
      - create new directory /var/opt/chef-manage/tmp
      - change mode from '' to '0775'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * directory[/var/log/chef-manage] action create
      - create new directory /var/log/chef-manage
      - change mode from '' to '0775'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * linux_user[opscode] action create (up to date)
    * group[opscode] action create (up to date)
    * directory[/var/log/chef-manage/web] action create
      - create new directory /var/log/chef-manage/web
      - change mode from '' to '0700'
      - change owner from '' to 'opscode'
    * directory[/var/log/chef-manage/worker] action create
      - create new directory /var/log/chef-manage/worker
      - change mode from '' to '0700'
      - change owner from '' to 'opscode'

Recipe: omnibus-chef-manage::config
  * directory[/etc/chef-manage] action create
    - create new directory /etc/chef-manage
    - change mode from '' to '0700'
    - change owner from '' to 'opscode'
  Converging 36 resources
Recipe: omnibus-chef-manage::default
  * directory[/opt/chef-manage/embedded/cookbooks/local-mode-cache] action delete (up to date)
  * private_chef_addon[chef-manage] action nothing (skipped due to action :nothing)
  * component_runit_supervisor[opscode-manage] action delete
    * execute[systemctl daemon-reload] action nothing (skipped due to action :nothing)
    * service[opscode-manage-runsvdir-start.service] action stop (up to date)
    * service[opscode-manage-runsvdir-start.service] action disable (up to date)
    * file[/etc/systemd/system/opscode-manage-runsvdir-start.service] action delete (up to date)
     (up to date)
Recipe: enterprise::runit
  * component_runit_supervisor[chef-manage] action create
    * template[/etc/systemd/system/chef-manage-runsvdir-start.service] action create
      - create new file /etc/systemd/system/chef-manage-runsvdir-start.service
      - update content in file /etc/systemd/system/chef-manage-runsvdir-start.service from none to 7f3415
      --- /etc/systemd/system/chef-manage-runsvdir-start.service        2025-10-05 06:25:25.575302273 +0000
      +++ /etc/systemd/system/.chef-chef-manage-runsvdir-start20251005-48196-wv3t2e.service     2025-10-05 06:25:25.575302273 +0000
      @@ -1 +1,13 @@
      +[Unit]
      +Description=chef-manage Runit Process Supervisor
      +After=network.target auditd.service
      +
      +[Service]
      +ExecStart=/opt/chef-manage/embedded/bin/runsvdir-start
      +Restart=always
      +# only valid for systemd >= 228
      +TasksMax=infinity
      +
      +[Install]
      +WantedBy=multi-user.target
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * execute[systemctl daemon-reload] action nothing (skipped due to action :nothing)
    * execute[systemctl daemon-reload] action run
      - execute systemctl daemon-reload
    * file[/usr/lib/systemd/system/chef-manage-runsvdir-start.service] action delete (up to date)
    * service[chef-manage-runsvdir-start.service] action enable
      - enable service service[chef-manage-runsvdir-start.service]
    * service[chef-manage-runsvdir-start.service] action start
      - start service service[chef-manage-runsvdir-start.service]

Recipe: omnibus-chef-manage::config
  * directory[/etc/chef-manage] action create (up to date)
  * private_chef_addon[chef-manage] action create
    * directory[/opt/chef-manage] action create (up to date)
    * directory[/var/opt/chef-manage] action create (up to date)
    * directory[/var/opt/chef-manage/etc] action create (up to date)
    * directory[/var/opt/chef-manage/tmp] action create (up to date)
    * directory[/var/log/chef-manage] action create (up to date)
    * linux_user[opscode] action create
      - alter user opscode
      - change shell from /usr/sbin/nologin to /bin/sh
    * group[opscode] action create (up to date)
    * directory[/var/log/chef-manage/web] action create (up to date)
    * directory[/var/log/chef-manage/worker] action create (up to date)
    * directory[/var/log/chef-manage/events] action create
      - create new directory /var/log/chef-manage/events
      - change mode from '' to '0700'
      - change owner from '' to 'opscode'

  * file[/var/opt/chef-manage/etc/newrelic.yml] action create
    - create new file /var/opt/chef-manage/etc/newrelic.yml
    - update content in file /var/opt/chef-manage/etc/newrelic.yml from none to 910d34
    --- /var/opt/chef-manage/etc/newrelic.yml   2025-10-05 06:25:26.400305403 +0000
    +++ /var/opt/chef-manage/etc/.chef-newrelic20251005-48196-45y6rb.yml        2025-10-05 06:25:26.400305403 +0000
    @@ -1 +1,6 @@
    +---
    +development:
    +  monitor_mode: false
    +production:
    +  monitor_mode: false
    - change mode from '' to '0600'
    - change owner from '' to 'opscode'
  * file[/var/opt/chef-manage/etc/settings.yml] action create
    - create new file /var/opt/chef-manage/etc/settings.yml
    - update content in file /var/opt/chef-manage/etc/settings.yml from none to 2fc22e
    --- /var/opt/chef-manage/etc/settings.yml   2025-10-05 06:25:26.415305460 +0000
    +++ /var/opt/chef-manage/etc/.chef-settings20251005-48196-ryx73o.yml        2025-10-05 06:25:26.415305460 +0000
    @@ -1 +1,111 @@
    +---
    +sysvinit_id: CM
    +chef_base_path: "/opt/opscode"
    +install_path: "/opt/chef-manage"
    +var_path: "/var/opt/chef-manage"
    +config_path: "/var/opt/chef-manage/etc"
    +log_path: "/var/log/chef-manage"
    +tmp_path: "/var/opt/chef-manage/tmp"
    +web:
    +  log_directory: "/var/log/chef-manage/web"
    +  log_rotation:
    +    file_maxbytes: 104857600
    +    num_to_keep: 10
    +worker:
    +  log_directory: "/var/log/chef-manage/worker"
    +  log_rotation:
    +    file_maxbytes: 104857600
    +    num_to_keep: 10
    +redis:
    +  log_directory: "/var/log/chef-manage/redis"
    +  log_rotation:
    +    file_maxbytes: 104857600
    +    num_to_keep: 10
    +  host: localhost
    +  port: 11002
    +  url: redis://localhost:11002/0
    +services:
    +  web:
    +    enable: true
    +  worker:
    +    enable: true
    +  events: {}
    +webapp:
    +  worker_processes: 2
    +  port: 9462
    +  listen: 127.0.0.1:9462
    +  backlog: 1024
    +  tcp_nodelay: true
    +  worker_timeout: 3600
    +  min_request: 3072
    +  max_request: 4096
    +  min_memory: 120
    +  max_memory: 150
    +ssl_verify_mode: verify_none
    +trusted_certs_dir: ''
    +ssl_client_cert: ''
    +ssl_client_key: ''
    +ssl_ca_file: ''
    +user:
    +  username: opscode
    +  shell: "/bin/sh"
    +  home: "/opt/opscode/embedded"
    +fqdn: ip-172-31-46-255.ap-south-1.compute.internal
    +chef_server_external_url: https://ip-172-31-46-255.ap-south-1.compute.internal
    +chef_server_internal_url: https://localhost
    +origin: ip-172-31-46-255.ap-south-1.compute.internal
    +public_port: 443
    +ldap:
    +  enabled: false
    +  adjective:
    +external:
    +  port: 443
    +platform:
    +  public_url: https://ip-172-31-46-255.ap-south-1.compute.internal
    +  url: https://localhost
    +  user: pivotal
    +backbone_paginator_timeout: 120000
    +chef_documentation_url: https://docs.chef.io
    +disable_sign_up: false
    +email_from_address: Chef Notifications <notifications@chef.io>
    +nginx_addon_prefix: 30
    +org_creation_enabled: true
    +runit_timeout: 30
    +session_timeout: 1440
    +session_timeout_absolute: 10080
    +max_login_failures: 7
    +support_email_address: support@chef.io
    +support_site_url: https://chef.io/support
    +support_tickets_url: https://getchef.zendesk.com/hc/en-us/requests/new
    +chef_title: Chef Infra
    +disable_upgrade_banner: false
    +air_gapped: false
    +events: {}
    +google_analytics: {}
    +logging:
    +  chef_log_level: info
    +  log_level: info
    +marketo: {}
    +eloqua: {}
    +saml:
    +  enabled: false
    +  issuer_url: http://delivery/api/v0
    +  verify_tls: true
    +  adjective: SAML
    +recaptcha:
    +  enabled: false
    +  fail_open: true
    +  verify_url: https://www.google.com/recaptcha/api/siteverify
    +sentry: {}
    +secrets:
    +  provider: chef-secrets-env
    +  var_name: CHEF_SECRETS_DATA
    +marketplace:
    +  sign_up:
    +    enabled: false
    +    timeout: 3600
    +  sentinel:
    +    file: "/var/opt/chef-manage/marketplace_sentinel"
    +onetrust:
    +  enabled: false
    - change mode from '' to '0600'
    - change owner from '' to 'opscode'
  * link[/opt/chef-manage/embedded/service/chef-manage/config/settings/production.yml] action create
    - create symlink at /opt/chef-manage/embedded/service/chef-manage/config/settings/production.yml to /var/opt/chef-manage/etc/settings.yml
  * link[/opt/chef-manage/embedded/service/chef-manage/config/newrelic.yml] action create
    - create symlink at /opt/chef-manage/embedded/service/chef-manage/config/newrelic.yml to /var/opt/chef-manage/etc/newrelic.yml
  * link[/opt/chef-manage/embedded/service/chef-manage/tmp] action create
    - create symlink at /opt/chef-manage/embedded/service/chef-manage/tmp to /var/opt/chef-manage/tmp
  * directory[/var/opt/chef-manage/run] action create
    - create new directory /var/opt/chef-manage/run
    - change mode from '' to '0700'
    - change owner from '' to 'opscode'
Recipe: omnibus-chef-manage::redis
  * directory[/var/opt/chef-manage/lib/redis] action create
    - create new directory /var/opt/chef-manage/lib/redis
    - change mode from '' to '0700'
    - change owner from '' to 'opscode'
  * directory[/var/log/chef-manage/redis] action create
    - create new directory /var/log/chef-manage/redis
    - change mode from '' to '0700'
    - change owner from '' to 'opscode'
  * template[/var/opt/chef-manage/etc/redis.conf] action create
    - create new file /var/opt/chef-manage/etc/redis.conf
    - update content in file /var/opt/chef-manage/etc/redis.conf from none to 616508
    --- /var/opt/chef-manage/etc/redis.conf     2025-10-05 06:25:26.457305619 +0000
    +++ /var/opt/chef-manage/etc/.chef-redis20251005-48196-byu8t6.conf  2025-10-05 06:25:26.457305619 +0000
    @@ -1 +1,10 @@
    +# Redis configuration for chef-manage
    +#
    +# Generated by chef-manage-ctl reconfigure
    +
    +pidfile /var/opt/chef-manage/run/redis.pid
    +port 11002
    +bind 127.0.0.1
    +loglevel notice
    +dir /var/opt/chef-manage/lib/redis
    - change mode from '' to '0600'
    - change owner from '' to 'opscode'
  * component_runit_service[redis] action enable
    * template[/var/log/chef-manage/redis/config] action create
      - create new file /var/log/chef-manage/redis/config
      - update content in file /var/log/chef-manage/redis/config from none to 5e16ac
      --- /var/log/chef-manage/redis/config     2025-10-05 06:25:26.474305684 +0000
      +++ /var/log/chef-manage/redis/.chef-config20251005-48196-g9bbc5  2025-10-05 06:25:26.474305684 +0000
      @@ -1 +1,4 @@
      +# svlogd configuration
      +s104857600
      +n10
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
  Recipe: <Dynamically Defined Resource>
    * service[redis] action nothing (skipped due to action :nothing)
    * runit_service[redis] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/chef-manage/sv/redis] action create
        - create new directory /opt/chef-manage/sv/redis
        - change mode from '' to '0755'
      * template[/opt/chef-manage/sv/redis/run] action create
        - create new file /opt/chef-manage/sv/redis/run
        - update content in file /opt/chef-manage/sv/redis/run from none to 26c157
        --- /opt/chef-manage/sv/redis/run       2025-10-05 06:25:26.508305813 +0000
        +++ /opt/chef-manage/sv/redis/.chef-run20251005-48196-xoae9b    2025-10-05 06:25:26.507305809 +0000
        @@ -1 +1,11 @@
        +#!/bin/sh
        +
        +exec 2>&1
        +exec /opt/chef-manage/embedded/bin/chpst \
        +  -P \
        +  -U opscode \
        +  -u opscode \
        +  env \
        +  PATH=/opt/chef-manage/embedded/bin:$PATH \
        +  redis-server /var/opt/chef-manage/etc/redis.conf
        - change mode from '' to '0755'
      * directory[/opt/chef-manage/sv/redis/log] action create
        - create new directory /opt/chef-manage/sv/redis/log
      * directory[/opt/chef-manage/sv/redis/log/main] action create
        - create new directory /opt/chef-manage/sv/redis/log/main
        - change mode from '' to '0755'
      * directory[/var/log/redis] action create
        - create new directory /var/log/redis
        - change mode from '' to '0755'
      * template[/opt/chef-manage/sv/redis/log/config] action create
        - create new file /opt/chef-manage/sv/redis/log/config
        - update content in file /opt/chef-manage/sv/redis/log/config from none to e3b0c4
        (no diff)
        - change mode from '' to '0644'
      * link[/var/log/redis/config] action create
        - create symlink at /var/log/redis/config to /opt/chef-manage/sv/redis/log/config
      * template[/opt/chef-manage/sv/redis/log/run] action create
        - create new file /opt/chef-manage/sv/redis/log/run
        - update content in file /opt/chef-manage/sv/redis/log/run from none to 383757
        --- /opt/chef-manage/sv/redis/log/run   2025-10-05 06:25:26.541305938 +0000
        +++ /opt/chef-manage/sv/redis/log/.chef-run20251005-48196-52qesf        2025-10-05 06:25:26.541305938 +0000
        @@ -1 +1,4 @@
        +#!/bin/sh
        +exec /opt/chef-manage/embedded/bin/svlogd \
        +  -tt /var/log/chef-manage/redis
        - change mode from '' to '0755'
      * directory[/opt/chef-manage/sv/redis/env] action create
        - create new directory /opt/chef-manage/sv/redis/env
        - change mode from '' to '0755'
      * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
      * template[/opt/chef-manage/sv/redis/check] action create (skipped due to only_if)
      * template[/opt/chef-manage/sv/redis/finish] action create (skipped due to only_if)
      * directory[/opt/chef-manage/sv/redis/control] action create
        - create new directory /opt/chef-manage/sv/redis/control
        - change mode from '' to '0755'
      * link[/opt/chef-manage/init/redis] action create
        - create symlink at /opt/chef-manage/init/redis to /opt/chef-manage/embedded/bin/sv
      * file[/opt/chef-manage/sv/redis/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/sv/redis] action create (up to date)
        * template[/opt/chef-manage/sv/redis/run] action create (up to date)
        * directory[/opt/chef-manage/sv/redis/log] action create (up to date)
        * directory[/opt/chef-manage/sv/redis/log/main] action create (up to date)
        * directory[/var/log/redis] action create (up to date)
        * template[/opt/chef-manage/sv/redis/log/config] action create (up to date)
        * link[/var/log/redis/config] action create (up to date)
        * template[/opt/chef-manage/sv/redis/log/run] action create (up to date)
        * directory[/opt/chef-manage/sv/redis/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
        * template[/opt/chef-manage/sv/redis/check] action create (skipped due to only_if)
        * template[/opt/chef-manage/sv/redis/finish] action create (skipped due to only_if)
        * directory[/opt/chef-manage/sv/redis/control] action create (up to date)
        * link[/opt/chef-manage/init/redis] action create (up to date)
        * file[/opt/chef-manage/sv/redis/down] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/service] action create (up to date)
        * link[/opt/chef-manage/service/redis] action create
          - create symlink at /opt/chef-manage/service/redis to /opt/chef-manage/sv/redis
        * ruby_block[wait for redis service socket] action run
          - execute the ruby block wait for redis service socket
        - execute the ruby block restart_service
      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/sv/redis] action create (up to date)
        * template[/opt/chef-manage/sv/redis/run] action create (up to date)
        * directory[/opt/chef-manage/sv/redis/log] action create (up to date)
        * directory[/opt/chef-manage/sv/redis/log/main] action create (up to date)
        * directory[/var/log/redis] action create (up to date)
        * template[/opt/chef-manage/sv/redis/log/config] action create (up to date)
        * link[/var/log/redis/config] action create (up to date)
        * template[/opt/chef-manage/sv/redis/log/run] action create (up to date)
        * directory[/opt/chef-manage/sv/redis/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
        * template[/opt/chef-manage/sv/redis/check] action create (skipped due to only_if)
        * template[/opt/chef-manage/sv/redis/finish] action create (skipped due to only_if)
        * directory[/opt/chef-manage/sv/redis/control] action create (up to date)
        * link[/opt/chef-manage/init/redis] action create (up to date)
        * file[/opt/chef-manage/sv/redis/down] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/service] action create (up to date)
        * link[/opt/chef-manage/service/redis] action create (up to date)
        * ruby_block[wait for redis service socket] action run
          - execute the ruby block wait for redis service socket
        - execute the ruby block restart_log_service
      * directory[/opt/chef-manage/service] action create (up to date)
      * link[/opt/chef-manage/service/redis] action create (up to date)
      * ruby_block[wait for redis service socket] action run
        - execute the ruby block wait for redis service socket

    * runit_service[redis] action reload_log
      - reload log service

Recipe: omnibus-chef-manage::web
  * directory[/var/opt/chef-manage/etc] action create (up to date)
  * template[/var/opt/chef-manage/etc/unicorn.rb] action create
    - create new file /var/opt/chef-manage/etc/unicorn.rb
    - update content in file /var/opt/chef-manage/etc/unicorn.rb from none to 8b0ea2
    --- /var/opt/chef-manage/etc/unicorn.rb     2025-10-05 06:25:34.329335485 +0000
    +++ /var/opt/chef-manage/etc/.chef-unicorn20251005-48196-m5kq6q.rb  2025-10-05 06:25:34.328335481 +0000
    @@ -1 +1,35 @@
    +##
    +# Unicorn config at /var/opt/chef-manage/etc/unicorn.rb
    +# Managed by Chef - Local Changes will be Nuked from Orbit (just to be sure)
    +##
    +
    +# What ports/sockets to listen on, and what options for them.
    +listen "127.0.0.1:9462", {:backlog=>1024, :tcp_nodelay=>true}
    +
    +
    +# What the timeout for killing busy workers is, in seconds
    +timeout 3600
    +
    +# Whether the app should be pre-loaded
    +preload_app true
    +
    +# How many worker processes
    +worker_processes 2
    +
    +
    +
    +
    +# What to do after we fork a worker
    +after_fork do |server, worker|
    +
    +  Sidekiq.configure_server do |config|
    +    config.redis = { :url => 'redis://localhost:11002/0' }
    +  end
    +  Sidekiq.configure_client do |config|
    +    config.redis = { :url => 'redis://localhost:11002/0' }
    +  end
    +
    +end
    +
    +
    - change mode from '' to '0600'
    - change owner from '' to 'opscode'
  * ruby_block[warn-group-no-user] action run (skipped due to only_if)
  * template[/opt/chef-manage/embedded/service/chef-manage/config.ru] action create
    - update content in file /opt/chef-manage/embedded/service/chef-manage/config.ru from 257c24 to a4b801
    --- /opt/chef-manage/embedded/service/chef-manage/config.ru 2024-04-22 17:51:26.000000000 +0000
    +++ /opt/chef-manage/embedded/service/chef-manage/.chef-config20251005-48196-hk3o5n.ru      2025-10-05 06:25:34.347335554 +0000
    @@ -1,4 +1,23 @@
    -# This file is overwritten by omnibus-chef-manage::web recipe
    +# Chef Management Console config.ru is used by Rack-based servers to start
    +# the application.
    +#
    +# Generated by chef-manage-ctl reconfigure
    +
    +if defined?(Unicorn)
    +  require 'unicorn/worker_killer'
    +
    +  min_request = 3072
    +  max_request = 4096
    +
    +  # Max requests per worker
    +  use Unicorn::WorkerKiller::MaxRequests, min_request, max_request
    +
    +  min_memory = 125829120
    +  max_memory = 157286400
    +
    +  # Max memory size in bytes per worker
    +  use Unicorn::WorkerKiller::Oom, min_memory, max_memory
    +end

     require ::File.expand_path('../config/environment',  __FILE__)

    - change owner from 'root' to 'opscode'
  * component_runit_service[web] action enable
    * template[/var/log/chef-manage/web/config] action create
      - create new file /var/log/chef-manage/web/config
      - update content in file /var/log/chef-manage/web/config from none to 5e16ac
      --- /var/log/chef-manage/web/config       2025-10-05 06:25:34.366335626 +0000
      +++ /var/log/chef-manage/web/.chef-config20251005-48196-q4heta    2025-10-05 06:25:34.366335626 +0000
      @@ -1 +1,4 @@
      +# svlogd configuration
      +s104857600
      +n10
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
  Recipe: <Dynamically Defined Resource>
    * service[web] action nothing (skipped due to action :nothing)
    * runit_service[web] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/chef-manage/sv/web] action create
        - create new directory /opt/chef-manage/sv/web
        - change mode from '' to '0755'
      * template[/opt/chef-manage/sv/web/run] action create
        - create new file /opt/chef-manage/sv/web/run
        - update content in file /opt/chef-manage/sv/web/run from none to f01af4
        --- /opt/chef-manage/sv/web/run 2025-10-05 06:25:34.395335736 +0000
        +++ /opt/chef-manage/sv/web/.chef-run20251005-48196-5354pg      2025-10-05 06:25:34.394335732 +0000
        @@ -1 +1,23 @@
        +#!/bin/sh
        +export DIR=/opt/chef-manage/embedded/service/chef-manage
        +export SVWAIT=30
        +export PATH=/opt/chef-manage/embedded/bin:$PATH
        +export HOME=$DIR
        +
        +cd $DIR
        +exec 2>&1
        +exec veil-env-helper --pack -s manage.secret_token \
        +                            -s manage.secret_key_base \
        +                            -s chef-server.webui_key \
        +                            -o saml.client_id \
        +                            -o saml.client_secret \
        +                            -o recaptcha.site_key \
        +                            -o recaptcha.secret_key \
        +  -- /opt/chef-manage/embedded/bin/chpst \
        +  -P \
        +  -U opscode \
        +  -u opscode \
        +    bundle exec unicorn -E production \
        +      -c /var/opt/chef-manage/etc/unicorn.rb \
        +      /opt/chef-manage/embedded/service/chef-manage/config.ru
        - change mode from '' to '0755'
      * directory[/opt/chef-manage/sv/web/log] action create
        - create new directory /opt/chef-manage/sv/web/log
      * directory[/opt/chef-manage/sv/web/log/main] action create
        - create new directory /opt/chef-manage/sv/web/log/main
        - change mode from '' to '0755'
      * directory[/var/log/web] action create
        - create new directory /var/log/web
        - change mode from '' to '0755'
      * template[/opt/chef-manage/sv/web/log/config] action create
        - create new file /opt/chef-manage/sv/web/log/config
        - update content in file /opt/chef-manage/sv/web/log/config from none to e3b0c4
        (no diff)
        - change mode from '' to '0644'
      * link[/var/log/web/config] action create
        - create symlink at /var/log/web/config to /opt/chef-manage/sv/web/log/config
      * template[/opt/chef-manage/sv/web/log/run] action create
        - create new file /opt/chef-manage/sv/web/log/run
        - update content in file /opt/chef-manage/sv/web/log/run from none to 2cc622
        --- /opt/chef-manage/sv/web/log/run     2025-10-05 06:25:34.433335880 +0000
        +++ /opt/chef-manage/sv/web/log/.chef-run20251005-48196-igd5vt  2025-10-05 06:25:34.432335876 +0000
        @@ -1 +1,3 @@
        +#!/bin/sh
        +exec /opt/chef-manage/embedded/bin/svlogd -tt /var/log/chef-manage/web
        - change mode from '' to '0755'
      * directory[/opt/chef-manage/sv/web/env] action create
        - create new directory /opt/chef-manage/sv/web/env
        - change mode from '' to '0755'
      * ruby_block[Delete unmanaged env files for web service] action run (skipped due to only_if)
      * template[/opt/chef-manage/sv/web/check] action create (skipped due to only_if)
      * template[/opt/chef-manage/sv/web/finish] action create (skipped due to only_if)
      * directory[/opt/chef-manage/sv/web/control] action create
        - create new directory /opt/chef-manage/sv/web/control
        - change mode from '' to '0755'
      * link[/opt/chef-manage/init/web] action create
        - create symlink at /opt/chef-manage/init/web to /opt/chef-manage/embedded/bin/sv
      * file[/opt/chef-manage/sv/web/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/sv/web] action create (up to date)
        * template[/opt/chef-manage/sv/web/run] action create (up to date)
        * directory[/opt/chef-manage/sv/web/log] action create (up to date)
        * directory[/opt/chef-manage/sv/web/log/main] action create (up to date)
        * directory[/var/log/web] action create (up to date)
        * template[/opt/chef-manage/sv/web/log/config] action create (up to date)
        * link[/var/log/web/config] action create (up to date)
        * template[/opt/chef-manage/sv/web/log/run] action create (up to date)
        * directory[/opt/chef-manage/sv/web/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for web service] action run (skipped due to only_if)
        * template[/opt/chef-manage/sv/web/check] action create (skipped due to only_if)
        * template[/opt/chef-manage/sv/web/finish] action create (skipped due to only_if)
        * directory[/opt/chef-manage/sv/web/control] action create (up to date)
        * link[/opt/chef-manage/init/web] action create (up to date)
        * file[/opt/chef-manage/sv/web/down] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/service] action create (up to date)
        * link[/opt/chef-manage/service/web] action create
          - create symlink at /opt/chef-manage/service/web to /opt/chef-manage/sv/web
        * ruby_block[wait for web service socket] action run
          - execute the ruby block wait for web service socket
        - execute the ruby block restart_service
      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/sv/web] action create (up to date)
        * template[/opt/chef-manage/sv/web/run] action create (up to date)
        * directory[/opt/chef-manage/sv/web/log] action create (up to date)
        * directory[/opt/chef-manage/sv/web/log/main] action create (up to date)
        * directory[/var/log/web] action create (up to date)
        * template[/opt/chef-manage/sv/web/log/config] action create (up to date)
        * link[/var/log/web/config] action create (up to date)
        * template[/opt/chef-manage/sv/web/log/run] action create (up to date)
        * directory[/opt/chef-manage/sv/web/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for web service] action run (skipped due to only_if)
        * template[/opt/chef-manage/sv/web/check] action create (skipped due to only_if)
        * template[/opt/chef-manage/sv/web/finish] action create (skipped due to only_if)
        * directory[/opt/chef-manage/sv/web/control] action create (up to date)
        * link[/opt/chef-manage/init/web] action create (up to date)
        * file[/opt/chef-manage/sv/web/down] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/service] action create (up to date)
        * link[/opt/chef-manage/service/web] action create (up to date)
        * ruby_block[wait for web service socket] action run
          - execute the ruby block wait for web service socket
        - execute the ruby block restart_log_service
      * directory[/opt/chef-manage/service] action create (up to date)
      * link[/opt/chef-manage/service/web] action create (up to date)
      * ruby_block[wait for web service socket] action run
        - execute the ruby block wait for web service socket

    * runit_service[web] action reload_log
      - reload log service

Recipe: omnibus-chef-manage::web
  * ruby_block[update marketplace signup sentinel atime] action run (skipped due to only_if)
Recipe: omnibus-chef-manage::worker
  * component_runit_service[worker] action enable
    * template[/var/log/chef-manage/worker/config] action create
      - create new file /var/log/chef-manage/worker/config
      - update content in file /var/log/chef-manage/worker/config from none to 5e16ac
      --- /var/log/chef-manage/worker/config    2025-10-05 06:25:37.791348619 +0000
      +++ /var/log/chef-manage/worker/.chef-config20251005-48196-9x36cj 2025-10-05 06:25:37.790348615 +0000
      @@ -1 +1,4 @@
      +# svlogd configuration
      +s104857600
      +n10
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
  Recipe: <Dynamically Defined Resource>
    * service[worker] action nothing (skipped due to action :nothing)
    * runit_service[worker] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/chef-manage/sv/worker] action create
        - create new directory /opt/chef-manage/sv/worker
        - change mode from '' to '0755'
      * template[/opt/chef-manage/sv/worker/run] action create
        - create new file /opt/chef-manage/sv/worker/run
        - update content in file /opt/chef-manage/sv/worker/run from none to 18d4c3
        --- /opt/chef-manage/sv/worker/run      2025-10-05 06:25:37.827348755 +0000
        +++ /opt/chef-manage/sv/worker/.chef-run20251005-48196-bbbrcx   2025-10-05 06:25:37.826348752 +0000
        @@ -1 +1,17 @@
        +#!/bin/sh
        +export DIR=/opt/chef-manage/embedded/service/chef-manage
        +export SVWAIT=30
        +export PATH=/opt/chef-manage/embedded/bin:$PATH
        +export HOME=$DIR
        +
        +cd $DIR
        +exec 2>&1
        +exec veil-env-helper --pack -s manage.secret_token \
        +                            -s manage.secret_key_base \
        +                            -s chef-server.webui_key \
        +  -- /opt/chef-manage/embedded/bin/chpst \
        +  -P \
        +  -U opscode \
        +  -u opscode \
        +     bundle exec sidekiq -e production
        - change mode from '' to '0755'
      * directory[/opt/chef-manage/sv/worker/log] action create
        - create new directory /opt/chef-manage/sv/worker/log
      * directory[/opt/chef-manage/sv/worker/log/main] action create
        - create new directory /opt/chef-manage/sv/worker/log/main
        - change mode from '' to '0755'
      * directory[/var/log/worker] action create
        - create new directory /var/log/worker
        - change mode from '' to '0755'
      * template[/opt/chef-manage/sv/worker/log/config] action create
        - create new file /opt/chef-manage/sv/worker/log/config
        - update content in file /opt/chef-manage/sv/worker/log/config from none to e3b0c4
        (no diff)
        - change mode from '' to '0644'
      * link[/var/log/worker/config] action create
        - create symlink at /var/log/worker/config to /opt/chef-manage/sv/worker/log/config
      * template[/opt/chef-manage/sv/worker/log/run] action create
        - create new file /opt/chef-manage/sv/worker/log/run
        - update content in file /opt/chef-manage/sv/worker/log/run from none to 9bb439
        --- /opt/chef-manage/sv/worker/log/run  2025-10-05 06:25:37.867348907 +0000
        +++ /opt/chef-manage/sv/worker/log/.chef-run20251005-48196-lio410       2025-10-05 06:25:37.867348907 +0000
        @@ -1 +1,3 @@
        +#!/bin/sh
        +exec /opt/chef-manage/embedded/bin/svlogd -tt /var/log/chef-manage/worker
        - change mode from '' to '0755'
      * directory[/opt/chef-manage/sv/worker/env] action create
        - create new directory /opt/chef-manage/sv/worker/env
        - change mode from '' to '0755'
      * ruby_block[Delete unmanaged env files for worker service] action run (skipped due to only_if)
      * template[/opt/chef-manage/sv/worker/check] action create (skipped due to only_if)
      * template[/opt/chef-manage/sv/worker/finish] action create (skipped due to only_if)
      * directory[/opt/chef-manage/sv/worker/control] action create
        - create new directory /opt/chef-manage/sv/worker/control
        - change mode from '' to '0755'
      * link[/opt/chef-manage/init/worker] action create
        - create symlink at /opt/chef-manage/init/worker to /opt/chef-manage/embedded/bin/sv
      * file[/opt/chef-manage/sv/worker/down] action nothing (skipped due to action :nothing)
      * ruby_block[restart_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/sv/worker] action create (up to date)
        * template[/opt/chef-manage/sv/worker/run] action create (up to date)
        * directory[/opt/chef-manage/sv/worker/log] action create (up to date)
        * directory[/opt/chef-manage/sv/worker/log/main] action create (up to date)
        * directory[/var/log/worker] action create (up to date)
        * template[/opt/chef-manage/sv/worker/log/config] action create (up to date)
        * link[/var/log/worker/config] action create (up to date)
        * template[/opt/chef-manage/sv/worker/log/run] action create (up to date)
        * directory[/opt/chef-manage/sv/worker/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for worker service] action run (skipped due to only_if)
        * template[/opt/chef-manage/sv/worker/check] action create (skipped due to only_if)
        * template[/opt/chef-manage/sv/worker/finish] action create (skipped due to only_if)
        * directory[/opt/chef-manage/sv/worker/control] action create (up to date)
        * link[/opt/chef-manage/init/worker] action create (up to date)
        * file[/opt/chef-manage/sv/worker/down] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/service] action create (up to date)
        * link[/opt/chef-manage/service/worker] action create
          - create symlink at /opt/chef-manage/service/worker to /opt/chef-manage/sv/worker
        * ruby_block[wait for worker service socket] action run
          - execute the ruby block wait for worker service socket
        - execute the ruby block restart_service
      * ruby_block[restart_log_service] action run
        * ruby_block[restart_service] action nothing (skipped due to action :nothing)
        * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/sv/worker] action create (up to date)
        * template[/opt/chef-manage/sv/worker/run] action create (up to date)
        * directory[/opt/chef-manage/sv/worker/log] action create (up to date)
        * directory[/opt/chef-manage/sv/worker/log/main] action create (up to date)
        * directory[/var/log/worker] action create (up to date)
        * template[/opt/chef-manage/sv/worker/log/config] action create (up to date)
        * link[/var/log/worker/config] action create (up to date)
        * template[/opt/chef-manage/sv/worker/log/run] action create (up to date)
        * directory[/opt/chef-manage/sv/worker/env] action create (up to date)
        * ruby_block[Delete unmanaged env files for worker service] action run (skipped due to only_if)
        * template[/opt/chef-manage/sv/worker/check] action create (skipped due to only_if)
        * template[/opt/chef-manage/sv/worker/finish] action create (skipped due to only_if)
        * directory[/opt/chef-manage/sv/worker/control] action create (up to date)
        * link[/opt/chef-manage/init/worker] action create (up to date)
        * file[/opt/chef-manage/sv/worker/down] action nothing (skipped due to action :nothing)
        * directory[/opt/chef-manage/service] action create (up to date)
        * link[/opt/chef-manage/service/worker] action create (up to date)
        * ruby_block[wait for worker service socket] action run
          - execute the ruby block wait for worker service socket
        - execute the ruby block restart_log_service
      * directory[/opt/chef-manage/service] action create (up to date)
      * link[/opt/chef-manage/service/worker] action create (up to date)
      * ruby_block[wait for worker service socket] action run
        - execute the ruby block wait for worker service socket

    * runit_service[worker] action reload_log
      - reload log service

Recipe: omnibus-chef-manage::events_disable
  * service[events] action nothing (skipped due to action :nothing)
  * runit_service[events] action disable
    * ruby_block[disable events] action run (skipped due to only_if)
     (up to date)
Recipe: omnibus-chef-manage::nginx
  * service[nginx] action nothing (skipped due to action :nothing)
  * template[/var/opt/opscode/nginx/etc/addon.d/30-chef-manage_upstreams.conf] action create
    - create new file /var/opt/opscode/nginx/etc/addon.d/30-chef-manage_upstreams.conf
    - update content in file /var/opt/opscode/nginx/etc/addon.d/30-chef-manage_upstreams.conf from none to 8b8e0d
    --- /var/opt/opscode/nginx/etc/addon.d/30-chef-manage_upstreams.conf        2025-10-05 06:25:40.496358881 +0000
    +++ /var/opt/opscode/nginx/etc/addon.d/.chef-30-chef-manage_upstreams20251005-48196-7i9pr7.conf     2025-10-05 06:25:40.495358877 +0000
    @@ -1 +1,8 @@
    +# Chef Management Console Nginx config upstreams
    +#
    +# Generated by chef-manage-ctl reconfigure
    +
    +upstream chef_manage_webapp {
    +  server 127.0.0.1:9462;
    +}
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * file[/var/opt/opscode/nginx/etc/addon.d/30-opscode-manage_upstreams.conf] action delete (up to date)
  * template[/var/opt/opscode/nginx/etc/addon.d/30-chef-manage_internal.conf] action create
    - create new file /var/opt/opscode/nginx/etc/addon.d/30-chef-manage_internal.conf
    - update content in file /var/opt/opscode/nginx/etc/addon.d/30-chef-manage_internal.conf from none to ec5842
    --- /var/opt/opscode/nginx/etc/addon.d/30-chef-manage_internal.conf 2025-10-05 06:25:40.518358965 +0000
    +++ /var/opt/opscode/nginx/etc/addon.d/.chef-30-chef-manage_internal20251005-48196-2t7rdk.conf      2025-10-05 06:25:40.518358965 +0000
    @@ -1 +1,4 @@
    +# Chef Management Console Nginx config for internal LB
    +#
    +# Generated by chef-manage-ctl reconfigure
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * file[/var/opt/opscode/nginx/etc/addon.d/30-opscode-manage_internal.conf] action delete (up to date)
  * template[/var/opt/opscode/nginx/etc/addon.d/30-chef-manage_external.conf] action create
    - create new file /var/opt/opscode/nginx/etc/addon.d/30-chef-manage_external.conf
    - update content in file /var/opt/opscode/nginx/etc/addon.d/30-chef-manage_external.conf from none to fae77f
    --- /var/opt/opscode/nginx/etc/addon.d/30-chef-manage_external.conf 2025-10-05 06:25:40.541359052 +0000
    +++ /var/opt/opscode/nginx/etc/addon.d/.chef-30-chef-manage_external20251005-48196-wamak0.conf      2025-10-05 06:25:40.541359052 +0000
    @@ -1 +1,19 @@
    +# Chef Management Console Nginx config for External LB.
    +#
    +# Generated by chef-manage-ctl reconfigure
    +
    +add_header Referrer-Policy 'strict-origin';
    +add_header Permissions-Policy "camera=(), payment=(), microphone=(), gyroscope=(), magnetometer=(), midi=(), geolocation=()";
    +
    +# Asset configuration
    +location ~ ^/assets/ {
    +  root /opt/chef-manage/embedded/service/chef-manage/public;
    +  expires 1y;
    +  add_header Cache-Control public;
    +
    +  add_header ETag "";
    +  break;
    +}
    +
    +set $add_on_override_upstream "chef_manage_webapp";
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * file[/var/opt/opscode/nginx/etc/addon.d/30-opscode-manage_external.conf] action delete (up to date)
  * template[/var/opt/opscode/nginx/etc/nginx.d/manage.conf] action delete (up to date)
Recipe: omnibus-chef-manage::default
  * link[/usr/bin/chef-manage-ctl] action create (up to date)
  * link[/usr/bin/opscode-manage-ctl] action create (up to date)
  * file[/var/opt/chef-manage/etc/chef-manage-running.json] action create
    - create new file /var/opt/chef-manage/etc/chef-manage-running.json
    - update content in file /var/opt/chef-manage/etc/chef-manage-running.json from none to 7a7bae
    --- /var/opt/chef-manage/etc/chef-manage-running.json       2025-10-05 06:25:40.586359223 +0000
    +++ /var/opt/chef-manage/etc/.chef-chef-manage-running20251005-48196-jqqzpr.json    2025-10-05 06:25:40.585359219 +0000
    @@ -1 +1,152 @@
    +{
    +  "chef-manage": {
    +    "sysvinit_id": "CM",
    +    "chef_base_path": "/opt/opscode",
    +    "install_path": "/opt/chef-manage",
    +    "var_path": "/var/opt/chef-manage",
    +    "config_path": "/var/opt/chef-manage/etc",
    +    "log_path": "/var/log/chef-manage",
    +    "tmp_path": "/var/opt/chef-manage/tmp",
    +    "web": {
    +      "log_directory": "/var/log/chef-manage/web",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      }
    +    },
    +    "worker": {
    +      "log_directory": "/var/log/chef-manage/worker",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      }
    +    },
    +    "redis": {
    +      "log_directory": "/var/log/chef-manage/redis",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "host": "localhost",
    +      "port": 11002,
    +      "url": "redis://localhost:11002/0"
    +    },
    +    "services": {
    +      "web": {
    +        "enable": true
    +      },
    +      "worker": {
    +        "enable": true
    +      },
    +      "events": {
    +
    +      }
    +    },
    +    "webapp": {
    +      "worker_processes": 2,
    +      "port": 9462,
    +      "listen": "127.0.0.1:9462",
    +      "backlog": 1024,
    +      "tcp_nodelay": true,
    +      "worker_timeout": 3600,
    +      "min_request": 3072,
    +      "max_request": 4096,
    +      "min_memory": 120,
    +      "max_memory": 150
    +    },
    +    "ssl_verify_mode": "verify_none",
    +    "trusted_certs_dir": "",
    +    "ssl_client_cert": "",
    +    "ssl_client_key": "",
    +    "ssl_ca_file": "",
    +    "user": {
    +      "username": "opscode",
    +      "shell": "/bin/sh",
    +      "home": "/opt/opscode/embedded"
    +    },
    +    "fqdn": "ip-172-31-46-255.ap-south-1.compute.internal",
    +    "chef_server_external_url": "https://ip-172-31-46-255.ap-south-1.compute.internal",
    +    "chef_server_internal_url": "https://localhost",
    +    "origin": "ip-172-31-46-255.ap-south-1.compute.internal",
    +    "public_port": 443,
    +    "ldap": {
    +      "enabled": false,
    +      "adjective": null
    +    },
    +    "external": {
    +      "port": 443
    +    },
    +    "platform": {
    +      "public_url": "https://ip-172-31-46-255.ap-south-1.compute.internal",
    +      "url": "https://localhost",
    +      "user": "pivotal"
    +    },
    +    "backbone_paginator_timeout": 120000,
    +    "chef_documentation_url": "https://docs.chef.io",
    +    "disable_sign_up": false,
    +    "email_from_address": "Chef Notifications <notifications@chef.io>",
    +    "nginx_addon_prefix": 30,
    +    "org_creation_enabled": true,
    +    "runit_timeout": 30,
    +    "session_timeout": 1440,
    +    "session_timeout_absolute": 10080,
    +    "max_login_failures": 7,
    +    "support_email_address": "support@chef.io",
    +    "support_site_url": "https://chef.io/support",
    +    "support_tickets_url": "https://getchef.zendesk.com/hc/en-us/requests/new",
    +    "chef_title": "Chef Infra",
    +    "disable_upgrade_banner": false,
    +    "air_gapped": false,
    +    "events": {
    +
    +    },
    +    "google_analytics": {
    +
    +    },
    +    "logging": {
    +      "chef_log_level": "info",
    +      "log_level": "info"
    +    },
    +    "marketo": {
    +
    +    },
    +    "eloqua": {
    +
    +    },
    +    "saml": {
    +      "enabled": false,
    +      "issuer_url": "http://delivery/api/v0",
    +      "verify_tls": true,
    +      "adjective": "SAML"
    +    },
    +    "recaptcha": {
    +      "enabled": false,
    +      "fail_open": true,
    +      "verify_url": "https://www.google.com/recaptcha/api/siteverify"
    +    },
    +    "sentry": {
    +
    +    },
    +    "secrets": {
    +      "provider": "chef-secrets-env",
    +      "var_name": "CHEF_SECRETS_DATA"
    +    },
    +    "marketplace": {
    +      "sign_up": {
    +        "enabled": false,
    +        "timeout": 3600
    +      },
    +      "sentinel": {
    +        "file": "/var/opt/chef-manage/marketplace_sentinel"
    +      }
    +    },
    +    "onetrust": {
    +      "enabled": false
    +    }
    +  },
    +  "run_list": [
    +  "recipe[omnibus-chef-manage::default]"
    +]
    +
    +}
    - change mode from '' to '0600'
    - change owner from '' to 'opscode'
    - change group from '' to 'root'
Recipe: omnibus-chef-manage::redis
  * component_runit_service[redis] action restart
  Recipe: <Dynamically Defined Resource>
    * service[redis] action nothing (skipped due to action :nothing)
    * runit_service[redis] action restart (up to date)
     (up to date)
Recipe: omnibus-chef-manage::web
  * component_runit_service[web] action restart
  Recipe: <Dynamically Defined Resource>
    * service[web] action nothing (skipped due to action :nothing)
    * runit_service[web] action restart (up to date)
     (up to date)
Recipe: omnibus-chef-manage::nginx
  * service[nginx] action restart
    - restart service service[nginx]

Running handlers:
Running handlers complete
Infra Phase complete, 96/273 resources updated in 29 seconds
[2025-10-05T06:25:46+00:00] WARN: This release of Chef Infra Client became end of life (EOL) on May 1st 2023. Please update to a supported release to receive new features, bug fixes, and security updates.
chef-manage Reconfigured!
root@ip-172-31-46-255:/home/ubuntu#
Broadcast message from root@ip-172-31-46-255 (Sun 2025-10-05 06:26:40 UTC):

The system will power off now!


Broadcast message from root@ip-172-31-46-255 (Sun 2025-10-05 06:26:40 UTC):

The system will power off now!

Connection to 65.2.175.106 closed by remote host.
Connection to 65.2.175.106 closed.
PS C:\Users\Gaurav.26\Downloads\repo\Linux-mac> ssh -i .\id_rsa ubuntu@13.126.70.233
The authenticity of host '13.126.70.233 (13.126.70.233)' can't be established.
ED25519 key fingerprint is SHA256:Ch3/vQzcv2laEk+ejEZwPBcUWY/fQWNo0Mby71t/a8Y.
This host key is known by the following other names/addresses:
    C:\Users\Gaurav.26/.ssh/known_hosts:141: 65.2.175.106
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '13.126.70.233' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04.3 LTS (GNU/Linux 6.14.0-1014-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Sun Oct  5 06:08:49 UTC 2025

  System load:  0.0               Processes:             116
  Usage of /:   50.9% of 6.71GB   Users logged in:       0
  Memory usage: 10%               IPv4 address for enX0: 172.31.46.255
  Swap usage:   0%


Expanded Security Maintenance for Applications is not enabled.

12 updates can be applied immediately.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


Last login: Sun Oct  5 06:08:50 2025 from 103.146.111.66
ubuntu@ip-172-31-46-255:~$ sudo su
root@ip-172-31-46-255:/home/ubuntu#
